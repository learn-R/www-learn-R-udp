[{"authors":null,"categories":null,"content":"Aquí podrán encontrar recursos y guías extras sobre uso de R, datos y otros tópicos relevantes.\n","date":1628812800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1628812800,"objectID":"e5656835a9d5f0c69a44e56dc2b58101","permalink":"/resource/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/","section":"resource","summary":"Aquí podrán encontrar recursos y guías extras sobre uso de R, datos y otros tópicos relevantes.","tags":null,"title":"Recursos","type":"docs"},{"authors":null,"categories":null,"content":"Visit this section after you have finished the readings and lecture videos. It contains fully annotated R code and other supplementary information and it will be indispensable as you work on your problem sets and project.\nMany sections also contain videos of me live coding the examples so you can see what it looks like to work with R in real time. You\u0026rsquo;ll notice me make all sorts of little errors, which is totally normal—everyone does!\n","date":1631750400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1631750400,"objectID":"e9b55dc35cd7c0402d035e510f00bf75","permalink":"/example/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/example/","section":"example","summary":"Visit this section after you have finished the readings and lecture videos. It contains fully annotated R code and other supplementary information and it will be indispensable as you work on your problem sets and project.","tags":null,"title":"Prácticos (códigos de ejemplo)","type":"docs"},{"authors":null,"categories":null,"content":"Cada sesión de clases está dividida por una pestaña que puedes ver al costado izquierdo de tu pantalla. Dentro de cada página por sesión podrás encontrar\n (Slides) que es la presentación mostrada en clases. Encontrarás estos botones de modo de facilitar la descarga de la presentación y explorar las presentaciones   Ver las slides en una nueva ventana  Descargar las slides en PDF\nLa presentación también se puede ver directamente desde el sitio web del curso. Puedes presionar estas presentaciones y puedes navegar en ellas con ← y →. Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver una lista de comandos que te permitirán interactuar con ellos (por ejemplo, f sirve para ver en pantalla completa. También p modo presentador si quieres ver las notas. El lápiz en la esquina derecha te permite dejar tus propias notas).\n  Video de la grabación de la clase, que además estará disponible en la nube de Zoom\n  Material asociado a la clase, lo que incluye los ejemplos prácticos y contenido adicional que puede potenciar sus aprendizajes.\n  ","date":1631491200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1631491200,"objectID":"8899c927408853efa5f455eaa551e047","permalink":"/content/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/content/","section":"content","summary":"Cada sesión de clases está dividida por una pestaña que puedes ver al costado izquierdo de tu pantalla. Dentro de cada página por sesión podrás encontrar\n (Slides) que es la presentación mostrada en clases.","tags":null,"title":"Clases, prácticos y materiales","type":"docs"},{"authors":null,"categories":null,"content":"The main goals of this class are to help you design, critique, code, and run rigorous, valid, and feasible evaluations of public sector programs. Each type of assignment in this class is designed to help you achieve one or more of these goals.\nWeekly check-in Every week, after you finish working through the content, I want to hear about what you learned and what questions you still have. To facilitate this, and to encourage engagement with the course content, you\u0026rsquo;ll need to fill out a short response on iCollege. This should be ≈150 words. That\u0026rsquo;s fairly short: there are ≈250 words on a typical double-spaced page in Microsoft Word (500 when single-spaced).\nYou should answer these two questions each week:\n What was the most exciting thing you learned from the session? Why? What was the muddiest thing from the session this week? What are you still wondering about?  I will grade these check-ins using a check system:\n ✔+: (11.5 points (115%) in gradebook) Response shows phenomenal thought and engagement with the course content. I will not assign these often. ✔: (10 points (100%) in gradebook) Response is thoughtful, well-written, and shows engagement with the course content. This is the expected level of performance. ✔−: (5 points (50%) in gradebook) Response is hastily composed, too short, and/or only cursorily engages with the course content. This grade signals that you need to improve next time. I will hopefully not assign these often.  Notice that is essentially a pass/fail or completion-based system. I\u0026rsquo;m not grading your writing ability, I\u0026rsquo;m not counting the exact number of words you\u0026rsquo;re writing, and I\u0026rsquo;m not looking for encyclopedic citations of every single reading to prove that you did indeed read everything. I\u0026rsquo;m looking for thoughtful engagement, that\u0026rsquo;s all. Do good work and you\u0026rsquo;ll get a ✓.\nYou will submit these responses via iCollege.\nProblem sets To practice writing R code, running inferential models, and thinking about causation, you will complete a series of problem sets.\nThere are 9 problem sets on the schedule. I will keep the highest grades for 8 of them. That is, I will drop the lowest score (even if it\u0026rsquo;s a zero). This means you can skip one of the problem sets. You need to show that you made a good faith effort to work each question. I will not grade these in detail. The problem sets will be graded using a check system:\n ✔+: (33 points (110%) in gradebook) Assignment is 100% completed. Every question was attempted and answered, and most answers are correct. Document is clean and easy to follow. Work is exceptional. I will not assign these often. ✔: (30 points (100%) in gradebook) Assignment is 70–99% complete and most answers are correct. This is the expected level of performance. ✔−: (15 points (50%) in gradebook) Assignment is less than 70% complete and/or most answers are incorrect. This indicates that you need to improve next time. I will hopefully not asisgn these often.  You may (and should!) work together on the problem sets, but you must turn in your own answers. You cannot work in groups of more than four people, and you must note who participated in the group in your assignment.\nEvaluation assignments For your final project, you will conduct a pre-registered evaluation of a social program using synthetic data. To (1) give you practice with the principles of program evaluation, research design, measurement, and causal diagrams, and (2) help you with the foundation of your final project, you will complete a set of four evaluation-related assignments.\nIdeally these will become major sections of your final project. However, there is no requirement that the programs you use in these assignments must be the same as the final project. If, through these assignments, you discover that your initially chosen program is too simple, too complex, too boring, etc., you can change at any time.\nThese assignments will be graded using a check system:\n ✔+: (33 points (110%) in gradebook) Assignment is 100% completed. Every question was attempted and answered, and most answers are correct. Document is clean and easy to follow. Work is exceptional. I will not assign these often. ✔: (30 points (100%) in gradebook) Assignment is 70–99% complete and most answers are correct. This is the expected level of performance. ✔−: (15 points (50%) in gradebook) Assignment is less than 70% complete and/or most answers are incorrect. This indicates that you need to improve next time. I will hopefully not asisgn these often.  Exams There will be two exams covering (1) program evaluation, design, and causation, and (2) the core statistical tools of program evaluation and causal inference.\nYou will take these exams online through iCollege. The exams will have a time limit, but you can use notes and readings and the Google. You must take the exams on your own though, and not talk to anyone about them.\nFinal project At the end of the course, you will demonstrate your knowledge of program evaluation and causal inference by completing a final project.\nComplete details for the final project are here.\nThere is no final exam. This project is your final exam.\n","date":1618790400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1618790400,"objectID":"e18c399687bc0897ffd6503c7a1bbb8e","permalink":"/assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignment/","section":"assignment","summary":"The main goals of this class are to help you design, critique, code, and run rigorous, valid, and feasible evaluations of public sector programs. Each type of assignment in this class is designed to help you achieve one or more of these goals.","tags":null,"title":"Assignment details","type":"docs"},{"authors":null,"categories":null,"content":"Contenido 1. R R es un lenguaje de programación y software de código abierto, empleado en procesamiento, análisis y visualización de datos estadísticos, altamente extendibles.\nVentajas: Las principales ventajas son:\n  Es un lenguaje de programación destacado en lo que respecta al análisis estadístico\n  Es de acceso y código abierto\n  Permite graficar el análisis y los datos estadísticos de forma eficiente y llamativa\n  Se encuentra en constante actualización y desarrollo\n  Para descargar R, deben dirigirse al siguiente link, y seguir los pasos de instalación según su sistema operativo. Para el caso de Windows y macOS, se debe descargar el instalador de R, ejecutarlo, y proseguir con la instalación. Lo recomendado es instalarlo en español, y mantener las opciones de instalación que vienen por defecto.\nA continuación, se presentan imágenes del proceso de instalación de R en Windows\nSe aceptan las condiciones de uso\nSe define la carpeta de instalación. Pueden escoger donde deseen realizar la instalación clickeando en examinar; no obstante, se recomienda mantener la ruta predeterminada, en Archivos de programa\nSe recomienda seleccionar la Instalación de usuario\nAsimismo, también es recomendable no especificar las opciones de configuración\nSi se desea, se pueden crear accesos directos. Lo que sí es importante, es guardar el número de versión en el registro, y asociar archivos .RData con R (lo análogo a asociar archivos .sav con SPSS, o archivos .dta con STATA)\nParticularmente para el caso de macOS, es indispensable la instalación de XQuartz, pues este software nos permitirá visualizar, por ejemplo, los gráficos que elaboremos en R. Para ello, debemos dirigirnos al siguiente enlace, descargar la última versión disponible del software, y seguir el proceso de instalación. Tal como en el caso de R, lo recomendado es mantener la configuración predeterminada.\nPara el caso de Ubuntu, la versión 4.1 de R (que es la actual) viene incluida para gran parte de las versiones de Ubuntu. Para poder ejecutarlas, deben abrir el terminal y ejecutar los siguientes códigos (disponibles en el mirror de Ubuntu):\nSiguiendo los pasos anteriores, la instalación de R está finalizada.\nSin embargo, para laborar y aprender de manera más cómoda y eficiente, este curso trabajará principalmente con RStudio.\n2. RStudio Es un ambiente integrado de desarrollo para R (y Python, otro lenguaje de programación, que no se abordará en este curso), que permite visualizar el trabajo llevado a cabo, de manera más cómoda, sencilla y eficiente.\nPara instalarlo, deben dirigirse a la siguiente página web. Allí, en la sección All Installers, seleccionar el instalador correspondiente a su sistema operativo.\nEl proceso de instalación es el mismo que para R. Simplemente, se recomienda mantener todo en predeterminado.\n2.1. RStudio Cloud Sin embargo, también está la opción de trabajar en RStudio Cloud, en caso que sus computadores no presenten los requerimientos mínimimos para trabajar con RStudio de manera local. Para poder trabajar en RStudio Cloud, debemos crear un usuario. Sin embargo, primero crearemos un usuario en GitHub, para luego conectarse a RStudio Cloud desde allí.\nEntonces, debemos dirigirnos a la página de GitHub. Allí, debemos hacer click en Sign up.\nUna vez allí, debemos ingresar nuestro correo electrónico, y luego seguir los pasos que se encuentran en el correo de confirmación. Es recomendable que creen la cuenta con la dirección de correo electrónico que usen cotidianamente.\nPosteriormente, nos dirigimos a la página de RStudio Cloud, y hacemos click en Sign Up.\nVolvemos a hacer click en Sign Up\nLuego, hacemos click en Sign Up with GitHub\nSe nos redirigirá a la página de GitHub, donde debemos ingresar los datos del usuario de GitHub que creamos en pasos anteriores.\nUna vez realizado todo lo anterior, ingresaremos a RStudio Cloud. Allí, encontraremos nuestro espacio de trabajo (Your Workspace), donde podremos encontrar nuestros proyectos.\nHaciendo click en la pestaña Projects, situada en la pestaña superior, aparecerá el botón New Project. Al pulsarlo, podremos crear un nuevo proyecto.\nLuego, se generará el nuevo proyecto. Es importante que renombremos el nuevo proyecto, haciendo click en el recuadro que se encuentra en la sección superior (en este caso, el proyecto se nombró como Proyecto 1).\nPara cargar archivos (como bases de datos, o archivos .R), debemos hacer click en el botón Upload, situado en la sección Files situada en la esquina inferior derecha. Aparecerá una ventana emergente, y debemos hacer click en Seleccionar archivo, para explorar en nuestra computadora los archivos que necesitemos para trabajar.\nTambién podemos exportar el proyecto (con todos sus archivos asociados), haciendo click en el botón More (al lado del engranaje). Es importante que hagamos click en las casillas situadas a la izquierda de todos los archivos que deseemos descargar.\nEn la sección superior derecha, encontraremos un engranaje. En la pestaña Info encontraremos la información general del proyecto; además, podremos agregar una descripción general de este.\nA la derecha de Info, encontraremos la pestaña Access. Allí, podremos cambiar quiénes pueden ver el proyecto. Por defecto, solamente quien creó el proyecto puede verlo; sin embargo, podemos permitir que cualquiera (Everyone) pueda hacerlo.\nPara poder compartir nuestros proyectos, debemos hacer click en los tres puntos situados a la derecha del engranaje, y luego hacer click en Share Project Link. Aparecerá una ventana emergente, donde podemos agregar las direcciones de correo electrónico de todas las personas que queramos invitar al proyecto. También podemos agregar un mensaje a la invitación.\n3. Slack Este software será el principal medio de comunicación en el marco del curso. Allí, las y los estudiantes podrán plantear todas sus dudas, para que estas puedan ser respondidas de forma colectiva, tanto por parte del equipo docente, como de otras y otros estudiantes.\nPrimero, debemos descargar el instalador de Slack, dependiendo de nuestro sistema operativo:\n Windows macOS Linux  En la siguiente imagen, está el ejemplo de Windows (64 bits)\nUna vez descargado el archivo, debemos ejecutarlo, y seguir el proceso de instalación. Tal como en el resto de los software instalados, recomendamos mantener todas las opciones de instalación por defecto.\nLuego, debemos crear una cuenta de Slack, dirigiéndose a la siguiente página web. Se recomienda usar la dirección de correo que usen de forma cotidiana, a modo de estar al tanto de la actividad en el canal de Slack.\nPosteriormente, deben confirmar su correo electrónico y, por último, han de hacer click en el link Unirse a slack de curso, presente en el apartado Syllabus de la página web. Ello redireccionará a la aplicación, abriendo allí el espacio de trabajo del curso.\nUna vez realizado aquello, debemos permitir que la página web abra la aplicación de Slack, y se nos redirigirá al espacio de trabajo del curso.\nA la izquierda, encontraremos los diversos canales asignados para distintas actividades. Aquellos que tengan a la izquierda un #, son canales abiertos a todas y todos quienes integren el espacio de trabajo; mientras que aquellos que tengan un candado a su izquierda son canales privados. Haciendo click en añadir canales, podemos crear nuevos canales (lo cual pueden hacer cuando, en el futuro, utilicen Slack para sus trabajos personales).\nBajo los canales encontraremos la sección de mensajes directos, donde podremos enviar mensajes privados a cualquier persona que integre el espacio de trabajo. No olviden que pueden comunicarnos todas sus dudas, inquietudes y sugerencias respecto del curso.\nEn la sección superior derecha encontraremos nuestro usuario.\nSi hacemos click, se abrirá una pestaña emergente, donde podremos acceder a diversas configuraciones.\nEn Modificar tu perfil, podemos cambiar nuestro nombre, describir a qué nos dedicamos, definir nuestros pronombres, entre otros elementos. También, podemos seleccionar una foto de perfil, para que el resto de las personas que integren el espacio de trabajo puedan (re)conocernos.\nEn la sección de Preferencias, podremos establecer diferentes configuraciones referentes, por ejemplo, a las notificaciones, la barra lateral, o seleccionar distintos temas, para personalizar la apariencia de nuestro espacio de trabajo.\nUna vez realizado todo lo anterior ¡Ya estamos listas y listos para empezar a trabajar en el curso! 4. Video tutorial en Youtube Recuerden que el video de asociado a este práctico y muchos más podrán encontrarlos en el canal de youtube del curso\n\r\r","date":1628812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628812800,"objectID":"c5e6c5f0d0baae071e282245bbba803c","permalink":"/resource/install/","publishdate":"2021-08-13T00:00:00Z","relpermalink":"/resource/install/","section":"resource","summary":"Contenido 1. R R es un lenguaje de programación y software de código abierto, empleado en procesamiento, análisis y visualización de datos estadísticos, altamente extendibles.\nVentajas: Las principales ventajas son:","tags":null,"title":"Instalación de R, RStudio y Slack","type":"docs"},{"authors":null,"categories":null,"content":"\r\r\rLa presente entrada es una traducción del artículo Data types in R elaborado por Antoine Soetewey (2019).\nEste artículo presenta los diferentes tipos de datos (data types) en R. Para aprender sobre diferentes tipos de variables desde un punto de vista estadístico, diríjanse a la entrada Tipos de variables y ejemplos, disponible en la sección Recursos.\n¿Qué tipos de datos existen en R?\rLos 6 tipos de datos más comunes en R son:\nNumeric\rInteger\rComplex\rCharacter\rFactor\rLogical\r\rLos sets de datos en R usualmente constituyen una combinación de estos 6 tipos diferentes de datos. Más adelante, exploraremos en mayor detalle cada tipo de dato, exceptuando el tipo “complex”, en tanto nos enfocaremos en los principales, y este tipo de dato rara vez es utilizado en la práctica.\n\rNumeric\rEl tipo de dato más común en R es numeric. Una variable o una serie será almacenado como un dato numérico si sus valores son números, o si tales valores contienen decimales. Por ejemplo, las siguientes dos series son almacenadas como numeric de forma predeterminada:\n# Series numeric sin decimales\rnum_data \u0026lt;- c(3, 7, 2)\rnum_data\r## [1] 3 7 2\rclass(num_data)\r## [1] \u0026quot;numeric\u0026quot;\r# Series numeric con decimales\rnum_data_dec \u0026lt;- c(3.4, 7.1, 2.9)\rnum_data_dec\r## [1] 3.4 7.1 2.9\rclass(num_data_dec)\r## [1] \u0026quot;numeric\u0026quot;\r# También podemos chequear la clase con la función str() str(num_data_dec)\r## num [1:3] 3.4 7.1 2.9\rEn otras palabras, si se asigna uno o varios números a un objeto en R, este se almacenará como numeric de forma predeterminada (números con decimales), a menos que se especifique algo distinto.\n\rInteger\rLos datos de tipo Integer son, de hecho, un tipo particular de datos numericos. Los Integer (enteros) son datos numéricos sin decimales. Pueden ser utilizados si es que estás seguro/a de que los números almacenados nunca incorporarán decimales. Por ejemplo, digamos que estás interesada/o en el número de hijas/os en una muestra de 10 familias. Esta variable es discreta (para repasar estos contenidos, diríjanse a la entrada Tipos de variables y ejemplos), y nunca tendrá decimales. De estemodo, estos datos pueden almacenarse como integer gracias a la función as.integer():\nchildren\r## [1] 1 3 2 2 4 4 1 1 1 4\rchildren \u0026lt;- as.integer(children)\rclass(children)\r## [1] \u0026quot;integer\u0026quot;\rHay que considerar que si la variable no tiene decimales, R automáticamente establecerá el tipo de datos como integer en lugar de numeric.\n\rCharacter\rLos datos de tipo character son utilizados al almacenar texto, conocido como strings en R. La forma más simple de almacenar datos en formato character es usando \"\" alrededor del texto:\nchar \u0026lt;- \u0026quot;some text\u0026quot;\rchar\r## [1] \u0026quot;some text\u0026quot;\rclass(char)\r## [1] \u0026quot;character\u0026quot;\rSi deseas forzar a que cualquier tipo de dato sea almacenado como character, puedes hacerlo con la función as.character():\nchar2 \u0026lt;- as.character(children)\rchar2\r## [1] \u0026quot;1\u0026quot; \u0026quot;3\u0026quot; \u0026quot;2\u0026quot; \u0026quot;2\u0026quot; \u0026quot;4\u0026quot; \u0026quot;4\u0026quot; \u0026quot;1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;1\u0026quot; \u0026quot;4\u0026quot;\rclass(char2)\r## [1] \u0026quot;character\u0026quot;\rHay que notar que cualquier elemento entre \"\" será considerado como character, sin importar si luce como character o no. Por ejemplo:\nchars \u0026lt;- c(\u0026quot;7.42\u0026quot;)\rchars\r## [1] \u0026quot;7.42\u0026quot;\rclass(chars)\r## [1] \u0026quot;character\u0026quot;\rAdemás, en la medida que exista al menos un valor character dentro de una variable o vector, este será considerado como character:\nchar_num \u0026lt;- c(\u0026quot;text\u0026quot;, 1, 3.72, 4)\rchar_num\r## [1] \u0026quot;text\u0026quot; \u0026quot;1\u0026quot; \u0026quot;3.72\u0026quot; \u0026quot;4\u0026quot;\rclass(char_num)\r## [1] \u0026quot;character\u0026quot;\rPor último, pese a que los espacios no importen en datos numéricos, estos sí son relevantes en datos character:\nnum_space \u0026lt;- c(1)\rnum_nospace \u0026lt;- c(1)\r# ¿Es num_space igual a num_nospace?\rnum_space == num_nospace\r## [1] TRUE\rchar_space \u0026lt;- \u0026quot;text \u0026quot;\rchar_nospace \u0026lt;- \u0026quot;text\u0026quot;\r# ¿Es char_space igual a char_nospace?\rchar_space == char_nospace\r## [1] FALSE\rComo pueden ver en los resultados anteriores, un espacio en datos de tipo character (por ejemplo, entre \"\") lo convierte en un string diferente para R\n\rFactor\rLas variables Factor son un caso especial de variables character, en el sentido de que también contienen texto.Sin embargo, las variables factor son utilizadas cuando existe un número limitado de strings character únicas. Usualmente representan una variable categórica. Por ejemplo, el sexo usualmente toma sólo dos valores, “masculino” y “femenino” (y será considerado una variable factor), mientras que el nombre generalmente presentará montones de posibilidades (de modo que será considerado una variable character). Para crear un factor, empleamos la función factor() :\ngender \u0026lt;- factor(c(\u0026quot;female\u0026quot;, \u0026quot;female\u0026quot;, \u0026quot;male\u0026quot;, \u0026quot;female\u0026quot;, \u0026quot;male\u0026quot;))\rgender\r## [1] female female male female male ## Levels: female male\rPara conocer los diferentes niveles (levels) de una variable factor, ocupamos la función levels():\nlevels(gender)\r## [1] \u0026quot;female\u0026quot; \u0026quot;male\u0026quot;\rDe manera predeterminada, los niveles son ordenados alfabéticamente. Estos pueden ser reordenados con el argumento levels de la función factor():\ngender \u0026lt;- factor(gender, levels = c(\u0026quot;male\u0026quot;, \u0026quot;female\u0026quot;))\rlevels(gender)\r## [1] \u0026quot;male\u0026quot; \u0026quot;female\u0026quot;\rLas strings character pueden convertirse en factores con la función as.factor():\ntext \u0026lt;- c(\u0026quot;test1\u0026quot;, \u0026quot;test2\u0026quot;, \u0026quot;test1\u0026quot;, \u0026quot;test1\u0026quot;) # Crear un vector character\rclass(text) # Conocer la clase\r## [1] \u0026quot;character\u0026quot;\rtext_factor \u0026lt;- as.factor(text) # Transformar a factor\rclass(text_factor) # Re-conocer la clase\r## [1] \u0026quot;factor\u0026quot;\rLas strings character han sido transformadas en factor, como muestra su clase de tipo factor.\n\rLogical\rUna variable logical (lógica) es una variable que incluye sólo dos valores: TRUE or FALSE:\nvalue1 \u0026lt;- 7\rvalue2 \u0026lt;- 9\r# ¿Es value1 mayor a value2?\rgreater \u0026lt;- value1 \u0026gt; value2\rgreater\r## [1] FALSE\rclass(greater)\r## [1] \u0026quot;logical\u0026quot;\r# ¿Es value1 menor o igual a value2?\rless \u0026lt;- value1 \u0026lt;= value2\rless\r## [1] TRUE\rclass(less)\r## [1] \u0026quot;logical\u0026quot;\rTambién es posible transformar datos logical en datos numeric. Luego de transformar de logical a numeric con la función as.numeric(), los valores FALSE equivaldrán a 0, y los valores TRUE equivaldrán a 1:\ngreater_num \u0026lt;- as.numeric(greater)\rsum(greater)\r## [1] 0\rless_num \u0026lt;- as.numeric(less)\rsum(less)\r## [1] 1\rPor su parte, datos numeric pueden convertirse en datos logical, con FALSE para todos los valores iguales a 0 y TRUE para todos los otros valores.\nx \u0026lt;- 0\ras.logical(x)\r## [1] FALSE\ry \u0026lt;- 5\ras.logical(y)\r## [1] TRUE\r¡Gracias por leer! Esperamos que este artículo les ayude a entender los tipos básicos de datos en R y sus particularidades. Si desean aprender más sobre diferentes tipos de variables desde un puntos de vista estadístico, lean Tipos de variables y ejemplos.\nComo siempre, si tienen alguna pregunta o sugerencia relacionada con el tópico cubierto en este artículo, por favor coméntenlo por los canales de comunicación del curso, para que otras/os lectoras/es puedan beneficiarse de la discusión.\n\r","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"79d06afd25962e4b06a7be0b405b1376","permalink":"/resource/r-datatypes/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/r-datatypes/","section":"resource","summary":"La presente entrada es una traducción del artículo Data types in R elaborado por Antoine Soetewey (2019).\nEste artículo presenta los diferentes tipos de datos (data types) en R.","tags":null,"title":"Tipos de datos en R","type":"docs"},{"authors":null,"categories":null,"content":"\r\r\r\r\r\rLa presente entrada es una traducción del artículo Variable types and examples\r elaborado por Antoine Soetewey (2019).\nEste artículo presenta los diferentes tipos de variables desde un punto de vista estadístico. Para aprender sobre los diferentes tipos de datos en R, revisen Tipos de datos en R.\nImágen panorámica\rEn estadística, las variables son clasificadas en 4 tipos diferentes:\n\r{\"x\":{\"diagram\":\"digraph {\\n\\n\\n\\n\\n \\\"1\\\" [label = \\\"Variable\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Variable\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"2\\\" [label = \\\"Cualitativa\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Cualitativa\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"3\\\" [label = \\\"Nominal\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Nominal\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"4\\\" [label = \\\"Ordinal\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Ordinal\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"5\\\" [label = \\\"Cuantitativa\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Cuantitativa\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"6\\\" [label = \\\"Discreta\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Discreta\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"7\\\" [label = \\\"Continua\\\", style = \\\"filled,rounded\\\", shape = \\\"box\\\", fontname = \\\"helvetica\\\", tooltip = \\\"- name: Continua\\\", fillcolor = \\\"LightGray\\\", fontcolor = \\\"#000000\\\"] \\n \\\"1\\\"-\\\"2\\\" \\n \\\"1\\\"-\\\"5\\\" \\n \\\"2\\\"-\\\"3\\\" \\n \\\"2\\\"-\\\"4\\\" \\n \\\"5\\\"-\\\"6\\\" \\n \\\"5\\\"-\\\"7\\\" \\n}\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]}\r\rCuantitativas\rUna variable cuantitativa es aquella que refleja una noción de magnitud, es decir, cuyos valores posibles son números. Así, una variable cuantitativa representa una medida y es numérica.\nLas variables cuantitativas se dividen en dos tipos: discretas y continuas. La diferencia entre ambas se explicará en las siguientes dos secciones.\nDiscretas\rVariables cuantitativas discretas son aquellas cuyos valores posibles pueden ser contabilizados y tienen un número finito de posibilidades. Los valores tienden a ser (aunque no siempre) enteros. Aquí hay algunos ejemplos de variables discretas:\n\rNúmero de hijas/os por familia\rNúmero de estudiantes en una clase\rNúmero de ciudadanos/as en un país\r\rPese a que pueda tomar un largo tiempo el contar a las y los ciudadanas/os de un gran país, esto es técnicamente factible. Más aún, para todos los ejemplos, el número de posibilidades es finito. Cualquiera sea el número de hijas/os en una familia, este nunca será 3.58 o 7.912, de modo que el número de posibilidades es un número finito y, de esa manera, contabilizable.\n\rContinuas\rPor otra parte, las variables cuantitativas continuas son aquellas cuyos valores no son contabilizables, teniendo un número infinito de posibilidades. Por ejemplo:\n\rEdad\rPeso\rAltura\r\rPara simplificar, usualmente nos referimos a años, kilogramos (libras) y centímetros (o pies y pulgadas), para edad, peso y altura respectivamente. Sin embargo, una persona de 28 años puede realmenter tener 28 años, 7 meses, 16 días, 3 horas, 4 minutos, 5 segundos, 31 milisegundos, 9 nanosegundos de edad.\nPara todas las mediciones, usualmente nos detenemos en un nivel estándar de granularidad, pero nada (excepto nuestras herramientas medición) nos impide ir más allá, llevándonos a un número infinito de valores potenciales. El hecho de que los valores puedan tomar un número infinito de posibilidades lo hace incontabilizable.\n\r\rCualitativas\rEn oposición a las variables cuantitativas, las variables cualitativas (también referidas como variables categóricas o factores en R) son variables que no son numéricas y cuyos valores encajan en categorías.\nEn otras palabras, una variable cualitativa es aquella que toma como valores modalidades, categorías o incluso niveles, en contraste con variables cuantitativas que miden una cantidad en cada individuo.\nLas variables cualitativas se dividen en dos tipos: nominales y ordinales.\nNominales\rUna variable cualitativa nominal es aquella en que ordenar no es posible ni está implicado en los niveles (levels). Por ejemplo, la variable género es nominal porque no hay orden en los niveles femenino/masculino. El color de ojos es otro ejemplo de una variable nominal, pues no hay orden entre ojos azules, cafés o verdes.\nUna variable nominal puede contemplar dos niveles (por ejemplo ¿eres fumador/a? Sí/No, o ¿cuál es tu género? Femenino/Masculina), o un extenso número de niveles (¿cuál es tu licenciatura universitaria? donde cada tipo de licenciatura (sociología, psicología, física, entre otras) constituye un nivel).\n\rOrdinales\rPor otra parte, una variable cualitativa ordinal implica un orden asignado a los niveles. Por ejemplo, si la gravedad de accidentes de tránsito es medida en una escala como leve, moderada y fatal, esta variable es cualitativa ordinal en tanto hay un claro orden entre los niveles.\nOtro buen ejemplo es la salud, cuyos valores posible son pobre, razonable, buena o excelente. De nuevo, hay un claro orden en estas variables, de modo que la salud en este caso constituye una variable ordinal cualitativa.\n\r\rTransformación de variables\rHay dos formas principales de transformación de variables:\nDe variable continua a variable discreta\rDe variable cuantitativa a variable cualitativa\r\rDe continua a discreta\rDigamos que estamos interesados/as en edades de bebés. Los datos coleccionados es la edad de los bebés, siendo una variable cuantitativa continua. Sin embargo, trabajaremos sólo con el número de semanas desde el nacimiento, transformando así a la edad en una variable discreta. La variable edad sigue siendo cuantitativa, pero la variable que estamos trabajando (en este caso, el número de semanas desde el nacimiento) es una variable cuantitativa discreta.\n\rDe cuantitativa a cualitativa\rDigamos que estamos interesadas/os en el Índice de Masa Corporal (IMC). Para esto, las/los investigadoras/os coleccionaron datos sobre altura y peso de individuos, calculando su IMC. El IMC es una variable cuantitativa continua, pero las/los investigadoras/os desean transformarla en una variable cualitativa, categorizando a las personas bajo cierto límite en bajo peso, sobre cierto límite en sobre peso, y al resto como peso normal. El IMC inicial es una variable cuantitativa continua, pero la categorización del IMC la transforma en una variable cualitativa (ordinal), cuyos niveles son bajo peso \u0026lt; normal \u0026lt; sobre peso.\nLo mismo sucede cuando la edad es transformada en una variable cualitativa ordinal con niveles como menores de edad, adultos y adultos mayores. También suele ser el caso (especialmente en encuestas) cuando la variable salario (cuantitativa continua) es transformada n una variable cualitativa ordinal que contempla diferentes rangos de salarios (por ejemplo, $0 - $100.000, $100.001 - $200.000, etc.)\n\r\rNotas adicionales\rDiferentes tipos de variables para diferentes tipos de análisis estadísticos\rLa razón por la cual usualmente clasificamos variables en diferentes tipos es que no todos los análisis estadísticos pueden realizar para todos los tipos de variables. Por ejemplo, es imposible calcular una media de la variable “color de cabello”, al no poder sumar cabello castaño y cabello rubio.\nPor otra parte, hallar la moda de una variable continua no hace mucho sentido, pues la mayor parte del tiempo no habrá dos valores exactamente iguales, de modo que no existirá moda. Por ejemplo, intentar encontrar la moda de la altura de las y los estudiantes de un curso. Si se tiene suerte, un par de estudiantes medirán lo mismo. No obstante, la mayor parte del tiempo, cada estudiante tendrá un tamaño diferente (especialmente si las alturas han sido medidas en milímetros), de modo que no habrá moda. Para ver que tipo de análisis es posible en cada variable, pueden hacer una revisión más detallada en los artículos “Descriptive statistics by hand” y “Descriptive statistics in R”.\nDe forma semejante, algunos tests estadísticos sólo pueden realizarse en cierto tipo de variables, Por ejemplo, una correlación sólo puede calcularse para variables cuantitativas, mientras que un test Chi-cuadrado de independencia se realiza con variables cualitativas, y un test T-Student o ANOVA requiere una combinación de variables cuantitativas y cualitativas.\n\rCodificación engañosa de datos\rPor último, pero no menos importante, es usual que en algunos set de datos se empleen números para variables cualitativas. Por ejemplo, un/a investigador/a puede asignar el número “1” a mujer y el número “2” a hombre (o “0” a la respuesta “No” y “1” a la respuesta “Sí). Pese a la clasificación numérica, la variable género sigue siendo una variable cualitativa, y no una discreta, como pareciera. La clasficación numérica sólo es utilizada para facilitar la recolección y tratamiento de datos. Es, de hecho, más sencillo escribir”1\" o “2” en lugar de “mujer” y “hombre”, disminuyendo la posibilidad de errores de codificación.\nSi te enfrentas a este tipo de configuración, no olvides transformar la variable en el tipo correcto antes de realizar análisis estadísticos. Usualmente, un análisis descriptivo básico (y el conocimiento sobre las variable que han sido medidas) previo a los análisis estadísticos principales basta para identificar si el tipo de las variables es correcto.\nGracias por leer. Esperamos que este artículo les ayude a comprender los diferentes tipos de variables. Si desean aprender más sobre los distintos tipos de datos en R, lean la entrada Tipos de datos en R.\nComo siempre, si tienen alguna pregunta o sugerencia relacionada con el tópico cubierto en este artículo, por favor coméntenlo por los canales de comunicación del curso, para que otras/os lectoras/es puedan beneficiarse de la discusión.\n\r\r","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3fe7b544f56982d7bb2e3bc702600f1f","permalink":"/resource/r-datatypes-examples/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/r-datatypes-examples/","section":"resource","summary":"La presente entrada es una traducción del artículo Variable types and examples\r elaborado por Antoine Soetewey (2019).\nEste artículo presenta los diferentes tipos de variables desde un punto de vista estadístico.","tags":null,"title":"Tipos de variables y ejemplos","type":"docs"},{"authors":null,"categories":null,"content":"Debido a que los Rproject de RStudio normalmente consisten en múltiples archivos (scripts de R, conjuntos de datos, salida gráfica, etc.) la forma más fácil de distribuirlos para los ejemplos, tareas y proyectos es combinar todos los diferentes archivos en una sola colección comprimida llamada archivo comprimido.\nCuando descomprimes un archivo comprimido, tu sistema operativo extrae todos los archivos que contiene en una nueva carpeta de tu ordenador.\nDescomprimir archivos en macOS es trivial, pero descomprimir archivos en Windows puede ser molesto, si no sigues los siguientes pasos. Aquí tienes una guía útil para descomprimir archivos tanto en macOS como en Windows.\nDescomprimir archivos en macOS Haz doble clic en el archivo .zip descargado. macOS creará automáticamente una nueva carpeta con el mismo nombre que el archivo .zip, y todo el contenido del archivo estará dentro. Haz doble clic en el archivo de proyecto de RStudio (.Rproj) para empezar.\nknitr::include_graphics(\u0026#34;/img/unzipping/unzip-mac.png\u0026#34;, error = FALSE) Descomprimir archivos en Windows tl;dr: Haz clic con el botón derecho del ratón en el archivo .zip, selecciona \u0026ldquo;Extraer todo\u0026hellip;\u0026rdquo;, y trabaja con la carpeta descomprimida resultante.\nA diferencia de macOS, Windows no descomprime automáticamente las cosas por ti. Si haces doble clic en el archivo .zip, Windows te mostrará lo que hay dentro, pero lo hará sin extraer nada. ¡Esto puede ser increíblemente confuso! Esto es lo que parece: las únicas pistas de que esta carpeta es realmente un archivo .zip son que hay una pestaña de \u0026ldquo;Herramientas de carpetas comprimidas\u0026rdquo; en la parte superior, y hay una columna de \u0026ldquo;Ratio\u0026rdquo; que muestra cuánto está comprimido cada archivo.\nEs muy tentador intentar abrir archivos desde esta vista. Sin embargo, si lo hace, las cosas se romperán y no podrá trabajar correctamente con ninguno de los archivos de la carpeta comprimida. Si abre el archivo del Proyecto R, por ejemplo, RStudio apuntará a un extraño directorio de trabajo enterrado en alguna carpeta temporal:\nLo más probable es que no puedas abrir ningún archivo de datos ni guardar nada, lo cual será frustrante.\nEn lugar de eso, tienes que hacer clic con el botón derecho del ratón en el archivo .zip y seleccionar \u0026ldquo;Extraer todo\u0026hellip;\u0026quot;:\nA continuación, elige dónde quieres descomprimir todos los archivos y haz clic en \u0026ldquo;Extraer\u0026rdquo;\nFinalmente deberías tener una carpeta real con todo el contenido del archivo comprimido. Abre el archivo del proyecto R y RStudio apuntará al directorio de trabajo correcto y todo funcionará.\n","date":1628812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628812800,"objectID":"f1b04d7939933ed26af8d5a9fe95387f","permalink":"/resource/unzipping/","publishdate":"2021-08-13T00:00:00Z","relpermalink":"/resource/unzipping/","section":"resource","summary":"Debido a que los Rproject de RStudio normalmente consisten en múltiples archivos (scripts de R, conjuntos de datos, salida gráfica, etc.) la forma más fácil de distribuirlos para los ejemplos, tareas y proyectos es combinar todos los diferentes archivos en una sola colección comprimida llamada archivo comprimido.","tags":null,"title":"Descomprimir archivos","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo del práctico Este práctico tiene por objetivo introducir el trabajo estadístico con muestras complejas en R, es decir, cuando se trabaja con muestras que busquen ser representativas de la población a estudiar, bajo determinados parámetros. Buscaremos calcular estimadores puntuales e intervalos de confianza, que nos permiten reportar el error asociado a la inferencia.\n1. Recursos del práctico El presente práctico será realizado con datos de la Encuesta de Caracterización Socioeconómica (CASEN) en su versión 2020. Estos datos ya han sido previamente procesados para su correcta realización, recodificando y eliminando casos perdidos, y renombrando y seleccionando variables. Esto es muy importante: para trabajar correctamente con muestreos complejos, deben asegurarse de que los datos estén bien preparados para ello.\nRecuerden siempre consultar el manual/libro de códigos antes de trabajar una base de datos.\n2. Librerías a utilizar Utilizaremos las siguientes librerías:\n  pacman: para facilitar y agilizar la lectura de los paquetes a utilizar en R\n  sjmisc: para explorar datos\n  srvyr: para trabajar con objetos encuesta, y realizar cálculos en diálogo con dplyr\n  dplyr: para manipular datos\n  tidyr: para pivotear la estructura de los datos\n  Pasos del procesamiento 1. Cargar librerías Cargamos los paquetes anteriormente señalados:\npacman::p_load(tidyverse, sjmisc, srvyr, dplyr, tidyr) 2. Cargar datos Como se señaló anteriormente, trabajaremos con datos de CASEN 2020, ya procesados con anterioridad\ndim(data) ## [1] 185339 7 Como podemos ver, estos datos tienen 185.339 filas (observaciones), así como 7 columnas. Inspeccionemos:\nhead(data) ## # A tibble: 6 x 7 ## exp varunit varstrat region pobreza ing_tot_hog sexo ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; ## 1 67 3 1 Tarapacá No pobres 390833 Mujer ## 2 67 3 1 Tarapacá No pobres 390833 Mujer ## 3 67 3 1 Tarapacá No pobres 947583 Mujer ## 4 67 3 1 Tarapacá No pobres 947583 Hombre ## 5 67 3 1 Tarapacá No pobres 947583 Mujer ## 6 67 3 1 Tarapacá No pobres 3004167 Hombre Tenemos tanto variables numéricas (exp, varunit, varstrat e ing_tot_hog) como factores (region, pobreza y sexo). ¡Explorémoslas!\n3. Explorar datos Con frq() de sjmisc, exploraremos las categorías de las variables factor:\nfrq(data$region) ## ## x \u0026lt;categorical\u0026gt; ## # total N=185339 valid N=185339 mean=8.79 sd=4.23 ## ## Value | N | Raw % | Valid % | Cum. % ## ----------------------------------------------------- ## Tarapacá | 8386 | 4.52 | 4.52 | 4.52 ## Antofagasta | 7597 | 4.10 | 4.10 | 8.62 ## Atacama | 7393 | 3.99 | 3.99 | 12.61 ## Coquimbo | 8159 | 4.40 | 4.40 | 17.01 ## Valparaíso | 18501 | 9.98 | 9.98 | 27.00 ## OHiggins | 12346 | 6.66 | 6.66 | 33.66 ## Maule | 12423 | 6.70 | 6.70 | 40.36 ## Biobío | 17669 | 9.53 | 9.53 | 49.89 ## La Araucanía | 11858 | 6.40 | 6.40 | 56.29 ## Los Lagos | 10511 | 5.67 | 5.67 | 61.96 ## Aysén | 4579 | 2.47 | 2.47 | 64.43 ## Magallanes | 5087 | 2.74 | 2.74 | 67.18 ## Metropolitana | 39266 | 21.19 | 21.19 | 88.37 ## Los Ríos | 7992 | 4.31 | 4.31 | 92.68 ## Arica y Parinacota | 7224 | 3.90 | 3.90 | 96.57 ## Ñuble | 6348 | 3.43 | 3.43 | 100.00 ## \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; frq(data$pobreza) ## ## x \u0026lt;categorical\u0026gt; ## # total N=185339 valid N=185339 mean=2.84 sd=0.48 ## ## Value | N | Raw % | Valid % | Cum. % ## ------------------------------------------------------ ## Pobres extremos | 8439 | 4.55 | 4.55 | 4.55 ## Pobres no extremos | 12891 | 6.96 | 6.96 | 11.51 ## No pobres | 164009 | 88.49 | 88.49 | 100.00 ## \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; frq(data$sexo) ## ## Sexo (x) \u0026lt;categorical\u0026gt; ## # total N=185339 valid N=185339 mean=1.54 sd=0.50 ## ## Value | N | Raw % | Valid % | Cum. % ## ----------------------------------------- ## Hombre | 86091 | 46.45 | 46.45 | 46.45 ## Mujer | 99248 | 53.55 | 53.55 | 100.00 ## \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; Como podemos ver, region provee información sobre la región a la que pertenecen los hogares; pobreza nos provee información respecto de la situación de pobreza por ingresos (o no) de los hogares; y sexo, información sobre el sexo de la persona que responde el cuestionario.\nAhora vamos con descr() de sjmisc para las variables numéricas\ndescr(data$exp) #Ponderador regional ## ## ## Basic descriptive statistics ## ## var type label n NA.prc mean sd se md trimmed range ## dd numeric dd 185339 0 105.39 157.05 0.36 79 88.54 19042 (4-19046) ## iqr skew ## 78 70.57 sum(data$exp) #Total de la población ## [1] 19532480 descr(data$varstrat) #Estrato de varianza ## ## ## Basic descriptive statistics ## ## var type label n NA.prc mean sd se md trimmed range iqr ## dd numeric dd 185339 0 294.34 185.06 0.43 319 298.56 587 (1-588) 346 ## skew ## -0.22 descr(data$varunit) #Conglomerado de varianza ## ## ## Basic descriptive statistics ## ## var type label n NA.prc mean sd se md trimmed range ## dd numeric dd 185339 0 739.42 439.72 1.02 744 739.27 1493 (1-1494) ## iqr skew ## 778 -0.01 descr(data$ing_tot_hog) ## ## ## Basic descriptive statistics ## ## var type label n NA.prc mean sd se md trimmed ## dd numeric dd 185339 0 1085076 1574919 3658.26 731009 835756 ## range iqr skew ## 225200000 (0-225200000) 785357 27.45 ing_tot_hog presenta información respecto de los ingresos totales de los hogares; exp es el ponderador regional, cuya suma es el número total de habitantes de la población objetivo; varstrat provee información sobre el estrato de varianza; y varunit sobre el conglomerado de varianza, es decir, la unidad mínima de observación que, en este caso, son los hogares. Estas últimas tres variables serán sumamente relevantes para este práctico.\n4. Cálculo con muestras complejas Una vez explorados nuestros datos, es hora de empezar a realizar nuestros cálculos con muestras complejas. Para ello, lo primero es crear un objeto encuesta de modo que, posteriormente, podamos calcular promedios con nuestras variables cuantitativas, y proporciones para nuestras variables categóricas (entre muchos otros estimadores).\na) Creación de objeto encuesta (srvyr) Como ya se señaló, lo primero es crear un objeto encuesta (survey). Este corresponde a una lista (List) que nos permitirá realizar los cálculos que deseemos, considerando las varables de diseño (en este caso, varunit, varstrat y exp). Para ello, utilizaremos la función as_survey_design() de la librería srvyr. Sin embargo, primero crearemos la variable stratn, para obtener la cantidad de personas por estrato a nivel poblacional\ndata \u0026lt;- data %\u0026gt;% group_by(varstrat) %\u0026gt;% #Agrupando por varstrat mutate(stratn = sum(exp)) #Calculamos el total de personas por estrato Construimos el objeto encuesta:\ncasen_regional \u0026lt;- data %\u0026gt;% #Creamos un nuevo objeto llamado casen_regional con la información de data as_survey_design(ids = varunit, #Aplicamos diseño muestral, especificando los ids a partir de varunit, strata = varstrat,#los estratos a partir de varstrat, fpc = stratn, #especificando que la estimación es con una población finita weights = exp) #y los ponderadores con exp Fijándonos en nuestro entorno, nos daremos cuenta de que se creó una lista con 9 elementos llamada casen_regional. Si bien la información que nos entrega por sí sólo nos resulta algo críptica, este objeto nos permitirá realizar cálculos aplicando las variables de diseño muestral complejo. Algo interesante de los objetos encuesta creados con srvyr, es que podemos interactuar con las funciones de dplyr, como group_by() o summarise(). Es decir, nos permite trabajar con listas como si fueran un data frame (datos tabulados) incluyendo, por ejemplo, el uso de metadata.\ncluster nos presenta información sobre los conglomerados de varianza, o la unidad mínima de inferencia. strata, sobre los estratos de varianza, unidades que integran a los conglomerados de varianza. prob y allprob proveen información sobre la probabilidad de cada sujeto de ser seleccionado en una muestra al azar. variables nos presenta todas las variables incluidas en la lista. Por último, fpc provee información sobre los tamaños de la población y la muestra.\nb) Cálculo de medias para variables numéricas Una vez creado nuestro objeto encuesta, podemos realizar diversos tipos de cálculos. Calculemos, por ejemplo, la media de ingresos a nivel poblacional, con la función survey_mean() de srvyr\ncasen_regional %\u0026gt;% #Con casen_regional summarise(ing_medio = survey_mean(ing_tot_hog, na.rm=T)) #Calculamos el ingreso medio poblacional ## ing_medio ing_medio_se ## 1 1156457 17959.72 Comparemos con la media calculada a nivel muestral:\ndata %\u0026gt;% #Con data summarise(ing_medio = mean(ing_tot_hog, na.rm=T)) #Calculamos el ingreso medio poblacional ## # A tibble: 293 x 2 ## varstrat ing_medio ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 1 1273303. ## 2 3 887193. ## 3 4 888278. ## 4 5 859793. ## 5 10 1343414. ## 6 15 1253377. ## 7 18 955954. ## 8 19 932739. ## 9 22 1184469. ## 10 23 804117. ## # ... with 283 more rows Efectivamente, la estimación a nivel poblacional (o parámetro) es superior a la estimación muestral. Sin embargo, trabajar con muestras complejas siempre significará considerar un posible error de medición. El trabajar con muestras representativas (aunque no sean aleatorias) nos permitirá realizar nuestros cálculos, conociendo la probabilidad de equivocarnos en nuestra estimación. Es decir, podemos conocer el nivel de confianza (o el nivel de error) de nuestras estimaciones, a partir de ciertas características de la muestra.\nEn virtud de ello, survey_mean() también nos permite incorporar los intervalos de confianza, especificando vartype = \u0026quot;ci\u0026quot;:\ncasen_regional %\u0026gt;%#Con casen_regional summarise(ing_medio = survey_mean(ing_tot_hog, vartype = \u0026#34;ci\u0026#34;, na.rm=T)) #Calculamos el  ## ing_medio ing_medio_low ing_medio_upp ## 1 1156457 1121220 1191694 #ingreso medio poblacional,  #y sus intervalos de confianza El argumento level =  nos permite especificar el nivel de confianza que estamos dispuestas/os a aceptar. Comparemos el cálculo de la media de ingresos a un 95% y a un 99% de confianza\ncasen_regional %\u0026gt;% #Con casen_regional summarise(ing_medio95 = survey_mean(ing_tot_hog, vartype = \u0026#34;ci\u0026#34;, level = .95, na.rm=T), #Al 95% ing_medio99 = survey_mean(ing_tot_hog, vartype = \u0026#34;ci\u0026#34;, level = .99, na.rm=T)) #Al 99% ## ing_medio95 ing_medio95_low ing_medio95_upp ing_medio99 ing_medio99_low ## 1 1156457 1121220 1191694 1156457 1110121 ## ing_medio99_upp ## 1 1202794 Trabajar con un mayor nivel de confianza nos permitirá estar más seguras/os de que nuestra estimación incluirá al parámetro poblacional. Sin embargo, esto no es gratis: un mayor nivel de confianza implica una pérdida de precisión en nuestros cálculos; y viceversa. Es decir, un mayor nivel de confianza ampliará los límites inferior y superior de nuestros intervalos de confianza, lo cual hace la estimación menos precisa, mientras que un menor nivel de confianza estrechará tales límites, haciendo la estimación más precisa. Sin embargo, en el primer caso, la probabilidad de contener al parámetro poblacional es mayor que en el segundo. La decisión del nivel de confianza con el cual trabajaremos dependerá de qué es lo que queramos calcular, y no es objeto de este curso.\nTambién es posible utilizar group_by() para calcular la media de ingresos (y sus intervalos de confianza) según sexo:\ncasen_regional %\u0026gt;% #Con casen_regional group_by(sexo) %\u0026gt;% #Agrupamos por sexo summarise(ing_medio = survey_mean(ing_tot_hog, vartype = \u0026#34;ci\u0026#34;, na.rm=T)) #Calculamos el ingreso medio  ## # A tibble: 2 x 4 ## sexo ing_medio ing_medio_low ing_medio_upp ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Hombre 1199636. 1165434. 1233837. ## 2 Mujer 1119514. 1081919. 1157110. #poblacional, y sus intervalos de  #confianza Asimismo, es posible calcular la media de ingresos agrupando por región:\ncasen_regional %\u0026gt;% #Con casen_regional group_by(region) %\u0026gt;% #Agrupamos por region summarise(ing_medio = survey_mean(ing_tot_hog, vartype = \u0026#34;ci\u0026#34;, na.rm=T)) #Calculamos el ingreso medio  ## # A tibble: 16 x 4 ## region ing_medio ing_medio_low ing_medio_upp ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Tarapacá 1141383. 1035448. 1247318. ## 2 Antofagasta 1307063. 1187223. 1426903. ## 3 Atacama 1077501. 995455. 1159547. ## 4 Coquimbo 921887. 858537. 985238. ## 5 Valparaíso 1014265. 952490. 1076040. ## 6 OHiggins 951390. 882157. 1020624. ## 7 Maule 863768. 801938. 925598. ## 8 Biobío 945557. 892262. 998852. ## 9 La Araucanía 836515. 782771. 890260. ## 10 Los Lagos 967411. 902996. 1031826. ## 11 Aysén 1252366. 1152001. 1352732. ## 12 Magallanes 1458963. 1317465. 1600461. ## 13 Metropolitana 1408060. 1330071. 1486049. ## 14 Los Ríos 926921. 841025. 1012816. ## 15 Arica y Parinacota 952832. 897814. 1007851. ## 16 Ñuble 788551. 716981. 860122. #poblacional, y sus intervalos de  #confianza ¿Y si quisiéramos crear una tabla con una columna por región, cuyas observaciones nos indiquen la media de ingreso para cada una de ellas? ¡Simplemente acudimos a pivot_wider() de tidyr!\ning_region \u0026lt;- casen_regional %\u0026gt;% group_by(sexo) %\u0026gt;% #Agrupamos por region summarise(ing_medio = survey_mean(ing_tot_hog, vartype = \u0026#34;ci\u0026#34;, na.rm=T)) %\u0026gt;% #Calculamos el ingreso medio poblacional, y sus intervalos de confianza select(sexo, ing_medio) %\u0026gt;% #Seleccionamos region e ing_medio pivot_wider(names_from = \u0026#34;sexo\u0026#34;, #Pivoteamos, extrayendo los nombres de las columnas desde region values_from = \u0026#34;ing_medio\u0026#34;) #Y los valores desde ing_medio head(ing_region) #Visualizamos ## # A tibble: 1 x 2 ## Hombre Mujer ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 1199636. 1119514. c) Cálculo de proporciones para variables categóricas También podemos utilizar la función survey_prop() de srvyr para calcular proporciones. Sin embargo, el código para calcular proporciones de variables categóricas no se construye de la misma manera que el código para calcular medias de variables continuas:\ncasen_regional %\u0026gt;% #Con casen_regional summarise(prop = survey_prop(pobreza, na.rm = T)) #Y calculamos las proporciones Debemos recurrir a group_by() para especificar nuestra variable categórica, y luego realizar el cálculo en summarise()\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_prop(na.rm = T)) #Y calculamos las proporciones ## # A tibble: 3 x 3 ## pobreza prop prop_se ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 0.0426 0.00125 ## 2 Pobres no extremos 0.0656 0.00162 ## 3 No pobres 0.892 0.00215 De todos modos, hay que considerar que survey_prop() y survey_mean() son (hasta cierto punto) intercambiables:\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_mean(na.rm = T)) #Y calculamos las proporciones ## # A tibble: 3 x 3 ## pobreza prop prop_se ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 0.0426 0.00125 ## 2 Pobres no extremos 0.0656 0.00162 ## 3 No pobres 0.892 0.00215 Muchas veces nos interesa más trabajar con porcentajes que con proporciones. Con mutate() podemos multiplicar por 100 nuestras proporciones, y así obtener los porcentajes deseados\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_prop(na.rm = T))%\u0026gt;% #Calculamos las proporciones mutate(per = prop*100) #Creamos una nueva columna multiplicando las proporciones *100 para obtener porcentajes ## # A tibble: 3 x 4 ## pobreza prop prop_se per ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 0.0426 0.00125 4.26 ## 2 Pobres no extremos 0.0656 0.00162 6.56 ## 3 No pobres 0.892 0.00215 89.2 La función survey_total() de srvyr nos permite calcular el total de personas en cada categoría a nivel poblacional.\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_prop(na.rm = T), #Calculamos las proporciones total = survey_total(na.rm=T))%\u0026gt;% #Y el total por categorías mutate(per = prop*100) #Creamos una nueva columna multiplicando las proporciones *100 para obtener porcentajes ## # A tibble: 3 x 6 ## pobreza prop prop_se total total_se per ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 0.0426 0.00125 831232 24534. 4.26 ## 2 Pobres no extremos 0.0656 0.00162 1280953 31988. 6.56 ## 3 No pobres 0.892 0.00215 17420295 231034. 89.2 Por supuesto, también es posible incorporar intervalos de confianza, tal como cuando calculamos medias\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_prop(vartype = \u0026#34;ci\u0026#34;, na.rm = T)) #Incorporamos intervalos de confianza ## # A tibble: 3 x 4 ## pobreza prop prop_low prop_upp ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 0.0426 0.0401 0.0450 ## 2 Pobres no extremos 0.0656 0.0624 0.0688 ## 3 No pobres 0.892 0.888 0.896 Y, además, podemos convertir en porcentajes nuestros intervalos de confianza, tal como lo hicimos con la estimación puntual\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_prop(vartype = \u0026#34;ci\u0026#34;, na.rm = T)) %\u0026gt;% #Incorporamos intervalos de confianza mutate(prop = prop*100, #Multiplicamos las proporciones *100, prop_low = prop_low*100, #así como el límite inferior  prop_upp = prop_upp*100) #y superior, para obtener porcentajes ## # A tibble: 3 x 4 ## pobreza prop prop_low prop_upp ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 4.26 4.01 4.50 ## 2 Pobres no extremos 6.56 6.24 6.88 ## 3 No pobres 89.2 88.8 89.6 Incluimos el total\ncasen_regional %\u0026gt;% #Con casen_regional group_by(pobreza) %\u0026gt;% #Agrupamos por pobreza summarise(prop = survey_prop(vartype = \u0026#34;ci\u0026#34;, na.rm = T), #Calculamos las proporciones con intervalos de confianza total = survey_total(vartype = \u0026#34;ci\u0026#34;, na.rm=T)) %\u0026gt;% #Así como el total por categoría mutate(prop = prop*100, #Multiplicamos las proporciones *100, prop_low = prop_low*100, #así como el límite inferior  prop_upp = prop_upp*100) #y superior, para obtener porcentajes ## # A tibble: 3 x 7 ## pobreza prop prop_low prop_upp total total_low total_upp ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos 4.26 4.01 4.50 831232 783097. 879367. ## 2 Pobres no extremos 6.56 6.24 6.88 1280953 1218194. 1343712. ## 3 No pobres 89.2 88.8 89.6 17420295 16967009. 17873581. También podemos cruzar dos variables. Veamos, por ejemplo, cómo se distribuye la pobreza según sexo\ncasen_regional %\u0026gt;% #Creamos un objeto llamado pobreza_reg con datos de casen_regional group_by(pobreza, sexo) %\u0026gt;% #Agrupamos por pobreza y sexo summarise(prop = survey_prop(vartype = \u0026#34;ci\u0026#34;, na.rm = T), #Calculamos las proporciones con intervalos de confianza total = survey_total(vartype = \u0026#34;ci\u0026#34;, na.rm=T)) %\u0026gt;% #Así como el total por categoría mutate(prop = prop*100) ## # A tibble: 6 x 8 ## # Groups: pobreza [3] ## pobreza sexo prop prop_low prop_upp total total_low total_upp ## \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Pobres extremos Hombre 45.4 0.442 0.466 377149 353131. 401167. ## 2 Pobres extremos Mujer 54.6 0.534 0.558 454083 425853. 482313. ## 3 Pobres no extremos Hombre 44.7 0.438 0.457 573200 543298. 603102. ## 4 Pobres no extremos Mujer 55.3 0.543 0.562 707753 670391. 745115. ## 5 No pobres Hombre 46.2 0.459 0.466 8055786 7856474. 8255098. ## 6 No pobres Mujer 53.8 0.534 0.541 9364509 9094186. 9634832. Por último, podemos crear una tabla ancha (wide) con pivot_wider() de tidyr para trabajar con nuestros cálculos de forma más cómoda en un data frame\npobreza_reg \u0026lt;- casen_regional %\u0026gt;% #Creamos un objeto llamado pobreza_reg con datos de casen_regional group_by(region, pobreza) %\u0026gt;% #Agrupamos por region y pobreza summarise(prop = survey_prop(vartype = \u0026#34;ci\u0026#34;, na.rm = T), #Calculamos las proporciones con intervalos de confianza total = survey_total(vartype = \u0026#34;ci\u0026#34;, na.rm=T)) %\u0026gt;% #Así como el total por categoría mutate(per = prop*100) %\u0026gt;% #Multiplicamos las proporciones *100 para obtener porcentajes select(region, pobreza, per, total) %\u0026gt;% #Seleccionamos region, pobreza, per y total pivot_wider(names_from = \u0026#34;pobreza\u0026#34;, #Pivoteamos a lo ancho, extrayendo los nombres de las columnas desde pobreza values_from = c(\u0026#34;per\u0026#34;, \u0026#34;total\u0026#34;)) #y los valores desde per y total head(pobreza_reg) ## # A tibble: 6 x 7 ## # Groups: region [6] ## region `per_Pobres extr~ `per_Pobres no ex~ `per_No pobres` `total_Pobres ex~ ## \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 Tarapa~ 6.87 7.12 86.0 26508 ## 2 Antofa~ 3.70 5.61 90.7 25738 ## 3 Atacama 3.83 5.63 90.5 12091 ## 4 Coquim~ 4.03 7.67 88.3 33861 ## 5 Valpar~ 4.87 6.47 88.7 95813 ## 6 OHiggi~ 4.20 5.77 90.0 41812 ## # ... with 2 more variables: total_Pobres no extremos \u0026lt;dbl\u0026gt;, ## # total_No pobres \u0026lt;dbl\u0026gt; 5. Resumen ¡Y eso es todo! En este práctico aprendimos a:\n Crear un objeto encuesta Realizar cálculos de medias a nivel poblacional para variables continuas Realizar cálculos de proporciones y cantidades a nivel poblacional para variables categóricas Crear una tabla ancha (wide) para trabajar nuestros cálculos.  6. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso. En tu correo electrónico está disponible el código mediante al cuál debes acceder para actualizar tu estado de avance del curso.\n","date":1631750400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631750400,"objectID":"ac44be22ccfcf2ee3a427ed6eaf14c79","permalink":"/example/07-practico/","publishdate":"2021-09-16T00:00:00Z","relpermalink":"/example/07-practico/","section":"example","summary":"0. Objetivo del práctico Este práctico tiene por objetivo introducir el trabajo estadístico con muestras complejas en R, es decir, cuando se trabaja con muestras que busquen ser representativas de la población a estudiar, bajo determinados parámetros.","tags":null,"title":"Muestras complejas y precisión de inferencia estadística","type":"docs"},{"authors":null,"categories":null,"content":"Material de la clase    06-bloque.zip\n ¿Cómo descomprimir archivos?     Práctico\n   Contestar reporte de registro\n  Recomendaciones    “Tipos de datos-columnas en R”\n   Tutoriales, “Learn-R”\n Tutorial de dplyr por profesora Valentina Andrade y ayudante Dafne Jaime     “Data manipulation in R,” (avanzado)\n  ","date":1631491200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631491200,"objectID":"ab54958bbaea5fe381467c40300e6fb1","permalink":"/content/06-content/","publishdate":"2021-09-13T00:00:00Z","relpermalink":"/content/06-content/","section":"content","summary":"Material de la clase    06-bloque.zip\n ¿Cómo descomprimir archivos?     Práctico\n   Contestar reporte de registro\n  Recomendaciones    “Tipos de datos-columnas en R”","tags":null,"title":"Regresiones lineales, predictores categóricos y representación gráfica","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el análisis de los datos a través del uso de regresiones lineales, para esto usaremos datos previamente procesados de la base de datos a utilizar. Recordemos que estamos en el proceso de análisis\nEntonces, en esta práctica aprenderemos trabajar las regresiones lineales, también trabajaremos los predictores categóricos y finalmente veremos como representarlos mediante gráficos y tablas.\n1. Recursos del práctico En este práctico utilizamos los datos procesados de la Encuesta Suplementaria de Ingresos (ESI) 2020.Recuerden siempre consultar el libro códigos antes de trabajar datos.\n  05-bloque.zip  2. Librerías a utilizar Cargaremos los paquetes con pacman revisar práctico 3 y utilizaremos sjPlot para la creación de tablas, tidyverse de este universo de paquetes utilizaremos dplyr (para la manipulación de datos) y magrittr (para utilizar el operador pipe) y finalmente la libreria car para la recodificación de datos. Recuerden que pueden ver más de las funciones de cada paquetes en la sección de recursos\npacman::p_load(sjPlot, tidyverse, magrittr, car) 3. Importar datos Una vez cargado los paquetes a utilizar, debemos cargar los datos procesados.\nload(\u0026#34;output/data/datos_proc.RData\u0026#34;) Explorar datos Es relevante explorar los datos que utilizaremos, cómo están previamente procesados ¡no sabemos con que variables estamos trabajando!\nnames(datos_proc) ## [1] \u0026#34;ingresos\u0026#34; \u0026#34;educacion\u0026#34; \u0026#34;sexo\u0026#34; \u0026#34;edad\u0026#34; head(datos_proc) ## # A tibble: 6 x 4 ## ingresos educacion sexo edad ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 320421. 6 [Educación técnica (Educación superior no universi~ 2 [Mujer] 29 ## 2 750000 7 [Educación universitaria] 2 [Mujer] 30 ## 3 900000 7 [Educación universitaria] 2 [Mujer] 43 ## 4 0 5 [Educación secundaria] 2 [Mujer] 15 ## 5 0 3 [Educación primaria (nivel 1)] 1 [Hombr~ 11 ## 6 0 5 [Educación secundaria] 2 [Mujer] 62 Ahora sabemos que trabajaremos con \u0026quot;ingresos\u0026quot;, \u0026quot;educacion\u0026quot;, \u0026quot;sexo\u0026quot; y \u0026quot;edad\u0026quot;. Inclusive podemos repasar lo visto en el práctico anterior y explorar nuestros datos con sjPlot::view_df()\nsjPlot::view_df(datos_proc, encoding = \u0026#34;UTF-8\u0026#34;) Data frame: datos_proc\r\rIDNameLabelValuesValue Labels\r\r\r1\ringresos\rTotal ingresos sueldos y salarios\rrange: 0.0-9312239.1\r\r\r2\reducacion\rClasificaciÃ³n Internacional de Nivel Educacional\n(CINE)\r1\n2\n3\n4\n5\n6\n7\n8\n9\n999\rNunca estudiÃ³\nEducaciÃ³n preescolar\nEducaciÃ³n primaria (nivel 1)\nEducaciÃ³n primaria (nivel 2)\nEducaciÃ³n secundaria\nEducaciÃ³n tÃ©cnica (EducaciÃ³n superior no universitaria)\nEducaciÃ³n universitaria\nPostitulos y maestrÃ­a\nDoctorado\nNivel ignorado\r\r\r3\rsexo\rSexo\r1\n2\rHombre\nMujer\r\r\r4\redad\rEdad de la persona\rrange: 0-106\r\r\rPero previo a eso podemos visualizar que hay categorías que se pueden reducir en la variable educacion, por eso haremos un breve repaso del práctico anterior\nRecodificar Como la variable educacion presenta la categoría de respuesta Nivel ignorado (casos perdidos) y casos que pueden unificarse como Educación primaria (nivel 1) y Educación primaria (nivel 2), los asignaremos como NA y unificaremos.\nPara eso el primer paso es decirle a la base que transformaremos la variable como factor\ndatos_proc$educacion \u0026lt;- as_factor(datos_proc$educacion) Luego recodificaremos la variable con la función recode del paquete car\ndatos_proc$educacion \u0026lt;- car::recode(datos_proc$educacion, recodes = c(\u0026#34;\u0026#39;Nivel ignorado\u0026#39; = NA; c(\u0026#39;Educación primaria (nivel 1)\u0026#39;, \u0026#39;Educación primaria (nivel 2)\u0026#39;) = \u0026#39;Educación primaria\u0026#39;\u0026#34;)) Finalmente visualizamos los cambios de nuestra base procesada con view_df\nData frame: datos_proc\r\rIDNameLabelValuesValue Labels\r\r\r1\ringresos\rTotal ingresos sueldos y salarios\rrange: 0.0-9312239.1\r\r\r2\reducacion\r\r\rDoctorado\nEducaciÃ³n preescolar\nEducaciÃ³n primaria\nEducaciÃ³n secundaria\nEducaciÃ³n tÃ©cnica (EducaciÃ³n superior no universitaria)\nEducaciÃ³n universitaria\nNunca estudiÃ³\nPostitulos y maestrÃ­a\r\r\r3\rsexo\rSexo\r1\n2\rHombre\nMujer\r\r\r4\redad\rEdad de la persona\rrange: 0-106\r\r\rPerfecto, podemos ver las variables que tenemos y sus categorías de respuesta, pero antes de continuar, es importante conocer los tipos de variables a usar, para eso pueden ir al mini tutorial de tipos de variables y ejemplos\n4. Modelo de regresión Previo al trabajo en R recordemos que la fórmula de la regresión lineal simple es:\n\\begin{equation}\r\\widehat{Y}=b_{0} +b_{1}X\r\\end{equation}\nMientras que en la regresión lineal múltiple es:\n\\begin{equation}\r\\widehat{Y}=b_{0} +b_{1}X +b_{2}X +b_{x}X\r\\end{equation}\nDonde\n \\(\\widehat{Y}\\) es el valor estimado/predicho de \\(Y\\) \\(b_{0}\\) es el intercepto de la recta (el valor de Y cuando las X\u0026rsquo;s son 0) \\(b_{1}\\) y \\(b_{2}\\) son los coeficientes de regresión, que nos dice cuánto aumenta Y por cada punto que aumenta X (pendiente)  Les mostramos esto porque de la misma forma se diferencian ambos procedimientos en R\nPara la regresión lineal simple se utiliza la siguiente estructura:\nobjeto \u0026lt;- lm(dependiente ~ independiente, data=datos) Mientras que para la regresión lineal múltiple, sólo se añaden más variables\nobjeto \u0026lt;- lm(dependiente ~ independiente1 + independiente 2 + independientex, data=datos) Regresión lineal simple Ahora en nuestros datos queda de la siguiente manera\nreg_1 \u0026lt;-lm((ingresos ~ edad), data = datos_proc) reg_1 ## ## Call: ## lm(formula = (ingresos ~ edad), data = datos_proc) ## ## Coefficients: ## (Intercept) edad ## 102548 1530 pero el problema es que al observar el objeto creado, no es muy presentable para informes, por eso usaremos la función tab_model de sjPlot, que tiene la siguiente estructura:\nsjPlot::tab_model(objeto_creado, show.ci= F/T, # este argumento muestra los intervalos de confianza encoding = \u0026#34;UTF-8\u0026#34;, # evita errores en caracteres file = \u0026#34;output/figures/reg1_tab.doc\u0026#34;) # guarda lo creado automáticamente Ahora en nuestros datos se vería así:\nsjPlot::tab_model(reg_1, show.ci=FALSE, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/reg1_tab.doc\u0026#34;) \r\u0026nbsp;\rTotal ingresos sueldos y\nsalarios\r\r\rPredictors\rEstimates\rp\r\r\r(Intercept)\r102548.34\r\u0026lt;0.001\r\r\rEdad de la persona\r1529.88\r\u0026lt;0.001\r\r\rObservations\r71935\r\r\rR2 / R2 adjusted\r0.007 / 0.007\r\r\rRegresión múltiple Ahora queremos incorporar las demás variables al modelo, para lo haremos de la siguiente manera\nreg_2 \u0026lt;-lm((ingresos ~ edad + sexo), data = datos_proc) sjPlot::tab_model(reg_2, show.ci=FALSE, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/regnc_tab.doc\u0026#34;) \r\u0026nbsp;\rTotal ingresos sueldos y\nsalarios\r\r\rPredictors\rEstimates\rp\r\r\r(Intercept)\r237220.44\r\u0026lt;0.001\r\r\rEdad de la persona\r1646.83\r\u0026lt;0.001\r\r\rSexo\r\u0026#45;91039.16\r\u0026lt;0.001\r\r\rObservations\r71935\r\r\rR2 / R2 adjusted\r0.020 / 0.020\r\r\r¡Pero espera! ¡sexo no es una variable continua!\nPredictores categoricos Previo a esto hay que recordar que sexo no es un predictor continuo, y también debemos recordárselo a la base de datos (la variable educación tampoco lo es, pero ya la transformamos con as_factor)\ndatos_proc$sexo \u0026lt;- as_factor(datos_proc$sexo) Perfecto ahora si podemos añadir predictores categóricos a nuestra regresión múltiple\nreg_2 \u0026lt;-lm((ingresos ~ edad + sexo), data = datos_proc) reg_3 \u0026lt;-lm((ingresos ~ edad + sexo + educacion), data = datos_proc) Pero que pasa si queremos incluir todos los modelos creados en una sola tabla, para eso usaremos nuevamente la función tab_model de sjPlot\nsjPlot::tab_model(list(reg_1, reg_2, reg_3), # los modelos estimados show.ci=FALSE, # no mostrar intervalo de confianza (por defecto lo hace) p.style = \u0026#34;stars\u0026#34;, # asteriscos de significación estadística dv.labels = c(\u0026#34;Modelo 1\u0026#34;, \u0026#34;Modelo 2\u0026#34;, \u0026#34;Modelo 3\u0026#34;), # etiquetas de modelos o variables dep. string.pred = \u0026#34;Predictores\u0026#34;, string.est = \u0026#34;β\u0026#34;, # nombre predictores y símbolo beta en tabla encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/reg_tab_all.doc\u0026#34;) \r\u0026nbsp;\rModelo 1\rModelo 2\rModelo 3\r\r\rPredictores\rÃŸ\rÃŸ\rÃŸ\r\r\r(Intercept)\r102548.34 ***\r146181.28 ***\r1774294.45 ***\r\r\rEdad de la persona\r1529.88 ***\r1646.83 ***\r1134.98 ***\r\r\rSexo: Mujer\r\r\u0026#45;91039.16 ***\r\u0026#45;94042.51 ***\r\r\reducacion: EducaciÃ³n\npreescolar\r\r\r\u0026#45;1734569.27 ***\r\r\reducacion: EducaciÃ³n\nprimaria\r\r\r\u0026#45;1732259.96 ***\r\r\reducacion: EducaciÃ³n\nsecundaria\r\r\r\u0026#45;1632080.40 ***\r\r\reducacion: EducaciÃ³n\ntÃ©cnica(EducaciÃ³n\nsuperior no\nuniversitaria)\r\r\r\u0026#45;1497544.27 ***\r\r\reducacion: EducaciÃ³n\nuniversitaria\r\r\r\u0026#45;1342780.60 ***\r\r\reducacion: Nunca estudiÃ³\r\r\r\u0026#45;1743566.17 ***\r\r\reducacion: Postitulos y\nmaestrÃ­a\r\r\r\u0026#45;641544.23 ***\r\r\rObservations\r71935\r71935\r71346\r\r\rR2 / R2 adjusted\r0.007 / 0.007\r0.020 / 0.020\r0.202 / 0.201\r\r\r* p\u0026lt;0.05\u0026nbsp;\u0026nbsp;\u0026nbsp;** p\u0026lt;0.01\u0026nbsp;\u0026nbsp;\u0026nbsp;*** p\u0026lt;0.001\r\r\rAhora podemos observar que a diferencia de la tabla anterior la variable sexo, tiene incluida la categoría de respuesta de comparación.\n5. Visualización Para visualizar o graficar los coeficientes de regresión para poder observar el impacto de cada variable en el modelo utilizaremos la función plot_model de sjPlot, su estructura es la siguiente:\nsjPlot::plot_model(objeto_creado, ci.lvl = \u0026#34;\u0026#34;, #estima el nivel de confianza  title = \u0026#34;\u0026#34;, # es el título vline.color = \u0026#34;\u0026#34;) # color de la recta vertical Esto visualizado con nuestro modelo se ve así:\nsjPlot::plot_model(reg_3, ci.lvl = c(0.95), title = \u0026#34;Estimación de predictores\u0026#34;, vline.color = \u0026#34;purple\u0026#34;) Terminamos por este práctico ¡Pero aún falta la regresión logística!\n6. Resumen En este práctico aprendimos a\n Crear y visualizar regresiones lineales Incorporar predictores categóricos Crear y visualizar regresiones múltiples  7. Recursos  sjPlot tidyverse magrittr  8. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso. En tu correo electrónico está disponible el código mediante al cuál debes acceder para actualizar tu estado de avance del curso.\n","date":1630022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630022400,"objectID":"e2a631a0b19040e80b34f22067bbe0f3","permalink":"/example/05-practico/","publishdate":"2021-08-27T00:00:00Z","relpermalink":"/example/05-practico/","section":"example","summary":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el análisis de los datos a través del uso de regresiones lineales, para esto usaremos datos previamente procesados de la base de datos a utilizar.","tags":null,"title":"Regresiones lineales, predictores categóricos y representación gráfica","type":"docs"},{"authors":null,"categories":null,"content":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\n¿Cómo ocupar: Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver los comandos específicos para navegar en ellas.\r\rMaterial de la clase    04-bloque.zip\n ¿Cómo descomprimir archivos?     Práctico\n   Contestar reporte de registro\n  Recomendaciones    “Tipos de datos-columnas en R”\n   Tutoriales, “Learn-R”\n Tutorial de dplyr por profesora Valentina Andrade y ayudante Dafne Jaime     “Data manipulation in R,” (avanzado)\n  ","date":1629676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629676800,"objectID":"b0405fb0975b8cdddb0454677282c9f2","permalink":"/content/04-content/","publishdate":"2021-08-23T00:00:00Z","relpermalink":"/content/04-content/","section":"content","summary":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\n¿Cómo ocupar: Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver los comandos específicos para navegar en ellas.","tags":null,"title":"Análisis Descriptivo","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo del práctico El objetivo del práctico, es avanzar en el análisis de los datos a través del uso de estadísticos descriptivos. Para esto ya debemos contar con datos previamente procesados del práctico N°3. Recordemos en qué parte del proceso estamos\nEn este práctico veremos tanto la estimación puntual de estadísticos descriptivos, como su visualización para reportes, ya sea a través de tablas o de gráficos.\nRecursos del práctico En este práctico utilizamos los datos procesados CASEN 2020, que proviene de los datos originales de Encuesta de Caracterización Socioeconómica (CASEN).Recuerden siempre consultar el libro códigos antes de trabajar datos.\n  04-bloque.zip  1. Paquetes a utilizar Para este práctico utilizaremos principalmente, las librerías sjmisc y sjPlot.\nsjmisc: esta paquete tiene múltiples funciones, desde la transformación de datos y variables. Este paquete suele complementar a dplyr de tidyverse en sus funciones.\nsjPlot: su principal función es la visualización de datos para estadística en ciencias sociales mediante tablas y gráficos.\nCargaremos los paquetes con pacman revisar práctico anterior\npacman::p_load(sjmisc, sjPlot, tidyverse, magrittr) theme_set(theme_sjplot2()) 2. Importar datos Una vez cargado los paquetes a utilizar, debemos pasar al segundo paso: cargar los datos. Como indicamos al inicio, seguiremos utilizando los datos *CASEN que fue procesada en el práctico anterior, pero le añadimos una variable.\nload(\u0026#34;output/data/datos_proc.RData\u0026#34;) 3. Explorar datos Pero ¿cómo sabremos cuales son las variables que componen la base de datos procesada?, para ello usaremos dos códigos para conocer la base procesada que usaremos:\nel código names, nos entrega los nombres de las variables que componen el data set\nnames(datos_proc) ## [1] \u0026#34;sexo\u0026#34; \u0026#34;edad_tramo\u0026#34; \u0026#34;ocupacion\u0026#34; ## [4] \u0026#34;horas_mens\u0026#34; \u0026#34;ingreso_percapita\u0026#34; \u0026#34;ife\u0026#34; Mientras que la función head nos entrega el nombre y las primeras 10 filas que la componen.\nhead(datos_proc) ## # A tibble: 6 x 6 ## sexo edad_tramo ocupacion horas_mens ingreso_percapita ife ## \u0026lt;dbl+lbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 2 [Mujer] Joven No NA 195416. 1 [Sí] ## 2 1 [Hombre] Adulto Sí 180 315861 2 [No] ## 3 2 [Mujer] Joven No NA 315861 2 [No] ## 4 1 [Hombre] Adulto Sí 45 1001389 2 [No] ## 5 1 [Hombre] Joven No NA 1001389 2 [No] ## 6 2 [Mujer] Adulto No NA 1001389 2 [No] Gracias a estos códigos sabemos que tenemos una aproximación de las variables que podríamos utilizar. Por el práctico anterior sabemos que podemos explorar nuestros datos con sjPlot::view_df()\nData frame: datos_proc\r\rIDNameLabelValuesValue Labels\r\r\r1\rsexo\rSexo\r1\n2\rHombre\nMujer\r\r\r2\redad_tramo\r\r\r\u0026lt;output omitted\u0026gt;\r\r\r3\rocupacion\ro1. La semana pasada, Â¿trabajÃ³ al menos una hora?\r\rSÃ­\nNo\r\r\r4\rhoras_mens\ry2_hrs. NÃºmero de horas mensuales pactadas con\nempleador\rrange: 1-720\r\r\r5\ringreso_percapita\rIngreso total del hogar\rrange: 0.0-225200000.0\r\r\r6\rife\ry26d_hog. Ãšltimos 12 meses, Â¿alguien recibiÃ³\nIngreso Familiar de Emergencia?\r1\n2\n9\rSÃ­\nNo\nNo sabe\r\r\r4. Descripción de variables Una vez conocidas las variables que incluye nuestros datos procesados, ¿cómo podemos realizar un análisis descriptivo para algún informe o reporte? Veamos algunas de las más comunes\n4.1. Medidas de tendencia central Para conocer las medidas de tendencia central de las variables hay dos opciones. En la primera se puede pedir el estadístico manualmente, en la segunda se puede pedir una tabla resumen.\nMedia Para conocer la media de una variable se utiliza la función mean(), su estructura es:\nmean(datos$variable, na.rm=TRUE) El argumento na.rm=TRUE excluye del cálculo a los casos perdidos. Esto aplicado a nuestra variable ingreso_percapita se ve así:\nmean(datos_proc$ingreso_percapita, na.rm=TRUE) ## [1] 355472.1 Media recortada Pero, ¿qué pasa si la variable ingreso_percapita esta influenciada por casos influyentes? Para eso puedo pedir la media recortada agregando el argumento trim para excluir al 5% de cada extremo\nmean(datos_proc$ingreso_percapita, na.rm=TRUE, trim = 0.025) ## [1] 305707.9 Aquí podemos ver que el valor es distinto.\nYa conocimos el promedio de la variable ingreso_percapita podemos informar cuanto es el promedio del ingreso en el hogar en Chile, pero antes de eso queremos saber ¿cuánto gana el 50% de los hogares? Para eso calcularemos la mediana\nMediana Para el cálculo de la mediana se utiliza el comando median, su estructura es similar a la mean():\nmedian(datos$variable, na.rm =TRUE) median(datos_proc$ingreso_percapita, na.rm =TRUE) ## [1] 229184.5 Ahora ya sabemos que al menos un 50% de las familias en Chile tienen por ingreso $229.184.\nYa tenemos los estadísticos principales, pero ¿cómo los reportamos? ¿tenemos que sacar el promedio de cada variable una por una? ¡No!, para ello sjmisc tiene diferentes funciones, que veremos a continuación\nUn resumen Podemos obtener un resumen de todos estadísticos a partir de la función summary(). El argumento puede ser tanto una columna en particular como ingreso_percapita\nsummary(datos_proc$ingreso_percapita) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0 138612 229184 355472 390890 225200000 También podemos hacerlo con todos los datos. Sólo que no tendrá mucho sentido para las variables nominales.\nsummary(datos_proc) ## sexo edad_tramo ocupacion horas_mens ## Min. :1.000 Length:144418 Sí:60479 Min. : 1.0 ## 1st Qu.:1.000 Class :character No:83939 1st Qu.:146.0 ## Median :2.000 Mode :character Median :180.0 ## Mean :1.547 Mean :152.8 ## 3rd Qu.:2.000 3rd Qu.:180.0 ## Max. :2.000 Max. :720.0 ## NA\u0026#39;s :111080 ## ingreso_percapita ife ## Min. : 0 Min. :1.000 ## 1st Qu.: 138612 1st Qu.:1.000 ## Median : 229184 Median :2.000 ## Mean : 355472 Mean :1.766 ## 3rd Qu.: 390890 3rd Qu.:2.000 ## Max. :225200000 Max. :9.000 ## summary() es una función muy potente, dado que no solo permite resúmenes de data.frames (datos), sino que también de otros objetos en R (como los modelos).\nAhora bien tiene limitantes para interactuar con dplyr y generar archivos de salida. Por ello ocuparemos descr de sjmisc\nsjmisc::descr(datos_proc$ingreso_percapita, show = \u0026#34;all\u0026#34;, out = \u0026#34;viewer\u0026#34;, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/tabla-ingreso.doc\u0026#34;) ## ## ## Basic descriptive statistics ## ## var type label n NA.prc mean sd se ## dd numeric Ingreso total del hogar 144418 0 355472.2 834151.2 2195 ## md trimmed range iqr skew ## 229184.5 266168.1 225200000 (0-225200000) 252277.6 152.42 De más variables\ndatos_proc %\u0026gt;% select(ingreso_percapita, horas_mens) %\u0026gt;% sjmisc::descr( show = \u0026#34;all\u0026#34;, out = \u0026#34;viewer\u0026#34;, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/tabla1.doc\u0026#34;) ## ## ## Basic descriptive statistics ## ## var type ## ingreso_percapita numeric ## horas_mens numeric ## label n NA.prc ## Ingreso total del hogar 144418 0.00 ## y2_hrs. Número de horas mensuales pactadas con empleador 33338 76.92 ## mean sd se md trimmed range iqr ## 355472.15 834151.23 2195.0 229184.5 266168.13 225200000 (0-225200000) 252277.6 ## 152.83 54.69 0.3 180.0 159.83 719 (1-720) 34.0 ## skew ## 152.42 ## -0.98 Aquí podemos ver la variable var, el tipo de variable type, su etiqueta label, los casos válidos n, los casos perdidos NA.prc, las medidas de tendencia central y las de dispersión. sjmisc tiene muchos beneficios, ya que cómo interactúa con el mundo tidyverse es fácil de complementar con funciones como select de dplyr. Además con la función file se puede exportar automáticamente la tabla para los reportes.\n4.3. Frecuencias Frecuencias absolutas Para conocer las frecuencias absolutas de una variable se podría usar la función table, esta nos arroja la frecuencia por cada categoría de respuesta\ntable(datos_proc$sexo) ## ## 1 2 ## 65474 78944 También podríamos usar la función flat_table, esta puede agrupar más variables y agruparlas.\nflat_table(datos_proc, sexo, ocupacion, ife) ## ife Sí No No sabe ## sexo ocupacion ## Hombre Sí 9695 23979 473 ## No 11263 19571 493 ## Mujer Sí 7527 18488 317 ## No 20084 31701 827 El problema es ¿cómo podríamos reportarla en nuestros informes? Si queremos una tabla general usaremos la función frq. Esta función devuelve una tabla de frecuencias de vectores etiquetados, como marco de datos.\nsjmisc::frq(datos_proc$sexo, out = \u0026#34;viewer\u0026#34;, title = \u0026#34;Frecuencias\u0026#34;, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/tabla2.doc\u0026#34;) Frecuencias\r\rval\rlabel\rfrq\rraw.prc\rvalid.prc\rcum.prc\r\r\r1\rHombre\r65474\r45.34\r45.34\r45.34\r\r\r2\rMujer\r78944\r54.66\r54.66\r100.00\r\r\rNA\rNA\r0\r0.00\rNA\rNA\r\r\rtotal N=144418 \u0026middot; valid N=144418 \u0026middot; x\u0026#772;=1.55 \u0026middot; \u0026sigma;=0.50\r\r\r\r5. Visualización Ahora que ya sabemos como tener todos los estadísticos necesarios para escribir nuestros reportes, viene el segundo paso visualizar los estadísticos. Esto lo haremos con sjPlot\nPara visualizar las frecuencias usaremos la función plot_frq, su estructura es la siguiente:\nplot_frq(datos, #base ..., #variable title = \u0026#34;\u0026#34;, # título type = c(\u0026#34;bar\u0026#34;, \u0026#34;dot\u0026#34;, \u0026#34;histogram\u0026#34;, \u0026#34;line\u0026#34;, \u0026#34;density\u0026#34;, \u0026#34;boxplot\u0026#34;, \u0026#34;violin\u0026#34;) #tipo de gráfico Para los gráficos, tenemos los siguientes códigos\n5.1. Gráfico de barras de frecuencias simple Si quisiéramos presentar gráficos que entreguen la frecuencia de cada categoría de respuesta, podemos presentarla de la siguiente forma:\nplot_frq(datos_proc, edad_tramo, title = \u0026#34;Gráfico de frecuencias, barras\u0026#34;, type = c(\u0026#34;bar\u0026#34;)) Además de la visualización es importante el guardar los datos que se producen y sjPlot tiene su propio código para hacerlo a través de la función save_plot(), su estructura es esta:\nsave_plot(last_plot()) #se deja el formato del archivo (.png, .jpg, .svg o .tif) y la ruta de la carpeta\n\rAsí guardaríamos el gráfico anterior\nsave_plot(last_plot(\u0026#34;/output/img/tab.png\u0026#34;)) 5.2. Gráfico de puntos Si tenemos más categorías y queremos mejorar el reporte, podemos usar este código:\nplot_frq(datos_proc, edad_tramo, title = \u0026#34;Gráfico de frecuencias, puntos\u0026#34;, type = c(\u0026#34;dot\u0026#34;)) También podemos cambiar el orden del eje x e y\nplot_frq(datos_proc$edad_tramo, type = \u0026#34;dot\u0026#34;, show.ci = TRUE, sort.frq = \u0026#34;desc\u0026#34;, coord.flip = TRUE, expand.grid = TRUE, vjust = \u0026#34;bottom\u0026#34;, hjust = \u0026#34;left\u0026#34;, title = \u0026#34;Gráfico de frecuencias, puntos cambiado\u0026#34; ) 5.3 Histogramas Otra función que podemos hacer es graficar histogramas, sin embargo, como ya hemos visto, la variable ingreso_percapita tiene casos muy altos que distorsionan la variable. Para solucionar esto, ocuparemos lo aprendido en el práctico anterior y filtraremos la variable sacando los ingresos mayores a $2.000.000, con la función filter de dplyr\ndatos_proc %\u0026gt;% filter(ingreso_percapita \u0026lt;= 2000000) %\u0026gt;% plot_frq(., ingreso_percapita, title = \u0026#34;Histograma\u0026#34;, type = c(\u0026#34;histogram\u0026#34;)) 5.4 Densidad Ahora que vemos la distribución del histograma, ¿cómo podemos ver su densidad?, es muy simple, para ello haremos un gráfico de densidad con el siguiente código\ndatos_proc %\u0026gt;% filter(ingreso_percapita \u0026lt;= 2000000) %\u0026gt;% plot_frq(., ingreso_percapita, title = \u0026#34;Gráfico de densidad\u0026#34;, type = c(\u0026#34;density\u0026#34;)) 5.5 Gráfico de cajas Para graficar los estadísticos de una variable, podemos hacerlo a través de un gráfico de cajas, para ello usaremos este código:\ndatos_proc %\u0026gt;% filter(ingreso_percapita \u0026lt;= 2000000) %\u0026gt;% plot_frq(., ingreso_percapita, title = \u0026#34;Gráfico de caja\u0026#34;, type = c(\u0026#34;boxplot\u0026#34;)) 5.6 Gráfico de violín Finalmente, si queremos presentar gráficos de violín, usamos este código\ndatos_proc %\u0026gt;% filter(ingreso_percapita \u0026lt;= 2000000) %\u0026gt;% plot_frq(., ingreso_percapita, title = \u0026#34;Gráfico de violín\u0026#34;, type = c(\u0026#34;violin\u0026#34;)) Como pueden ver, el único argumento que se modificaba era type = , es decir, para hacer diversos gráficos, sólo se debe especificar el tipo de gráfico que queremos.\n5.7 Gráfico de nube de puntos Ahora, si quisiéramos graficar la distribución de dos variables, podemos hacerlo con la función plot_scatter, esta muestra el diagrama de dispersión de dos variables.\ndatos_proc %\u0026gt;% filter(ingreso_percapita \u0026lt;= 2000000, horas_mens \u0026lt;= 600) %\u0026gt;% plot_scatter(., horas_mens, ingreso_percapita) También es posible agregar una variable de ocupación al diagrama de dispersión.\ndatos_proc %\u0026gt;% filter(ingreso_percapita \u0026lt;= 2000000, horas_mens \u0026lt;= 600) %\u0026gt;% plot_scatter(., horas_mens, ingreso_percapita, edad_tramo) 6. Visualización bivariada Ahora que ya hemos graficado las frecuencias de las variables, vamos a graficar frecuencias agrupadas, para ello usaremos la función plot:grpfrq de sjPlot, su estructura es la siguiente\nplot_grpfrq( var.cnt, var.grp, type = c(\u0026#34;bar\u0026#34;, \u0026#34;dot\u0026#34;, \u0026#34;line\u0026#34;, \u0026#34;boxplot\u0026#34;, \u0026#34;violin\u0026#34;) 6.1 Gráfico de barras La primera opción que nos entrega este código son los gráficos de barra, para usarlo queremos saber cuantos hombres y mujeres trabajaron al menos una hora la semana pasada, para ello graficaremos la variable sexo y ocupacion\nplot_grpfrq(datos_proc$sexo, datos_proc$ocupacion, type = c(\u0026#34;bar\u0026#34;), title = \u0026#34;Gráfico de barras\u0026#34;) Podemos ver que no solo nos muestra la frecuencia absoluta, sino que también la relativa en porcentaje\nPero además podemos ver agregar una tercera categoría, que es el total de ambas categorías. Para este ejercicio conoceremos que tramo de edad trabajo la semana pasada.\nPara este ejercicio usaremos la función plot_xtab, de la misma librería\nplot_xtab(datos_proc$edad_tramo, datos_proc$ocupacion, title = \u0026#34;Gráfico de barras\u0026#34;) 6.2 Gráfico de barras horizontales Con la misma función podemos graficar mediante barras horizontales\nplot_xtab(datos_proc$edad_tramo, datos_proc$ocupacion, margin = \u0026#34;row\u0026#34;, bar.pos = \u0026#34;stack\u0026#34;, title = \u0026#34;Gráfico de barras horizontales\u0026#34;, show.summary = TRUE, coord.flip = TRUE) 6.3 Gráfico de líneas Otra opción que tiene esta función, es la creación de gráficos de líneas, para ello conoceremos la relación entre el tramo etario y el recibir el IFE\nplot_grpfrq(datos_proc$edad_tramo, datos_proc$ife, title = \u0026#34;Gráfico de línea\u0026#34;, type = c(\u0026#34;line\u0026#34;)) También podemos ver la relación de el tramo etario y si trabajó la semana pasada\nplot_grpfrq(datos_proc$edad_tramo, datos_proc$ocupacion, title = \u0026#34;Gráfico de línea\u0026#34;, type = \u0026#34;line\u0026#34;) 6.4 Gráfico de cajas Ahora si queremos conocer cómo interactúa las horas de trabajo con el tramo etario, podemos visualizarlo mediante un gráfico de cajas\nplot_grpfrq(datos_proc$horas_mens, datos_proc$edad_tramo, title = \u0026#34;Gráfico de caja\u0026#34;, type = c(\u0026#34;boxplot\u0026#34;)) Además, se puede incorporar una tercera variable, en este caso lo haremos con la variable sexo\nplot_grpfrq(datos_proc$horas_mens, datos_proc$edad_tramo, intr.var = datos_proc$sexo, title = \u0026#34;Gráfico de cajas\u0026#34;, type = \u0026#34;box\u0026#34;) Nuevamente, la función nos permite la creación de múltiples gráficos, sólo se debe cambiar el argumento type =\n7. Tablas de contingencia ¡No podemos terminar sin saber cómo hacer tablas de frecuencias cruzadas!\nPor suerte sjPlot tiene la función sjt.xtab, que nos entrega tablas de frecuencias cruzadas\nsjt.xtab(datos_proc$sexo, datos_proc$ife, title = \u0026#34;Tabla de contingencias\u0026#34;, show.col.prc=TRUE, show.summary=FALSE) Tabla de contingencias\r\rSexo\ry26d_hog. Ãšltimos 12\nmeses, Â¿alguien\nrecibiÃ³ Ingreso\nFamiliar de\nEmergencia?\rTotal\r\r\rSÃ­\rNo\rNo sabe\r\r Hombre\r20958\n43.2\u0026nbsp;\u0026#37;\r43550\n46.5\u0026nbsp;\u0026#37;\r966\n45.8\u0026nbsp;\u0026#37;\r65474\n45.3\u0026nbsp;\u0026#37; \r Mujer\r27611\n56.8\u0026nbsp;\u0026#37;\r50189\n53.5\u0026nbsp;\u0026#37;\r1144\n54.2\u0026nbsp;\u0026#37;\r78944\n54.7\u0026nbsp;\u0026#37; \r Total\r48569\n100\u0026nbsp;\u0026#37;\r93739\n100\u0026nbsp;\u0026#37;\r2110\n100\u0026nbsp;\u0026#37;\r144418\n100\u0026nbsp;\u0026#37; \r\r¿Qué pasó? ¿por qué salen esos símbolos raros en la tabla?\n¡Es por la codificación!, para ello le agregamos el argumento encoding = \u0026quot;UTF-8\u0026quot; y ya tenemos nuestra tabla de frecuencias cruzadas\nsjt.xtab(datos_proc$sexo, datos_proc$ife, show.col.prc=TRUE, show.summary=FALSE, encoding = \u0026#34;UTF-8\u0026#34;, title = \u0026#34;Tabla de contingencia\u0026#34;, file = \u0026#34;output/figures/tabla3.doc\u0026#34;) Tabla de contingencia\r\rSexo\ry26d_hog. Ãšltimos 12\nmeses, Â¿alguien\nrecibiÃ³ Ingreso\nFamiliar de\nEmergencia?\rTotal\r\r\rSÃ­\rNo\rNo sabe\r\r Hombre\r20958\n43.2\u0026nbsp;\u0026#37;\r43550\n46.5\u0026nbsp;\u0026#37;\r966\n45.8\u0026nbsp;\u0026#37;\r65474\n45.3\u0026nbsp;\u0026#37; \r Mujer\r27611\n56.8\u0026nbsp;\u0026#37;\r50189\n53.5\u0026nbsp;\u0026#37;\r1144\n54.2\u0026nbsp;\u0026#37;\r78944\n54.7\u0026nbsp;\u0026#37; \r Total\r48569\n100\u0026nbsp;\u0026#37;\r93739\n100\u0026nbsp;\u0026#37;\r2110\n100\u0026nbsp;\u0026#37;\r144418\n100\u0026nbsp;\u0026#37; \r\r8. Correlación Ahora veremos estadísticos bivariados, como la correlación, en esta ocasión generaremos una tabla de correlación entre las variables horas_mens y ingreso_percapita, para eso usaremos la función tab_corr de sjPlot\nPreviamente debemos seleccionar las variables a utilizar, ya que no tiene sentido incluir en el análisis variables nominales\ndatos_proc %\u0026gt;% select(ingreso_percapita, horas_mens) %\u0026gt;% tab_corr(., triangle = \u0026#34;lower\u0026#34;, title = \u0026#34;Tabla de correlación\u0026#34;, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/tabla4.doc\u0026#34;) Tabla de correlaciÃ³n\r\r\u0026nbsp;\rIngreso total del hogar\ry2_hrs. NÃºmero de horas mensuales\npactadas con empleador\r\r\rIngreso total del hogar\r\u0026nbsp;\r\u0026nbsp;\r\r\ry2_hrs. NÃºmero de horas mensuales\npactadas con empleador\r0.054***\r\u0026nbsp;\r\r\rComputed correlation used pearson-method with listwise-deletion.\r\r\r9. Anova Finalmente, si queremos reportar un análisis de Anova, no podemos dejar de lado este gráfico que nos otorga la función sjp.aov1 del paquete sjPlot\nsjp.aov1(datos_proc$ingreso_percapita, datos_proc$sexo, title = \u0026#34;Anova\u0026#34;) 9. Resumen del práctico ¡Eso es todo por este práctico! Hoy aprendimos a:\n Manejar datos descriptivos en Rstudio A obtener tablas descriptivas A visualizar los descriptivos A obtener tablas de contingencia A obtener tablas de correlación A obtener gráficos de Anova  7. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso. En tu correo electrónico está disponible el código mediante al cuál debes acceder para actualizar tu estado de avance del curso.\n","date":1629676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629676800,"objectID":"f3d97bcfb35ff647d4d9f85dd4966420","permalink":"/example/04-practico/","publishdate":"2021-08-23T00:00:00Z","relpermalink":"/example/04-practico/","section":"example","summary":"0. Objetivo del práctico El objetivo del práctico, es avanzar en el análisis de los datos a través del uso de estadísticos descriptivos. Para esto ya debemos contar con datos previamente procesados del práctico N°3.","tags":null,"title":"Descriptivos","type":"docs"},{"authors":null,"categories":null,"content":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nBásicos\r\rSeleccionar\r\rFiltrar\r\rCrear\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver los comandos específicos para navegar en ellas.\r\rMaterial de la clase    03-bloque.zip\n ¿Cómo descomprimir archivos?     Práctico\n   Contestar reporte de registro\n  Recomendaciones    “Tipos de datos-columnas en R”\n   Tutoriales, “Learn-R”\n Tutorial de dplyr por profesora Valentina Andrade y ayudante Dafne Jaime     “Data manipulation in R,” (avanzado)\n  ","date":1629417600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629417600,"objectID":"0316e4026587433def89bf10f5c614d0","permalink":"/content/03-content/","publishdate":"2021-08-20T00:00:00Z","relpermalink":"/content/03-content/","section":"content","summary":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nBásicos\r\rSeleccionar\r\rFiltrar\r\rCrear\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ?","tags":null,"title":"Transformación y selección de variables","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el procesamiento de los datos a través de la transformación de las variables a utilizar. Para ello revisaremos procedimientos básicos para el manejo de datos con Rstudio.\n1. Recursos de la práctica En este práctico utilizaremos la base de datos de la Encuesta de Caracterización Socioeconómica (CASEN), la cual fue procesada en el Práctico anterior.Recuerden siempre consultar el manual/libro de códigos antes de trabajar una base de datos.\n2. Librerias a utilizar En este práctico utilizaremos cuatro paquetes\n  pacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\n  sjmisc: explorar datos\n  car(): recodificar manteniendo las etiquetas\n  tidyverse: colección de paquetes, del cuál utilizaremos dplyr forcast\n  magrittr: nos permitirá ocupar dos operadores que en R son muy utilizados\n  Pasos del procesamiento 1. Cargar librerías Primero instalamos pacman. Si ya lo hicieron no lo vuelvan a hacer\ninstall.packages(\u0026#34;pacman\u0026#34;) library (pacman) Luego cargaremos así los paquetes. Les recordamos que cuando luego de un paquete ponemos :: esto se refiere a que se \u0026ldquo;fuerza\u0026rdquo; que esa función provenga de ese paquete\npacman::p_load(tidyverse, magrittr, car, sjmisc) 2. Cargar base de datos datos \u0026lt;- read_dta(\u0026#34;input/data/Casen en Pandemia 2020 STATA.dta\u0026#34;) En el panel Environment, visualizamos el nuevo objeto, que posee 185.437 observaciones (o filas), y 650 variables (columnas)\nRecordemos que también podemos explorar la base de datos con las siguientes funciones.\n# De paquete base dim(datos) # nos entrega las dimensiones, es decir el numero de observaciones y el número de variables View(datos) # se usa para visualizar la base de datos names(datos) # entrega los nombres de las variables que componen el dataset head(datos) # muestra las primeras filas presentes en el marco de datos # De sjmisc find_var(datos, \u0026#34;concepto\u0026#34;) # se utiliza para encontrar variables 4. Un aspecto clave antes de comenzar: los operadores Previo a trabajar con la base de datos, debemos repasemos el concepto de operadores. Estos símbolos no son de uso exclusivo en R ¡probablemente los conoces desde tus cursos de matemática! Ahora bien, no todos tienen el mismo significado que en otros softwares.\nLos operadores serán símbolos que permitirán, en los distintos procedimientos de procesamiento, simplificar procesos. Por ejemplo, serán útilizados cuando filtremos nuestros datos para personas de ciertas categorías, cuando calculemos variables nuevas (de manera aritmética o condicional) o, simplemente, cuando queramos hacer procesos \u0026ldquo;concatenados\u0026rdquo;.\nOperadores relacionales Se usan para hacer comparaciones. Cuando en la Tabla 1 nos referimos a un valor, esto refiere tambien a variables\n   Símbolo Función     \u0026lt; Un valor es menor que otro   \u0026gt; Un valor es mayor que otro   == Un valor es igual que otro 1   \u0026lt;= Un valor es menor o igual que otro   \u0026gt;= Un valor es mayor o igual que otro   != Un valor es distinto o diferente que otro   %in% Un valor pertenece al conjunto designado 2   is.na() El valor es perdido o NA   !is.na() El valor es distinto de NA    Operadores aritméticos Realizan operaciones, como la suma, resta, división, entre otros.\n   Símbolo Función     + Suma   - Resta   * Multiplicación   / División   ^ Elevado    Operadores de asignación Hay dos formas de asignar objetoA \u0026lt;- objetoB o objetoA = objetoB. Ambas implican que lo que se este realizando en el objetoB implica que eso va a producir o generar al objetoA\nOperadores booleanos Describen relaciones lógicas o condicionales\n   Símbolo Función     \u0026amp; Indica un y lógico   | Indica un o lógico   xor() Excluye la condición   ! Distinto de \u0026hellip;   any Ninguna de las condiciones serán utilizadas   all Todas las condiciones serán ocupadas    Figura 1: Resumen de operadores\nOperador pipeline %\u0026gt;% ¡Aquí mucha atención! Este operador %\u0026gt;% (llamado pipe) no es un operador que este contenido en las funciones base del lenguaje R. Este operador proviene de la función magrittr de tidyverse, y es de los operadores más útiles y utilizados en R.\n¿Para qué sirve? Para concatenar múltiples funciones y procesos. Imagina que quieres filtrar una base de datos a partir de tramos etarios. Pero no tienes esa variable creada. ¿Que hacer? La respuesta: concatenar el proceso de creación de variables y luego filtrar. Eso se puede hacer gracias a %\u0026gt;% (ya mostraremos como utilizar esta herramienta), que por lo demás es muy fácil de ejecutar.\n Ctrl + shift + M Para Windows ⌘ + shift + M Para Mac  5. Transformación y selección de variables con dplyr() dplyr()es un paquete de tidyverse que proporciona una base para la manipulación de datos, principalmente a partir de funciones que permiten operar las columnas (o variables)\n5.1 select() para manipular variables Para seleccionar variables ocuparemos select(). Existen diversos enfoques para realizarlo. Primero, debemos conocer su estructura\nSi queremos incluir las variables variable1, variable2 y variable3 select(datos, variable1, variable2, variable3)\r\rSi queremos excluir anteponemos un menos -variable1 select(datos, -variable1)\r\rselect() por indexación La indexación refiere al orden que tiene la columna o variable dentro de los datos. Imaginemos que queremos seleccionar:\nselect(datos, 1, 2) # la primera y la segunda columna ## # A tibble: 185,437 x 2 ## folio o ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 110110010101 1 ## 2 110110010101 2 ## 3 110110010201 2 ## 4 110110010201 1 ## 5 110110010201 3 ## 6 110110010301 2 ## 7 110110010301 3 ## 8 110110010301 1 ## 9 110110010401 1 ## 10 110110010401 2 ## # ... with 185,427 more rows select(datos, 1:4) # la primera hasta la cuarta columna ## # A tibble: 185,437 x 4 ## folio o id_persona id_vivienda ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 110110010101 1 5 1101100101 ## 2 110110010101 2 6 1101100101 ## 3 110110010201 2 31 1101100102 ## 4 110110010201 1 32 1101100102 ## 5 110110010201 3 30 1101100102 ## 6 110110010301 2 117 1101100103 ## 7 110110010301 3 118 1101100103 ## 8 110110010301 1 116 1101100103 ## 9 110110010401 1 2209 1101100104 ## 10 110110010401 2 2210 1101100104 ## # ... with 185,427 more rows select(datos, c(1,4)) # la primera y la cuarta columna ## # A tibble: 185,437 x 2 ## folio id_vivienda ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 110110010101 1101100101 ## 2 110110010101 1101100101 ## 3 110110010201 1101100102 ## 4 110110010201 1101100102 ## 5 110110010201 1101100102 ## 6 110110010301 1101100103 ## 7 110110010301 1101100103 ## 8 110110010301 1101100103 ## 9 110110010401 1101100104 ## 10 110110010401 1101100104 ## # ... with 185,427 more rows select() por nombre de columna Si conocemos el nombre de la variable simplemente lo podemos poner y se seleccionará.\nselect(datos, edad, sexo, o1) ## # A tibble: 185,437 x 3 ## edad sexo o1 ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 2 [Mujer] 2 [No] ## 2 4 2 [Mujer] NA ## 3 5 2 [Mujer] NA ## 4 45 1 [Hombre] 1 [Sí] ## 5 19 2 [Mujer] 2 [No] ## 6 57 1 [Hombre] 1 [Sí] ## 7 20 1 [Hombre] 2 [No] ## 8 56 2 [Mujer] 2 [No] ## 9 77 1 [Hombre] 2 [No] ## 10 60 2 [Mujer] 2 [No] ## # ... with 185,427 more rows También puedo renombrar en el mismo proceso de selección indicando nuevo_nombre = nombre_original en el proceso de selección\nselect(datos, edad, sexo, ocupacion = o1) ## # A tibble: 185,437 x 3 ## edad sexo ocupacion ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 2 [Mujer] 2 [No] ## 2 4 2 [Mujer] NA ## 3 5 2 [Mujer] NA ## 4 45 1 [Hombre] 1 [Sí] ## 5 19 2 [Mujer] 2 [No] ## 6 57 1 [Hombre] 1 [Sí] ## 7 20 1 [Hombre] 2 [No] ## 8 56 2 [Mujer] 2 [No] ## 9 77 1 [Hombre] 2 [No] ## 10 60 2 [Mujer] 2 [No] ## # ... with 185,427 more rows select() para reordenar variables Podemos seleccionar variables y luego indicar que queremos todo el resto de las variables (everythin()). Solo por una cosa de orden. Esto será útil sobre todo cuando tengamos identificadores\nselect(datos, id_persona, sexo, edad, everything()) ## # A tibble: 185,437 x 650 ## id_persona sexo edad folio o id_vivienda region provincia ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 5 2 [Mujer] 34 1.10e11 1 1101100101 1 [Región d~ 11 [Iquiq~ ## 2 6 2 [Mujer] 4 1.10e11 2 1101100101 1 [Región d~ 11 [Iquiq~ ## 3 31 2 [Mujer] 5 1.10e11 2 1101100102 1 [Región d~ 11 [Iquiq~ ## 4 32 1 [Hombr~ 45 1.10e11 1 1101100102 1 [Región d~ 11 [Iquiq~ ## 5 30 2 [Mujer] 19 1.10e11 3 1101100102 1 [Región d~ 11 [Iquiq~ ## 6 117 1 [Hombr~ 57 1.10e11 2 1101100103 1 [Región d~ 11 [Iquiq~ ## 7 118 1 [Hombr~ 20 1.10e11 3 1101100103 1 [Región d~ 11 [Iquiq~ ## 8 116 2 [Mujer] 56 1.10e11 1 1101100103 1 [Región d~ 11 [Iquiq~ ## 9 2209 1 [Hombr~ 77 1.10e11 1 1101100104 1 [Región d~ 11 [Iquiq~ ## 10 2210 2 [Mujer] 60 1.10e11 2 1101100104 1 [Región d~ 11 [Iquiq~ ## # ... with 185,427 more rows, and 642 more variables: comuna \u0026lt;dbl+lbl\u0026gt;, ## # zona \u0026lt;dbl+lbl\u0026gt;, area \u0026lt;dbl+lbl\u0026gt;, segmento \u0026lt;dbl\u0026gt;, estrato \u0026lt;dbl\u0026gt;, ## # cod_upm \u0026lt;dbl\u0026gt;, hogar \u0026lt;dbl\u0026gt;, p6_p_con \u0026lt;dbl+lbl\u0026gt;, expr \u0026lt;dbl\u0026gt;, expp \u0026lt;dbl\u0026gt;, ## # expc \u0026lt;dbl\u0026gt;, varstrat \u0026lt;dbl\u0026gt;, varunit \u0026lt;dbl\u0026gt;, fecha_entrev \u0026lt;date\u0026gt;, ## # metodologia_entrev \u0026lt;dbl+lbl\u0026gt;, tot_hog \u0026lt;dbl\u0026gt;, numviv \u0026lt;dbl\u0026gt;, ## # informante_idoneo \u0026lt;dbl+lbl\u0026gt;, tel1 \u0026lt;dbl+lbl\u0026gt;, tel2 \u0026lt;dbl+lbl\u0026gt;, ## # tel3 \u0026lt;dbl+lbl\u0026gt;, tel4 \u0026lt;dbl+lbl\u0026gt;, tel5 \u0026lt;dbl+lbl\u0026gt;, tel6 \u0026lt;dbl+lbl\u0026gt;, ## # tel7 \u0026lt;dbl+lbl\u0026gt;, tel8 \u0026lt;dbl+lbl\u0026gt;, p0a \u0026lt;dbl+lbl\u0026gt;, p0b \u0026lt;dbl+lbl\u0026gt;, p1 \u0026lt;dbl+lbl\u0026gt;, ## # p2 \u0026lt;dbl+lbl\u0026gt;, p3 \u0026lt;dbl+lbl\u0026gt;, p4 \u0026lt;dbl+lbl\u0026gt;, p5 \u0026lt;dbl+lbl\u0026gt;, p6 \u0026lt;dbl\u0026gt;, ## # p7 \u0026lt;dbl+lbl\u0026gt;, p8 \u0026lt;dbl\u0026gt;, id_persona_e \u0026lt;dbl+lbl\u0026gt;, pco1 \u0026lt;dbl+lbl\u0026gt;, ## # tot_per \u0026lt;dbl\u0026gt;, h5 \u0026lt;dbl\u0026gt;, ecivil \u0026lt;dbl+lbl\u0026gt;, h5_1 \u0026lt;chr\u0026gt;, h5_2 \u0026lt;dbl\u0026gt;, ## # nucleo \u0026lt;dbl\u0026gt;, pco2 \u0026lt;dbl+lbl\u0026gt;, numper \u0026lt;dbl\u0026gt;, n_ocupados \u0026lt;dbl\u0026gt;, ## # n_desocupados \u0026lt;dbl\u0026gt;, n_inactivos \u0026lt;dbl\u0026gt;, conyuge_jh \u0026lt;dbl+lbl\u0026gt;, numnuc \u0026lt;dbl\u0026gt;, ## # men18c \u0026lt;dbl+lbl\u0026gt;, may60c \u0026lt;dbl+lbl\u0026gt;, tipohogar \u0026lt;dbl+lbl\u0026gt;, e2 \u0026lt;dbl+lbl\u0026gt;, ## # e5b \u0026lt;dbl+lbl\u0026gt;, e6a \u0026lt;dbl+lbl\u0026gt;, e6b \u0026lt;dbl+lbl\u0026gt;, asiste2 \u0026lt;dbl+lbl\u0026gt;, esc \u0026lt;dbl\u0026gt;, ## # esc2 \u0026lt;dbl\u0026gt;, educ \u0026lt;dbl+lbl\u0026gt;, o1 \u0026lt;dbl+lbl\u0026gt;, o2 \u0026lt;dbl+lbl\u0026gt;, o3 \u0026lt;dbl+lbl\u0026gt;, ## # o3b \u0026lt;dbl+lbl\u0026gt;, o4 \u0026lt;dbl+lbl\u0026gt;, o6 \u0026lt;dbl+lbl\u0026gt;, o7 \u0026lt;dbl+lbl\u0026gt;, o7_esp \u0026lt;chr\u0026gt;, ## # o9a \u0026lt;chr\u0026gt;, o9b \u0026lt;chr\u0026gt;, oficio4_08 \u0026lt;dbl+lbl\u0026gt;, oficio1_08 \u0026lt;dbl+lbl\u0026gt;, ## # oficio4_88 \u0026lt;dbl+lbl\u0026gt;, oficio1_88 \u0026lt;dbl+lbl\u0026gt;, o15 \u0026lt;dbl+lbl\u0026gt;, o16 \u0026lt;dbl+lbl\u0026gt;, ## # o17 \u0026lt;dbl+lbl\u0026gt;, o24 \u0026lt;chr\u0026gt;, rama4 \u0026lt;dbl+lbl\u0026gt;, rama1 \u0026lt;dbl+lbl\u0026gt;, ## # rama4_rev3 \u0026lt;dbl+lbl\u0026gt;, rama1_rev3 \u0026lt;dbl+lbl\u0026gt;, o29 \u0026lt;dbl+lbl\u0026gt;, o30 \u0026lt;dbl+lbl\u0026gt;, ## # o31 \u0026lt;dbl+lbl\u0026gt;, o32 \u0026lt;dbl+lbl\u0026gt;, o32_esp \u0026lt;chr\u0026gt;, o32b \u0026lt;dbl+lbl\u0026gt;, ## # o33a \u0026lt;dbl+lbl\u0026gt;, o33b \u0026lt;dbl+lbl\u0026gt;, o34 \u0026lt;dbl+lbl\u0026gt;, o35 \u0026lt;dbl+lbl\u0026gt;, ## # o36 \u0026lt;dbl+lbl\u0026gt;, activ \u0026lt;dbl+lbl\u0026gt;, activ2 \u0026lt;dbl+lbl\u0026gt;, ocup_inf \u0026lt;dbl+lbl\u0026gt;, ## # y1_preg \u0026lt;dbl+lbl\u0026gt;, y1 \u0026lt;dbl\u0026gt;, ... select() con patrones de texto Podemos seleccionar variables considerando los prefijos, sufijos o partes de cómo están nombradas las variables. Independiente de qué tipo de patrón estes buscando, como todo texto y expresión regular en R (y gran parte de los carácteres) este texto debe venir entre comillas. Algunas de las funciones que posibilitan este proceso son:\n starts_with(): prefijo ends_with() : sufijo contains() : contiene una cadena de texto literal matches() : coincide con una expresión regular  select(datos, starts_with(\u0026#34;a\u0026#34;), ends_with(\u0026#34;preg\u0026#34;)) ## # A tibble: 185,437 x 63 ## area asiste2 activ activ2 y1_preg y2a_preg y2b_preg y3a_preg y3b_preg ## \u0026lt;dbl+l\u0026gt; \u0026lt;dbl+l\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+l\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lb\u0026gt; ## 1 1 [Urb~ 2 [No ~ 1 [Ocu~ 1 [Ocu~ NA NA NA NA NA ## 2 1 [Urb~ 1 [Asi~ NA NA NA NA NA NA NA ## 3 1 [Urb~ 1 [Asi~ NA NA NA NA NA NA NA ## 4 1 [Urb~ 2 [No ~ 1 [Ocu~ 1 [Ocu~ 1 [Sí] 1 [Día~ 1 [Hor~ 1 [Sí] 1 [Sí] ## 5 1 [Urb~ 2 [No ~ 1 [Ocu~ 1 [Ocu~ NA NA NA NA NA ## 6 1 [Urb~ 2 [No ~ 1 [Ocu~ 1 [Ocu~ 1 [Sí] 1 [Día~ 1 [Hor~ 2 [No] 2 [No] ## 7 1 [Urb~ 1 [Asi~ 3 [Ina~ 4 [Ina~ NA NA NA NA NA ## 8 1 [Urb~ 2 [No ~ 3 [Ina~ 4 [Ina~ NA NA NA NA NA ## 9 1 [Urb~ 2 [No ~ 3 [Ina~ 4 [Ina~ NA NA NA NA NA ## 10 1 [Urb~ 2 [No ~ 3 [Ina~ 4 [Ina~ NA NA NA NA NA ## # ... with 185,427 more rows, and 54 more variables: y3c_preg \u0026lt;dbl+lbl\u0026gt;, ## # y3d_preg \u0026lt;dbl+lbl\u0026gt;, y3e_preg \u0026lt;dbl+lbl\u0026gt;, y3f_preg \u0026lt;dbl+lbl\u0026gt;, ## # y4a_preg \u0026lt;dbl+lbl\u0026gt;, y4b_preg \u0026lt;dbl+lbl\u0026gt;, y4c_preg \u0026lt;dbl+lbl\u0026gt;, ## # y4d_preg \u0026lt;dbl+lbl\u0026gt;, y5a_preg \u0026lt;dbl+lbl\u0026gt;, y5b_preg \u0026lt;dbl+lbl\u0026gt;, ## # y5c_preg \u0026lt;dbl+lbl\u0026gt;, y5d_preg \u0026lt;dbl+lbl\u0026gt;, y5e_preg \u0026lt;dbl+lbl\u0026gt;, ## # y5f_preg \u0026lt;dbl+lbl\u0026gt;, y5g_preg \u0026lt;dbl+lbl\u0026gt;, y5h_preg \u0026lt;dbl+lbl\u0026gt;, ## # y5i_preg \u0026lt;dbl+lbl\u0026gt;, y5j_preg \u0026lt;dbl+lbl\u0026gt;, y5k_preg \u0026lt;dbl+lbl\u0026gt;, ## # y5l_preg \u0026lt;dbl+lbl\u0026gt;, y6_preg \u0026lt;dbl+lbl\u0026gt;, y7_preg \u0026lt;dbl+lbl\u0026gt;, ## # y8_preg \u0026lt;dbl+lbl\u0026gt;, y9_preg \u0026lt;dbl+lbl\u0026gt;, y10_preg \u0026lt;dbl+lbl\u0026gt;, ## # y11_preg \u0026lt;dbl+lbl\u0026gt;, y12a_preg \u0026lt;dbl+lbl\u0026gt;, y12b_preg \u0026lt;dbl+lbl\u0026gt;, ## # y13a_preg \u0026lt;dbl+lbl\u0026gt;, y13b_preg \u0026lt;dbl+lbl\u0026gt;, y13c_preg \u0026lt;dbl+lbl\u0026gt;, ## # y14a_preg \u0026lt;dbl+lbl\u0026gt;, y14b_preg \u0026lt;dbl+lbl\u0026gt;, y14c_preg \u0026lt;dbl+lbl\u0026gt;, ## # y15a_preg \u0026lt;dbl+lbl\u0026gt;, y15b_preg \u0026lt;dbl+lbl\u0026gt;, y15c_preg \u0026lt;dbl+lbl\u0026gt;, ## # y16a_preg \u0026lt;dbl+lbl\u0026gt;, y16b_preg \u0026lt;dbl+lbl\u0026gt;, y17_preg \u0026lt;dbl+lbl\u0026gt;, ## # y18a_preg \u0026lt;dbl+lbl\u0026gt;, y18b_preg \u0026lt;dbl+lbl\u0026gt;, y18c_preg \u0026lt;dbl+lbl\u0026gt;, ## # y18d_preg \u0026lt;dbl+lbl\u0026gt;, y22_preg \u0026lt;dbl+lbl\u0026gt;, y23a_preg \u0026lt;dbl+lbl\u0026gt;, ## # y24_preg \u0026lt;dbl+lbl\u0026gt;, y25a_preg \u0026lt;dbl+lbl\u0026gt;, y25g_preg \u0026lt;dbl+lbl\u0026gt;, ## # y26a_preg \u0026lt;dbl+lbl\u0026gt;, y26b_preg \u0026lt;dbl+lbl\u0026gt;, y26d_preg \u0026lt;dbl+lbl\u0026gt;, ## # y27_preg \u0026lt;dbl+lbl\u0026gt;, v19_preg \u0026lt;dbl+lbl\u0026gt; # También se pueden combinar con operadores logicos select(datos, starts_with(\u0026#34;y1\u0026#34;)\u0026amp;ends_with(\u0026#34;preg\u0026#34;)) ## # A tibble: 185,437 x 21 ## y1_preg y10_preg y11_preg y12a_preg y12b_preg y13a_preg y13b_preg y13c_preg ## \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 NA NA NA 2 [No] 2 [No] 2 [No] 2 [No] 1 [Sí] ## 2 NA NA NA NA NA 2 [No] 1 [Sí] 2 [No] ## 3 NA NA NA NA NA 2 [No] 2 [No] 1 [Sí] ## 4 1 [Sí] NA NA 2 [No] 2 [No] 2 [No] 2 [No] 2 [No] ## 5 NA NA NA 2 [No] 2 [No] 2 [No] 2 [No] 1 [Sí] ## 6 1 [Sí] NA NA 2 [No] 2 [No] 2 [No] 2 [No] 2 [No] ## 7 NA NA 2 [No r~ 2 [No] 2 [No] 2 [No] 2 [No] 2 [No] ## 8 NA NA 2 [No r~ 2 [No] 2 [No] 2 [No] 2 [No] 2 [No] ## 9 NA NA 2 [No r~ 2 [No] 2 [No] 2 [No] 2 [No] 2 [No] ## 10 NA NA 2 [No r~ 2 [No] 2 [No] 2 [No] 2 [No] 2 [No] ## # ... with 185,427 more rows, and 13 more variables: y14a_preg \u0026lt;dbl+lbl\u0026gt;, ## # y14b_preg \u0026lt;dbl+lbl\u0026gt;, y14c_preg \u0026lt;dbl+lbl\u0026gt;, y15a_preg \u0026lt;dbl+lbl\u0026gt;, ## # y15b_preg \u0026lt;dbl+lbl\u0026gt;, y15c_preg \u0026lt;dbl+lbl\u0026gt;, y16a_preg \u0026lt;dbl+lbl\u0026gt;, ## # y16b_preg \u0026lt;dbl+lbl\u0026gt;, y17_preg \u0026lt;dbl+lbl\u0026gt;, y18a_preg \u0026lt;dbl+lbl\u0026gt;, ## # y18b_preg \u0026lt;dbl+lbl\u0026gt;, y18c_preg \u0026lt;dbl+lbl\u0026gt;, y18d_preg \u0026lt;dbl+lbl\u0026gt; select(datos, contains(\u0026#34;pobre\u0026#34;)|contains(\u0026#34;vivienda\u0026#34;)) ## # A tibble: 185,437 x 3 ## pobreza pobreza_sinte id_vivienda ## \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100101 ## 2 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100101 ## 3 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100102 ## 4 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100102 ## 5 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100102 ## 6 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100103 ## 7 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100103 ## 8 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100103 ## 9 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100104 ## 10 3 [No pobres] 3 [No pobres sin transferencia Covid ] 1101100104 ## # ... with 185,427 more rows select(datos, matches(\u0026#34;pobreza_|vivienda\u0026#34;)) ## # A tibble: 185,437 x 2 ## id_vivienda pobreza_sinte ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 1101100101 3 [No pobres sin transferencia Covid ] ## 2 1101100101 3 [No pobres sin transferencia Covid ] ## 3 1101100102 3 [No pobres sin transferencia Covid ] ## 4 1101100102 3 [No pobres sin transferencia Covid ] ## 5 1101100102 3 [No pobres sin transferencia Covid ] ## 6 1101100103 3 [No pobres sin transferencia Covid ] ## 7 1101100103 3 [No pobres sin transferencia Covid ] ## 8 1101100103 3 [No pobres sin transferencia Covid ] ## 9 1101100104 3 [No pobres sin transferencia Covid ] ## 10 1101100104 3 [No pobres sin transferencia Covid ] ## # ... with 185,427 more rows select() y condiciones lógicas Si combinamos select() con where() obtendremos algo así como una frase \u0026ldquo;seleciona donde\u0026rdquo;, ese donde responde a una condición que cumple cierta variable. Por ejemplo, queremos seleccionar todas las variables que son carácteres (is.character):\nselect(datos, where(is.character)) ## # A tibble: 185,437 x 19 ## h5_1 o7_esp o9a o9b o24 o32_esp y3f_esp y4d_esp y18d_esp y27_esp ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 \u0026#34;\u0026#34; \u0026#34;VENDE~ \u0026#34;VEND~ \u0026#34;VENDE~ \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 2 5 \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 3 32 \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 4 0 \u0026#34;\u0026#34; \u0026#34;GASTR~ \u0026#34;BARM~ \u0026#34;HOTEL~ \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 5 32 \u0026#34;\u0026#34; \u0026#34;ARTES~ \u0026#34;QUEQ~ \u0026#34;HACE ~ \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 6 0 \u0026#34;\u0026#34; \u0026#34;DGAC\u0026#34; \u0026#34;CONT~ \u0026#34;AEROP~ \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 7 116|1~ \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 8 0 \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 9 0 \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## 10 0 \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;\u0026#34; ## # ... with 185,427 more rows, and 9 more variables: y28_1j_esp \u0026lt;chr\u0026gt;, ## # s18_esp \u0026lt;chr\u0026gt;, s28_esp \u0026lt;chr\u0026gt;, s30_esp \u0026lt;chr\u0026gt;, r1b_comuna_esp \u0026lt;chr\u0026gt;, ## # r1b_pais_esp \u0026lt;chr\u0026gt;, r2_comuna_esp \u0026lt;chr\u0026gt;, r2_pais_esp \u0026lt;chr\u0026gt;, v20_esp \u0026lt;chr\u0026gt; Luego de la revisión del libro de códigos y la exploración de datos mediante a funciones como find_var() de sjmisc decidimos trabajar con las siguientes variables.\n edad sexo s13: previsión de salud tot_per: número de personas en el hogar ytoth: ingresos totales del hogar o1: ocupación y26d_total: Monto del IFE y26d_hog: ¿Alguien recibió el IFE?  ¡Apliquémos conocimientos!\nselect(datos, edad, sexo, prev =592, ocupacion = o1, tot_per, ytoth, starts_with(\u0026#34;y26d_\u0026#34;)\u0026amp;matches(\u0026#34;total|hog\u0026#34;)) ## # A tibble: 185,437 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 2 [Mujer] 3 [ISAPRE] 2 [No] 2 3.91e5 1 [Sí] NA ## 2 4 2 [Mujer] 3 [ISAPRE] NA 2 3.91e5 1 [Sí] NA ## 3 5 2 [Mujer] 4 [Ninguno (par~ NA 3 9.48e5 2 [No] NA ## 4 45 1 [Hombr~ 1 [Sistema Públ~ 1 [Sí] 3 9.48e5 2 [No] NA ## 5 19 2 [Mujer] 4 [Ninguno (par~ 2 [No] 3 9.48e5 2 [No] NA ## 6 57 1 [Hombr~ 5 [Otro sistema] 1 [Sí] 3 3.00e6 2 [No] NA ## 7 20 1 [Hombr~ 5 [Otro sistema] 2 [No] 3 3.00e6 2 [No] NA ## 8 56 2 [Mujer] 5 [Otro sistema] 2 [No] 3 3.00e6 2 [No] NA ## 9 77 1 [Hombr~ 1 [Sistema Públ~ 2 [No] 2 6.10e5 2 [No] NA ## 10 60 2 [Mujer] 1 [Sistema Públ~ 2 [No] 2 6.10e5 2 [No] NA ## # ... with 185,427 more rows Es una buena práctica trabajar solo con las columnas que utilizaremos para el análisis, principalmente pues disminuye el uso de memoria\ndatos_proc \u0026lt;- select(datos, edad, sexo, prev = 592, ocupacion = o1, tot_per, ytoth, starts_with(\u0026#34;y26d_\u0026#34;)\u0026amp;matches(\u0026#34;total|hog\u0026#34;)) El nuevo objeto posee650 variables (columnas), pero conserva las filas 185.437 (u observaciones) ¿Qué pasa si quiero trabajar con un subset de casos? La respuesta es filter()\n5.2 filter() para manipular observaciones La función filter() de dplyr escoge o extrae filas basados en sus valores, subdivide un data frame (subset), reteniendo todas las filas que satisfacen sus condiciones.\nCon filter() será esencial el uso de los operadores que ya vimos, dado que las observaciones que preservarán en nuestros datos (y aquellas que no), están definidas por condiciones lógicas (relacionales o booleanas)\nfilter(datos, condicion_para filtrar) Esta condición para filtrar podría ser, por ejemplo variable1 \u0026gt;= 3\r\rfilter con números Imaginémos que queremos una base con las personas mayores de 15 años. Pero también que pertenezcan a hogares con menos de 7 personas.\nfilter(datos_proc, edad \u0026gt;= 15) ## # A tibble: 151,315 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 2 [Mujer] 3 [ISAPRE] 2 [No] 2 3.91e5 1 [Sí] NA ## 2 45 1 [Hombr~ 1 [Sistema Públ~ 1 [Sí] 3 9.48e5 2 [No] NA ## 3 19 2 [Mujer] 4 [Ninguno (par~ 2 [No] 3 9.48e5 2 [No] NA ## 4 57 1 [Hombr~ 5 [Otro sistema] 1 [Sí] 3 3.00e6 2 [No] NA ## 5 20 1 [Hombr~ 5 [Otro sistema] 2 [No] 3 3.00e6 2 [No] NA ## 6 56 2 [Mujer] 5 [Otro sistema] 2 [No] 3 3.00e6 2 [No] NA ## 7 77 1 [Hombr~ 1 [Sistema Públ~ 2 [No] 2 6.10e5 2 [No] NA ## 8 60 2 [Mujer] 1 [Sistema Públ~ 2 [No] 2 6.10e5 2 [No] NA ## 9 54 2 [Mujer] 1 [Sistema Públ~ 1 [Sí] 4 1.32e6 1 [Sí] NA ## 10 18 1 [Hombr~ 4 [Ninguno (par~ 2 [No] 4 1.32e6 1 [Sí] NA ## # ... with 151,305 more rows filter(datos_proc, edad \u0026gt;= 15 \u0026amp; tot_per \u0026lt;7) ## # A tibble: 144,418 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 2 [Mujer] 3 [ISAPRE] 2 [No] 2 3.91e5 1 [Sí] NA ## 2 45 1 [Hombr~ 1 [Sistema Públ~ 1 [Sí] 3 9.48e5 2 [No] NA ## 3 19 2 [Mujer] 4 [Ninguno (par~ 2 [No] 3 9.48e5 2 [No] NA ## 4 57 1 [Hombr~ 5 [Otro sistema] 1 [Sí] 3 3.00e6 2 [No] NA ## 5 20 1 [Hombr~ 5 [Otro sistema] 2 [No] 3 3.00e6 2 [No] NA ## 6 56 2 [Mujer] 5 [Otro sistema] 2 [No] 3 3.00e6 2 [No] NA ## 7 77 1 [Hombr~ 1 [Sistema Públ~ 2 [No] 2 6.10e5 2 [No] NA ## 8 60 2 [Mujer] 1 [Sistema Públ~ 2 [No] 2 6.10e5 2 [No] NA ## 9 54 2 [Mujer] 1 [Sistema Públ~ 1 [Sí] 4 1.32e6 1 [Sí] NA ## 10 18 1 [Hombr~ 4 [Ninguno (par~ 2 [No] 4 1.32e6 1 [Sí] NA ## # ... with 144,408 more rows ¿Y si quiero filtrar para saber el valor máximo de ingresos (ytoth)?\nfilter(datos_proc, ytoth == max(ytoth)) ## # A tibble: 1 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 41 1 [Hombr~ 1 [Sistema Públ~ 1 [Sí] 1 2.25e8 2 [No] NA ¡Gana $225.200.000, es Hombre y tiene 41 años! (y vive solo\u0026hellip;)\nfilter() con carácteres Si queremos filtrar por la variable sexo solo a las mujeres, tengo dos opciones: o solo selecciono a las mujeres (==) o excluyo a los hombres (!=).\nAhora bien, antes hay que hacer una precisión importante: en los datos sexo es una variable que está como dbl y lbl (número etiquetado), por lo que no es que en la base aparezcan \u0026ldquo;Mujeres\u0026rdquo; y \u0026ldquo;Hombres\u0026rdquo;, sino que 2 y 1.\nPor ello, con el siguiente código aparecerá un error en sus consolas.\nfilter(datos_proc, sexo == \u0026#34;Mujer\u0026#34;) Una función muy muy útil (sobre todo cuando trabajemos con regresiones) es as_factor() que permite conservar los niveles pero definiendo sus categorías de respuesta en base a la etiqueta que traen (el lbl)\ndatos_proc$sexo \u0026lt;- as_factor(datos_proc$sexo) ¡Ahora si funcionará!\nfilter(datos_proc, sexo == \u0026#34;Mujer\u0026#34;) ## # A tibble: 99,341 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 Mujer 3 [ISAPRE] 2 [No] 2 390833 1 [Sí] NA ## 2 4 Mujer 3 [ISAPRE] NA 2 390833 1 [Sí] NA ## 3 5 Mujer 4 [Ninguno (partic~ NA 3 947583 2 [No] NA ## 4 19 Mujer 4 [Ninguno (partic~ 2 [No] 3 947583 2 [No] NA ## 5 56 Mujer 5 [Otro sistema] 2 [No] 3 3004167 2 [No] NA ## 6 60 Mujer 1 [Sistema Público~ 2 [No] 2 610250 2 [No] NA ## 7 54 Mujer 1 [Sistema Público~ 1 [Sí] 4 1321481 1 [Sí] NA ## 8 31 Mujer 1 [Sistema Público~ 1 [Sí] 4 1110000 2 [No] NA ## 9 9 Mujer 1 [Sistema Público~ NA 4 1110000 2 [No] NA ## 10 77 Mujer 1 [Sistema Público~ 2 [No] 1 739833 2 [No] NA ## # ... with 99,331 more rows filter(datos_proc, sexo != \u0026#34;Hombre\u0026#34;) ## # A tibble: 99,341 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 Mujer 3 [ISAPRE] 2 [No] 2 390833 1 [Sí] NA ## 2 4 Mujer 3 [ISAPRE] NA 2 390833 1 [Sí] NA ## 3 5 Mujer 4 [Ninguno (partic~ NA 3 947583 2 [No] NA ## 4 19 Mujer 4 [Ninguno (partic~ 2 [No] 3 947583 2 [No] NA ## 5 56 Mujer 5 [Otro sistema] 2 [No] 3 3004167 2 [No] NA ## 6 60 Mujer 1 [Sistema Público~ 2 [No] 2 610250 2 [No] NA ## 7 54 Mujer 1 [Sistema Público~ 1 [Sí] 4 1321481 1 [Sí] NA ## 8 31 Mujer 1 [Sistema Público~ 1 [Sí] 4 1110000 2 [No] NA ## 9 9 Mujer 1 [Sistema Público~ NA 4 1110000 2 [No] NA ## 10 77 Mujer 1 [Sistema Público~ 2 [No] 1 739833 2 [No] NA ## # ... with 99,331 more rows Ojo. R es sensible a cómo está escrito el texto. Si pones el mismo código pero sin respetar mayúsuculas y minúsculas el código no funcionará\r\r¡Por último! ¿Cómo se seleccionan dos condiciones en carácter? Con el operador %in%\ndatos_proc$prev \u0026lt;- as_factor(datos_proc$prev) filter(datos_proc, prev %in% c(\u0026#34;Sistema Público FONASA\u0026#34;, \u0026#34;ISAPRE\u0026#34;)) ## # A tibble: 169,503 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 Mujer ISAPRE 2 [No] 2 390833 1 [Sí] NA ## 2 4 Mujer ISAPRE NA 2 390833 1 [Sí] NA ## 3 45 Hombre Sistema Público F~ 1 [Sí] 3 947583 2 [No] NA ## 4 77 Hombre Sistema Público F~ 2 [No] 2 610250 2 [No] NA ## 5 60 Mujer Sistema Público F~ 2 [No] 2 610250 2 [No] NA ## 6 11 Hombre Sistema Público F~ NA 4 1321481 1 [Sí] NA ## 7 54 Mujer Sistema Público F~ 1 [Sí] 4 1321481 1 [Sí] NA ## 8 57 Hombre Sistema Público F~ 1 [Sí] 4 1321481 1 [Sí] NA ## 9 55 Hombre Sistema Público F~ 1 [Sí] 4 1110000 2 [No] NA ## 10 31 Mujer Sistema Público F~ 1 [Sí] 4 1110000 2 [No] NA ## # ... with 169,493 more rows Antes de definir que observaciones vamos a conservar en una base procesada datos_proc ¡Creemos transformemos variables con mutate()!\n5.3 mutate() para transformación de variables La función de mutate() permite hacer operaciones para crear nuevas variables o transformar las ya existentes.\nmutate(datos, nueva_variable = cálculo o condición)\r\rmutate() en base a cálculo Calcularemos una nueva variable llamada nueva_variable que proviene de la suma de 2+3. También una variable ingreso_percapita que proviene de la división del ingreso total del hogar y el número de personas que residen en el hogar\nmutate(datos_proc, nueva_variable = 3+2) ## # A tibble: 185,437 x 9 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total nueva_variable ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 34 Mujer ISAP~ 2 [No] 2 3.91e5 1 [Sí] NA 5 ## 2 4 Mujer ISAP~ NA 2 3.91e5 1 [Sí] NA 5 ## 3 5 Mujer Ning~ NA 3 9.48e5 2 [No] NA 5 ## 4 45 Homb~ Sist~ 1 [Sí] 3 9.48e5 2 [No] NA 5 ## 5 19 Mujer Ning~ 2 [No] 3 9.48e5 2 [No] NA 5 ## 6 57 Homb~ Otro~ 1 [Sí] 3 3.00e6 2 [No] NA 5 ## 7 20 Homb~ Otro~ 2 [No] 3 3.00e6 2 [No] NA 5 ## 8 56 Mujer Otro~ 2 [No] 3 3.00e6 2 [No] NA 5 ## 9 77 Homb~ Sist~ 2 [No] 2 6.10e5 2 [No] NA 5 ## 10 60 Mujer Sist~ 2 [No] 2 6.10e5 2 [No] NA 5 ## # ... with 185,427 more rows mutate(datos_proc, nueva_variable = 3+2, ingreso_percapita = ytoth/tot_per) ## # A tibble: 185,437 x 10 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total nueva_variable ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 34 Mujer ISAP~ 2 [No] 2 3.91e5 1 [Sí] NA 5 ## 2 4 Mujer ISAP~ NA 2 3.91e5 1 [Sí] NA 5 ## 3 5 Mujer Ning~ NA 3 9.48e5 2 [No] NA 5 ## 4 45 Homb~ Sist~ 1 [Sí] 3 9.48e5 2 [No] NA 5 ## 5 19 Mujer Ning~ 2 [No] 3 9.48e5 2 [No] NA 5 ## 6 57 Homb~ Otro~ 1 [Sí] 3 3.00e6 2 [No] NA 5 ## 7 20 Homb~ Otro~ 2 [No] 3 3.00e6 2 [No] NA 5 ## 8 56 Mujer Otro~ 2 [No] 3 3.00e6 2 [No] NA 5 ## 9 77 Homb~ Sist~ 2 [No] 2 6.10e5 2 [No] NA 5 ## 10 60 Mujer Sist~ 2 [No] 2 6.10e5 2 [No] NA 5 ## # ... with 185,427 more rows, and 1 more variable: ingreso_percapita \u0026lt;dbl\u0026gt; ¿Qué pasa si queremos, luego de calcular nuestras nuevas variables, filtrar un ingreso per cápita menor o igual a $1.000.000\n¡Ahora entra en escena nuestro operador estrella %\u0026gt;%!\ndatos %\u0026gt;% mutate(., nueva_variable = calculo ) %\u0026gt;% filter(., nueva_variable \u0026lt;= valor)\r\rBásicamente, el %\u0026gt;% permite \u0026ldquo;ingresar\u0026rdquo; nuestra base de datos como argumento para cada función e ir operándola en proceso\ndatos_proc %\u0026gt;% mutate(ingreso_percapita = ytoth/tot_per) %\u0026gt;% filter(ingreso_percapita \u0026lt;= 1000000) ## # A tibble: 176,094 x 9 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 Mujer ISAPRE 2 [No] 2 390833 1 [Sí] NA ## 2 4 Mujer ISAPRE NA 2 390833 1 [Sí] NA ## 3 5 Mujer Ninguno (particul~ NA 3 947583 2 [No] NA ## 4 45 Hombre Sistema Público F~ 1 [Sí] 3 947583 2 [No] NA ## 5 19 Mujer Ninguno (particul~ 2 [No] 3 947583 2 [No] NA ## 6 77 Hombre Sistema Público F~ 2 [No] 2 610250 2 [No] NA ## 7 60 Mujer Sistema Público F~ 2 [No] 2 610250 2 [No] NA ## 8 11 Hombre Sistema Público F~ NA 4 1321481 1 [Sí] NA ## 9 54 Mujer Sistema Público F~ 1 [Sí] 4 1321481 1 [Sí] NA ## 10 18 Hombre Ninguno (particul~ 2 [No] 4 1321481 1 [Sí] NA ## # ... with 176,084 more rows, and 1 more variable: ingreso_percapita \u0026lt;dbl\u0026gt; recode() La función denominada recode puede reemplazar valores numéricos en base a su posición o su nombre, y valores de carácteres o factores sólo por su nombre.\nEn el siguiente ejemplo recodificamos las categorías de respuesta de Mujer a Femenino y de Hombre a Masculino\ndatos_proc %\u0026gt;% mutate(sexo = dplyr::recode(sexo, \u0026#34;Mujer\u0026#34; = \u0026#34;Femenino\u0026#34;, \u0026#34;Hombre\u0026#34; = \u0026#34;Masculino\u0026#34;)) ## # A tibble: 185,437 x 8 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 Femenino ISAPRE 2 [No] 2 3.91e5 1 [Sí] NA ## 2 4 Femenino ISAPRE NA 2 3.91e5 1 [Sí] NA ## 3 5 Femenino Ninguno (particu~ NA 3 9.48e5 2 [No] NA ## 4 45 Masculi~ Sistema Público ~ 1 [Sí] 3 9.48e5 2 [No] NA ## 5 19 Femenino Ninguno (particu~ 2 [No] 3 9.48e5 2 [No] NA ## 6 57 Masculi~ Otro sistema 1 [Sí] 3 3.00e6 2 [No] NA ## 7 20 Masculi~ Otro sistema 2 [No] 3 3.00e6 2 [No] NA ## 8 56 Femenino Otro sistema 2 [No] 3 3.00e6 2 [No] NA ## 9 77 Masculi~ Sistema Público ~ 2 [No] 2 6.10e5 2 [No] NA ## 10 60 Femenino Sistema Público ~ 2 [No] 2 6.10e5 2 [No] NA ## # ... with 185,427 more rows El problema de recode() que se utiliza dentro de dplyr es que si recodifico se pierde la etiqueta anterior. Esto es un problema a si por ejemplo, solo quiero recodificar casos perdidos.\nFrente a ello, con el tiempo nos hemos convencido de que la mejor solución hasta ahora es ocupar recode() del paquete car. Si recuerdan, dos funciones con el mismo nombre podrían producir conflictos, y por ello, especificaremos con car::recode() que la función recode() que ocupamos proviene de car\ndatos %$% car::recode(.$variable, c(\u0026lsquo;valor_orig1=nuevo_valor1;valor_org2=nuevo_valor2\u0026rsquo;))\nOjo: %$% es el primo hermano de %\u0026gt;% (básicamente funcionan igual, pero este es necesario para car)\n\rdatos_proc %$% car::recode(.$y26d_hog, c(\u0026#39;9=NA\u0026#39;)) %\u0026gt;% head(.) ## \u0026lt;labelled\u0026lt;double\u0026gt;[6]\u0026gt;: y26d_hog. Últimos 12 meses, ¿alguien recibió Ingreso Familiar de Emergencia? ## [1] 1 1 2 2 2 2 ## ## Labels: ## value label ## 1 Sí ## 2 No ## 9 No sabe Aquí una versión de si la recodificación es hacia carácteres (mismo ejemplo que con recode() de dplyr)\ndatos_proc %$% car::recode(.$sexo, c(\u0026#39;\u0026#34;Mujer\u0026#34;=\u0026#34;Femenino\u0026#34;;\u0026#34;Hombre\u0026#34;= \u0026#34;Masculino\u0026#34;\u0026#39;), as.factor = T) %\u0026gt;% head(.) ## [1] Femenino Femenino Femenino Masculino Femenino Masculino ## Levels: Femenino Masculino 5.3.2 if_else() para construir variables condicionales La función if_else() permite construir variables en base a condiciones lógicas. Su estructura es la siguiente\nif_else(condición,TRUE,FALSE) Donde dice TRUE es el valor que se obtiene si la condición es verdadera, mientras que FALSE es todo el resto de las opciones (o cuando es FALSA)\r\rCrearemos una variable que dummy que indica si el respondente es FONASA o no lo es.\ndatos_proc %\u0026gt;% mutate(fonasa = if_else(prev == \u0026#34;Sistema Público FONASA\u0026#34;, 1, 0)) También podemos ocupar esta función como validador, por ejemplo, rellenando con valores lógicos como FALSE cuando no hay valores en ytoth. Luego esos FALSE podrían ser contados en otros procesos estadísticos\ndatos_proc %\u0026gt;% mutate(validador_ingreso = if_else(is.na(ytoth), FALSE, TRUE)) ## # A tibble: 185,437 x 9 ## edad sexo prev ocupacion tot_per ytoth y26d_hog y26d_total ## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lb\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 34 Mujer ISAPRE 2 [No] 2 390833 1 [Sí] NA ## 2 4 Mujer ISAPRE NA 2 390833 1 [Sí] NA ## 3 5 Mujer Ninguno (particul~ NA 3 947583 2 [No] NA ## 4 45 Hombre Sistema Público F~ 1 [Sí] 3 947583 2 [No] NA ## 5 19 Mujer Ninguno (particul~ 2 [No] 3 947583 2 [No] NA ## 6 57 Hombre Otro sistema 1 [Sí] 3 3004167 2 [No] NA ## 7 20 Hombre Otro sistema 2 [No] 3 3004167 2 [No] NA ## 8 56 Mujer Otro sistema 2 [No] 3 3004167 2 [No] NA ## 9 77 Hombre Sistema Público F~ 2 [No] 2 610250 2 [No] NA ## 10 60 Mujer Sistema Público F~ 2 [No] 2 610250 2 [No] NA ## # ... with 185,427 more rows, and 1 more variable: validador_ingreso \u0026lt;lgl\u0026gt; 5.3.2 case_when() para construir variable en base a múltiples condiciones Una función que se utiliza frecuentemente para colapsar categorías o construir categorías en base a varias condiciones es case_when() por lo lógico y fácil que es de entender\ncase_when(variable == condicion ~ valor1, variable == condicion ~ valor2, TRUE ~ NA_real)\n Donde, TRUE indica \u0026ldquo;todo el resto\u0026rdquo;, y el NA dependerá de la clase del valor de recodificación  \rUn ejemplo claro es cuando queremos construir categorías de edad\ndatos_proc %\u0026gt;% mutate(edad_tramo = case_when(edad \u0026lt;=39 ~ \u0026#34;Joven\u0026#34;, edad \u0026gt; 39 \u0026amp; edad \u0026lt;=59 ~ \u0026#34;Adulto\u0026#34;, edad \u0026gt; 59 ~ \u0026#34;Adulto mayor\u0026#34;, TRUE ~ NA_character_)) %\u0026gt;% select(edad, edad_tramo) ## # A tibble: 185,437 x 2 ## edad edad_tramo ## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 34 Joven ## 2 4 Joven ## 3 5 Joven ## 4 45 Adulto ## 5 19 Joven ## 6 57 Adulto ## 7 20 Joven ## 8 56 Adulto ## 9 77 Adulto mayor ## 10 60 Adulto mayor ## # ... with 185,427 more rows Como se puede ver, no solamente indicamos tramos de la variable edad, sino que utilizamos operadores lógicos (\u0026amp;). Podríamos ocupar el que necesitemos, y sobre todo, también combinar variables (por ejemplo, crear una variable sexo-edad)\n6. Resumen con procesamiento de las variables Hasta ahora, solo hemos creado una base de datos que selecciona variables. Ahora nos resta incorporar en un nuevo objeto los cambios que nos parezcan relevantes para la base de datos procesada que utilizaremos en nuestros análisis.\nComo ya conocemos operadores que permiten concatenar procesos ( %\u0026gt;% y %$%) este procedimiento será mucho más fácil.\ndatos_proc %\u0026gt;% filter(edad \u0026gt;= 15 \u0026amp; tot_per \u0026lt;7) %\u0026gt;% mutate(ingreso_percapita = ytoth/tot_per, edad_tramo = case_when(edad \u0026lt;=39 ~ \u0026#34;Joven\u0026#34;, edad \u0026gt; 39 \u0026amp; edad \u0026lt;=59 ~ \u0026#34;Adulto\u0026#34;, edad \u0026gt; 59 ~ \u0026#34;Adulto mayor\u0026#34;, TRUE ~ NA_character_), fonasa = if_else(prev == \u0026#34;Sistema Público FONASA\u0026#34;, 1, 0), ocupacion = as_factor(ocupacion)) %\u0026gt;% select(sexo, edad_tramo, ocupacion, ingreso_percapita, ife = y26d_hog) ## # A tibble: 144,418 x 5 ## sexo edad_tramo ocupacion ingreso_percapita ife ## \u0026lt;fct\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; ## 1 Mujer Joven No 195416. 1 [Sí] ## 2 Hombre Adulto Sí 315861 2 [No] ## 3 Mujer Joven No 315861 2 [No] ## 4 Hombre Adulto Sí 1001389 2 [No] ## 5 Hombre Joven No 1001389 2 [No] ## 6 Mujer Adulto No 1001389 2 [No] ## 7 Hombre Adulto mayor No 305125 2 [No] ## 8 Mujer Adulto mayor No 305125 2 [No] ## 9 Mujer Adulto Sí 330370. 1 [Sí] ## 10 Hombre Joven No 330370. 1 [Sí] ## # ... with 144,408 more rows ¡Ahora que estamos seguras/os sobre-escribimos la base!\ndatos_proc \u0026lt;- datos_proc %\u0026gt;% filter(edad \u0026gt;= 15 \u0026amp; tot_per \u0026lt;7) %\u0026gt;% mutate(ingreso_percapita = ytoth/tot_per, edad_tramo = case_when(edad \u0026lt;=39 ~ \u0026#34;Joven\u0026#34;, edad \u0026gt; 39 \u0026amp; edad \u0026lt;=59 ~ \u0026#34;Adulto\u0026#34;, edad \u0026gt; 59 ~ \u0026#34;Adulto mayor\u0026#34;, TRUE ~ NA_character_), fonasa = if_else(prev == \u0026#34;Sistema Público FONASA\u0026#34;, 1, 0), ocupacion = as_factor(ocupacion)) %\u0026gt;% select(sexo, edad_tramo, ocupacion, ingreso_percapita, ife = y26d_hog) Podemos visualizar la base resultante a partir de view_df() de sjPlot\nsjPlot::view_df(datos_proc) Data frame: datos_proc\r\rIDNameLabelValuesValue Labels\r\r\r1\rsexo\rSexo\r\rHombre\nMujer\r\r\r2\redad_tramo\r\r\r\u0026lt;output omitted\u0026gt;\r\r\r3\rocupacion\ro1. La semana pasada, Â¿trabajÃ³ al menos una hora?\r\rSÃ­\nNo\r\r\r4\ringreso_percapita\rIngreso total del hogar\rrange: 0.0-225200000.0\r\r\r5\rife\ry26d_hog. Ãšltimos 12 meses, Â¿alguien recibiÃ³\nIngreso Familiar de Emergencia?\r1\n2\n9\rSÃ­\nNo\nNo sabe\r\r\r7. Guardar base procesada Para guardar la base de datos procesada, debes dirigir la ruta hacia tu Rproject\nsaveRDS(datos_proc, file = \u0026#34;../nombre_project/output/datos_proc.rds\u0026#34;) 8. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso. En tu correo electrónico está disponible el código mediante al cuál debes acceder para actualizar tu estado de avance del curso.\n  ¡Atención! Fíjate bien que == y = son distintos. En R == es indicar \u0026ldquo;igual a\u0026rdquo;, mientras que = es asignar (sinónimo de \u0026lt;-) \u0026#x21a9;\u0026#xfe0e;\n Este operador es muy utilizado, sirve para indicar que algo está dentro de una cadena de valores. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1629417600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629417600,"objectID":"63ac3bb2c13d1c040f2504a8ef534581","permalink":"/example/03-practico/","publishdate":"2021-08-20T00:00:00Z","relpermalink":"/example/03-practico/","section":"example","summary":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el procesamiento de los datos a través de la transformación de las variables a utilizar. Para ello revisaremos procedimientos básicos para el manejo de datos con Rstudio.","tags":null,"title":"Transformar y seleccionar variables","type":"docs"},{"authors":null,"categories":null,"content":"Objetivo de la práctica Introducir en aspectos relativos a R, RStudio e instalación de paquetes. El práctico considera los contenidos profundizados en el bloque 1, que serán repasados en tres partes: 1. RStudio, 2. Rprojects, 3. Script (.R) y 4. Instalar paquetes\nParte 1: Empenzando a asimilarnos con RStudio RStudio es un software que permite integrar diferentes herramientas asociadas a R (IDE), de modo de hacer más fácil tu interacción con el. Este programa está orientado en dar una interfaz intuitiva para el análisis estadístico 1.\nPor ello podrás encontrar los siguientes elementos en esta\n  Consola: donde puedes escribir código (input) y donde recibirás resultados (output). Lo que se escriba en esa consola, independiente de su está bien o mal quedará registrado en el caché (.RHistory). Otro lugar donde podrás ver resultados es en Plots y Viewer.\n  Script: es un documento de extensión .R donde se alojan los códigos que permiten ejecutar los análisis que buscas realizar. Además de contener código ejecutable, los códigos que se guarden son los que realmente quieres guardar (y no los mil intentos que hacemos previamente).\n  Enviroment: es una forma de interactuar con el espacio de trabajo dentro de R (Workspace) pues podremos visualizar los diferentes objetos que vamos creando para ser manipulados, junto con los paquetes que tenemos cargados.\n  Files: es una forma de visualizar el espacio de trabajo en el que nos \u0026ldquo;posicionamos\u0026rdquo; fuera de R (Working directory). Por ejemplo, con los archivos que cargamos para trabajar en nuestro RStudio (como los datos). Si estos no están en el espacio de trabajo en que estamos, probablemente estaremos en un problema (¡ya les mostraremos la solución!)\n  Help: un amigo/a fiel. Nos dará ayuda e información útil del programa y los paquetes. Otros lugares donde encontrar ayuda es en Tutorial y en Packages. El primero ofrece tutoriales, como dice su nombre, y el segundo no solo nos indica qué paquetes tenemos instalados y/o cargados, sino que también dónde encontrar más documentación sobre estos (en el ícono del planeta).\n  Parte 2: RStudio Projects Uno de los aspectos más potentes y útiles de RStudio es su capacidad de manejar proyectos.\nLa primera vez que tu abres R este está \u0026ldquo;posicionado\u0026rdquo; en alguna carpeta de tu computadora (¿cuál? una buena pregunta\u0026hellip;) y todo lo que se haga se hará relativo a esa carpeta. El concepto \u0026ldquo;técnico\u0026rdquo; de eso es lo que ya les había comentado: el Working Directory.\n¿Cómo saber dónde estoy?\n Puedes mirar arriba de la consola y aparecerá tu versión de R y la ruta .~ 2  Escribiendo en tu consola getwd() (obteniendo mi working directory) y ver el resultado de esta  En la pestaña Files podrán ver qué archivos están en el ambiente del Working directory\nSea cual sea la forma de ver el directorio de trabajo notaremos desde ya que es algo \u0026ldquo;críptico\u0026rdquo;. Muchas veces tendremos que transformarnos en detectives de rutas del directorio, sobre todo cuando tenemos millones de carpetas y no tenemos una organización clara de dónde tenemos nuestros códigos y datos.\nEn ese ejercicio intentaremos cambiar nuestro directorio de trabajo (Set Working Directory) para poder alojar nuestro directorio donde están nuestros archivos necesarios para el análisis. Eso lo tendríamos que hacer cada vez que abrimos el programa (en R terminal se hace manualmente y en RStudio se puede guardar ese código en el script).\nPara ello debemos utilizar setwd() y dentro de esta indicar la ruta y dar vuelta las barras (\\) por (/).\r\rComo mencionámos, parte importante de los scripts tienen al inicio un directorio del estilo setwd(\u0026quot;C:\\\\Users\\\\bill\\\\Desktop\\\\Important research project\u0026quot;) lo que es una pésima idea (para más explicación véase aquí)\n Si corres ese directorio a algún otro lugar o corres el script en otro computador o compartes con otra persona la ruta estará mala y nada funcionará.  La mejor manera de manejar los directorios de trabajo (Working Directory) con RStudio es utilizar los RProjects de RStudio.\n¿Qué es un RProject?\nEstos son archivos especiales que RStudio crea y que terminan en una extensión .Rproj.Cuando abra uno de estos archivos especiales, se abrirá una nueva sesión de RStudio y se apuntará al directorio correcto automáticamente. Si mueves la carpeta más tarde o la abres en un computador diferente, funcionará sin problemas y no lloraremos por el problema del directorio de trabajo\nEn general, puedes crear un nuevo proyecto yendo a File \u0026gt; New Project \u0026gt; New Directory \u0026gt; Empty Project/Exting directory, que creará una nueva carpeta en tu ordenador que está vacía excepto por un único archivo .Rproj. Haga doble clic en ese archivo para abrir una sesión de RStudio que apunte a la carpeta correcta.\nComo vimos en la sesión, los RProject potenciarán nuestra posibilidad de colaborar con otros/as usuarias/os de R. No olvides que además, nos permitirá trabajar con rutas relativas de manera interna, dando la posibilidad de mantener ordenada la información de nuestros proyectos.\n Descargar Rproject del bloque 1 01-bloque.zip  Descargarás un archivo .zip, para ver como descomprimir un archivom en caso de que no sepas cómo revisa esta breve guía\r\rParte 3: Partes de un script (.R) # Los gatos ( # ) son comentarios print(\u0026#34;¡Hola estudiantes!\u0026#34;) ## [1] \u0026#34;¡Hola estudiantes!\u0026#34; # Lo que está antes de los paréntesis son las funciones # Lo que está dentro de los paréntesis son argumentos Algunos shortcuts importantes Los siguientes atajos del teclado serán sus mejores amigos/as\n  Ejecutar líneas de código del script: CTRL Enter\n  Guardar el script (archivo . R): CTRL S\n  Nuevo script (archivo . R): CTRL N\n  Título automático dentro del script: CTRL Shift R\n  ¿Qué pasa si me aparece el script con símbolos raros? En la barra del navegador de tu RStudio debes buscar:\nFile → Reopen with Encoding → seleccionar UTF-8\n\rElementos del lenguaje de R Calculando una media\n(25 + 24 + 22)/3 ## [1] 23.66667 media \u0026lt;- (25 + 24 + 22)/3 media ## [1] 23.66667 Carácteres (character)\nc(\u0026#34;Valentina\u0026#34;, \u0026#34;Nicolás\u0026#34;, \u0026#34;Dafne\u0026#34;) ## [1] \u0026#34;Valentina\u0026#34; \u0026#34;Nicolás\u0026#34; \u0026#34;Dafne\u0026#34; equipo \u0026lt;- c(\u0026#34;Valentina\u0026#34;, \u0026#34;Nicolás\u0026#34;, \u0026#34;Dafne\u0026#34;) Números (numeric)\nc(25, 22, 24) ## [1] 25 22 24 edad \u0026lt;- c(25,22,24) mean(edad) ## [1] 23.66667 Lonitudes (integer)\n1:3 ## [1] 1 2 3 orden \u0026lt;- 1:3 Tabulados1 (data.frame)\n?data.frame() datos \u0026lt;- data.frame(equipo, edad, orden) 1 O base de datos (pese a que realmente una tabla no es una base de datos)\nY ahora ¿cómo calculamos la media?\nmean(datos$edad) ## [1] 23.66667 Parte 4: Instalar paquetes Muchas veces requeriremos de extender los potenciales de R base. Para implementar estas extensiones será necesario realizar un proceso de carga de paquetes (también llamadas librarías) que contienen funciones muy útiles. Este proceso de compone de dos partes esenciales (1) Instalar paquetes (ìnstall.packages()) y (2) Llamar paquetes (library()). Veamos su paso a paso\n0. Información de la sesión\nNo es un paso que debas hacer siempre. Pero lo realizaremos por esta vez para que véas que con este comando podremos obtener información útil sobre el ambiente en el que estas desarrollando tus análisis. Por la función sessionInfo() en tu consola y ve que nos arroja. Probablemente la ocuparás cuando tengas problemas con un código y requieras de ayuda.\nsessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19043) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=Spanish_Chile.1252 LC_CTYPE=Spanish_Chile.1252 ## [3] LC_MONETARY=Spanish_Chile.1252 LC_NUMERIC=C ## [5] LC_TIME=Spanish_Chile.1252 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.21 digest_0.6.27 R6_2.5.0 jsonlite_1.7.2 ## [5] magrittr_2.0.1 evaluate_0.14 highr_0.8 blogdown_1.3 ## [9] stringi_1.5.3 rlang_0.4.10 jquerylib_0.1.3 bslib_0.2.4 ## [13] rmarkdown_2.7 tools_4.0.4 stringr_1.4.0 xfun_0.22 ## [17] yaml_2.2.1 compiler_4.0.4 htmltools_0.5.1.1 knitr_1.31 ## [21] sass_0.3.1 1. Instalar paquetes\nPara instalar paquetes utilizaremos install.packages(). Dentro del () tenemos que rellenar cuál paquete queremos instalar. Pero \u0026hellip; una pregunta lógica es ¿cómo sé eso? ¿qué argumentos o \u0026ldquo;cosas\u0026rdquo; se ponen dentro de una función?\nPara ello hay dos enfoques que puedes seguir\n  poner en tu consola ?nombre_de_la_funcion() y notarás que en Help aparecerá automáticamente información de este. Esta información está contenida en CRAN\n  Buscar información del paquete en https://www.rdocumentation.org/\n  install.packages(\u0026#34;tidyverse\u0026#34;) # Instalar remove.packages(\u0026#34;tidyverse\u0026#34;) # Remover También funciona la noción de una cadena de paquetes concatenados por c()\ninstall.packages(c(\u0026#34;tidyverse\u0026#34;, \u0026#34;sjPlot\u0026#34;, \u0026#34;sjmisc\u0026#34;)) # Primera vez 2. Llamar paquetes\nEste proceso lo haremos con la función library(). Cuando la utilicemos nos dirá algunas informaciones importantes: (1) su versión, (2) los paquetes que trae si es una colección de estos (attaching packages) y (3) los conflictos con otros paquetes que ya tienes cargados.\nlibrary(tidyverse) ## Warning: package \u0026#39;tidyverse\u0026#39; was built under R version 4.0.5 ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.3 v purrr 0.3.4 ## v tibble 3.1.0 v dplyr 1.0.6 ## v tidyr 1.1.3 v stringr 1.4.0 ## v readr 1.4.0 v forcats 0.5.1 ## Warning: package \u0026#39;readr\u0026#39; was built under R version 4.0.5 ## Warning: package \u0026#39;dplyr\u0026#39; was built under R version 4.0.5 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() Ahora, intentemos ocupar la función frq() del paquete sjmisc() para ver la distribución de equipo dentro de la base datos\nfrq(datos$equipo) Sí, no es un error del sitio web. Aparecerá el siguiente error:\n# \u0026gt; Error in frq(datos$equipo) : could not find function \u0026#34;frq\u0026#34; Tal como dice, no se puede encontrar la función frq(). Por eso, no deben olvidar llamar a los paquetes, que como vimos en la sesión, es como \u0026ldquo;encender\u0026rdquo; el interruptor\nlibrary(sjmisc) También existe la opción de indicar desde qué paquete proviene la función, y eso automáticamente los llama pero **solo en el momento en que se ocupa la función (paquete::funcion())\nsjmisc::frq(datos$equipo) ## ## x \u0026lt;character\u0026gt; ## # total N=3 valid N=3 mean=2.00 sd=1.00 ## ## Value | N | Raw % | Valid % | Cum. % ## ---------------------------------------- ## Dafne | 1 | 33.33 | 33.33 | 33.33 ## Nicolás | 1 | 33.33 | 33.33 | 66.67 ## Valentina | 1 | 33.33 | 33.33 | 100.00 ## \u0026lt;NA\u0026gt; | 0 | 0.00 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; Esto será muy útil cuando existan paquetes que tengan funciones que están en conflicto.\nUna forma fácil de cargar paquetes: pacman pacman es un paquete que literalmente se comió procesos de R base y las simplificó en funciones únicas y más intuitivas.\nPara comentar utilizándolo hay que hacer instalación tradicional\ninstall.packages(\u0026#34;pacman\u0026#34;) library(pacman) Luego, la función que utilizaremos con frecuencia será p_load() que es una función que permite cargar librerías e instalarlas en caso de que estas no hayan sido descargadas. Básicamente p_load() resume las funciones library() e install.packages(), y optimiza esta relación entre ambas pues solo las aplica cuando son necesarias (if `requiere()``), es decir, ¡no te reinicia R si ya está instalada la librería!\npacman::p_load(tidyverse, sjPlot, sjmisc) Por último, muchas veces ocurrirá que hay paquetes que dependen de otros, pues dada su complejidad, requieren de otras funcionalidades que ya han sido desarrolladas en otras extensiones. Esto, las dependencias no será un tema del cuál preocuparte pues pacman::p_load() lo hace solito.\nReporte de progreso ¡Recuerda rellenar tu reporte de progreso. En tu correo electrónico está disponible el código mediante al cuál debes acceder para actualizar tu estado de avance del curso.\nRecomendaciones El contenido de estos primers es libre y gratis, y provienen del libro de Hadley Wickham y Garrett Grolemund R for Data Science.\n RProjects  Programming Basics Working with Tibbles      Aquí luego aparecerá la parte del video que tiene que ver con RStudio \u0026#x21a9;\u0026#xfe0e;\n El signo ~ (tilde) indica en Windows C:\\Users\\your_user_name\\ y en macOS /Users/your_user_name/. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1628812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628812800,"objectID":"1c54211c51c2690aaec09991c5ab4895","permalink":"/example/01-practico/","publishdate":"2021-08-13T00:00:00Z","relpermalink":"/example/01-practico/","section":"example","summary":"Objetivo de la práctica Introducir en aspectos relativos a R, RStudio e instalación de paquetes. El práctico considera los contenidos profundizados en el bloque 1, que serán repasados en tres partes: 1.","tags":null,"title":"Bienvenido/a a R, RStudio e instalar paquetes","type":"docs"},{"authors":null,"categories":null,"content":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nImportar\r\rValidar\r\rSeleccionar\r\rExportar\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver los comandos específicos para navegar en ellas.\r\rMaterial de la clase    02-bloque.zip\n   Práctico\n   Descomprimir archivos\n  Recomendaciones    Hadley Wickham, “Data Science: How is it Different To Statistics?”\n   Tutoriales, “Learn-R”\n Instalación de softwares     Contestar reporte de registro\n  ","date":1628812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628812800,"objectID":"41e89a34ca2fdd432a89cf4ae93cfcc3","permalink":"/content/02-content/","publishdate":"2021-08-13T00:00:00Z","relpermalink":"/content/02-content/","section":"content","summary":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nImportar\r\rValidar\r\rSeleccionar\r\rExportar\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ?","tags":null,"title":"Importar, explorar y limpiar datos","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo del práctico Este práctico tiene por objeto introducir a las y los estudiantes del curso en herramientas que les permitan a) importar bases de datos en diversos formatos; b)seleccionar variables de las bases de datos importadas; c) limpiar los datos, eliminando las filas con casos perdidos; y d) exportar bases de datos procesadas. Para ello, se trabajará con los paquetes haven (que forma parte, a su vez, del mundo de paquetes tidyverse), y dplyr, para poder importar y exportar los datos, y manipular estos datos, respectivamente.\n1. Recursos de la práctica Para el correcto trabajo de estos materiales, deben descargar los datos de la Encuesta de Caracterización Socioeconómica (CASEN) en su versión 2020. Para ello, deben dirigirse al siguiente enlace, descargar el archivo en .zip y luego input/data de su repositorio. Para descomprimir los archivos revisen. Cuando lo hayan logrado verán la base en formato SPPS Casen en Pandemia 2020 SPSS.sav o en STATA Casen en Pandemia 2020 SPSS.dta\nRecuerden siempre consultar el manual/libro de códigos antes de trabajar una base de datos.\n2. Librerias a utilizar En este práctico utilizaremos cuatro paquetes\n  pacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\n  sjmisc: explorar datos\n  tidyverse: colección de paquetes, del cuál utilizaremos dplyr y haven\n  haven: cargar y exportar bases de datos en formatos .sav y .dta\n  readxl y writexl: para cargar y exportar bases de datos en formato .xlsx y .xls\n  dplyr: nos permite seleccionar variables de un set de datos\n  Pasos del procesamiento 1. Cargar librerías Dado que ya cargamos pacman en el práctico anterior, no lo debemos volver a instalar. Ahora bien, si cargaremos los nuevos paquetes. Les recordamos que cuando luego de un paquete ponemos :: esto se refiere a que se \u0026ldquo;fuerza\u0026rdquo; que esa función provenga de ese paquete\npacman::p_load(sjmisc, sjPlot, tidyverse, haven, readxl, writexl) 2. Importar datos Para poder realizar análisis estadístico de cualquier tipo, el primer paso - sin considerar, por supuesto, la formulación de un problema de investigación, y la búsqueda de datos que permitan resolverlo - es importar una base de datos. Por razones obvias, si no hemos cargados los datos en el entorno, no seremos capaces de realizar ningún otro procedimiento, ni de preparación de los datos - por ejemplo, seleccionar variables, recodificarlas, construir variables sumativas, entre otros -, ni de análisis de estos - ya sean descriptivos, relacionales, explicativos, y así.\nUna de las bondades de R es que es posible importar fácilmente datos que se encuentren en cualquier formato: ya sea .csv, .dta, .sav, .xlsx y, por supuesto, .RData. Para poder hacerlo, sin embargo, lo primero es instalar y cargar las librerías que contienen las funciones necesarias para la importación de distintos tipos de archivos.\n2.1. Cargar set de datos Una vez cargado el paquete haven, procedemos a importar los datos anteriormente mencionados. Para ello, en nuestro script, dejamos indicado que a partir de la lectura de los datos con read_sav(), crearemos un objeto llamado datos. Si este procedimiento se logra, esto aparecerá en el Enviroment.\nAntes ¿dónde están nuestros datos? Por lo general, nuestros datos los dejaremos en la carpeta input/data. En el siguiente enlace podrán descargar el archivo .zip que contiene la base de CASEN. Si aún no sabes como descomprimir datos, por favor revisa aquí.\nLuego de que hayas descargado y descomprimido los datos asegurate de dejar el archivo .sav y .dta en la carpeta de tu proyecto input/data. Los datos se llamarán en formato SPPS Casen en Pandemia 2020 SPSS.sav o en STATA Casen en Pandemia 2020 SPSS.dta.\nPara importar los datos en R debemos tener en consideración tres cosas:\n  Cómo se llaman los datos (en nuestro caso Casen en Pandemia 2020 SPSS)\n  El formato de nuestros datos (en nuestro caso .sav)\n  El lugar de donde están alojados nuestros datos.\n  \rEl paquete haven tiene una serie de funciones para cargar datos llamadas read_* (el asterisco indica el formato). Para oculparlo solo debes tener en claro los puntos anteriores\n`read_*(\u0026ldquo;ruta_hacia_archivo/nombre_archivo.*\u0026quot;``. En nuestro caso:\ndatos \u0026lt;- read_sav(\u0026#34;Casen en Pandemia 2020 SPSS.sav\u0026#34;) # No funciona datos \u0026lt;- read_sav(\u0026#34;input/data/casen en pandemia 2020 SPSS.sav\u0026#34;) # No funciona datos \u0026lt;- read_sav(\u0026#34;input/data/Casen en Pandemia 2020 SPSS.sav\u0026#34;) Los dos primeros comandos no funcionan porque\n  La ruta no está bien definida\n  El nombre de la base no es exacto\n  ¡Dos errores muy frecuentes cuando uno se inicia! Ahora, ¿cómo se si está bien mi base? Primero, notarás que en tu Enviroment se ha creado un objeto. En nuestro caso objeto posee650 variables (columnas), pero conserva las filas 185.437 (u observaciones)\n¡Ahora es tu turno! Intenta hacer este procedimiento con los datos en .dta. También puedes encontrar este archivo en el enlace.\n2.1.1 Cargar set de datos en otros formatos. Ahora bien, no siempre este procedimiento será tan fácil sobre todo pues no siempre vendrán en formatos \u0026ldquo;limpios\u0026rdquo;. La gran forma de lidiar con eso es con la manipulación de datos (algo que nos tomará tiempo en este curso), pero de todas formas es de gran ayuda utilizar de manera correcta la importación de datos. Nos puede solucionar varios problemas de codificación y lectura.\nPara poder abordar esto de la mejor manera es necesario utilizar funciones ad hoc al formato de nuestros datos. Como se mencionó anteriormente, con R es muy flexible en esto. En los siguientes pasos les mostraremos como cargar en otros formatos y reconociendo algunos de los problemas comunes con los cuáles te encontrarás (de seguro\u0026hellip;)\na) .dta Este es el formato específico de base de datos para STATA. Por ello, utilizaremos la función read_dta() (también está como read_stata()), incluida en el paquete haven.\nb) .RData y .rds ¿Y R tiene formato de datos? ¡Sí! Como son propios del programa no es necesario cargar paquetes pues sus funciones provienen del paquete base. La diferencia básica entre .RData y .rds es que .rds puede contener solo un objeto del Enviroment de R, mientras que .RData puede contener múltiples objetos que han sido guardados en .rds.\nLeer un objeto proveniente de un archivo\nreadRDS(file = \u0026ldquo;datos.rds\u0026rdquo;)\nLeer múltiples objetos a un archivo load(file = \u0026ldquo;datos.RData\u0026rdquo;)\n\rAdemás de nunca olvidar la ruta, no debes olvidar una diferencia de codificación entre ambas funciones: con load() los objetos se cargan automáticamente en el ambiente, mientras que en readRDS() no. Solamente \u0026ldquo;llama\u0026rdquo; a los archivos, pero no los deja como un objeto dentro del Enviroment.\nload(file = \u0026#34;input/data/CASEN.RData\u0026#34;) readRDS(file = \u0026#34;input/data/CASEN.rds\u0026#34;) ## # A tibble: 100 x 5 ## id region sexo pobreza ocupacion ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 502 16 [Región de Ñuble] 2 [Mujer] 3 [No pobre~ \u0026lt;NA\u0026gt; ## 2 184 6 [Región del Libertador~ 2 [Mujer] 3 [No pobre~ \u0026lt;NA\u0026gt; ## 3 308 8 [Región del Biobío] 2 [Mujer] 3 [No pobre~ \u0026lt;NA\u0026gt; ## 4 531 6 [Región del Libertador~ 1 [Hombr~ 3 [No pobre~ COSECHA DE GUINDAS ## 5 115 3 [Región de Atacama] 2 [Mujer] 3 [No pobre~ \u0026lt;NA\u0026gt; ## 6 261 5 [Región de Valparaíso] 2 [Mujer] 3 [No pobre~ \u0026lt;NA\u0026gt; ## 7 171 3 [Región de Atacama] 1 [Hombr~ 3 [No pobre~ ATENCIÓN PARADERO CO~ ## 8 333 7 [Región del Maule] 1 [Hombr~ 1 [Pobres e~ RECOLECTOR DE HORTAL~ ## 9 69 14 [Región de Los Ríos] 1 [Hombr~ 3 [No pobre~ EMPRESARIO DISTRIBUC~ ## 10 440 4 [Región de Coquimbo] 1 [Hombr~ 2 [Pobres n~ \u0026lt;NA\u0026gt; ## # ... with 90 more rows datos \u0026lt;- readRDS(file = \u0026#34;input/data/CASEN.rds\u0026#34;) ¿Solo contiene datos? ¡No! Además de que puede contener múltiples datos, puede guardar otros objetos que se creen en su proceso estadístico. Por ejemplo, modelos ¡Lo veremos más adelante!\nc) .csv Los archivos en .csv o .txt son de frecuente uso dado que son más livianos que un archivo en .dta o .sav por el meta-data que contienen (información adicional, además de columnas-filas). El paquete utils de R base tiene una función de muy buena calidad llamada read.table (read.csv() para archivos en .csv y read.delim() para archivos en .txt)\nSu estructura es muy simple read.*(file = \u0026quot;datos.*\u0026quot;). Ahora bien tiene una serie de argumentos que permiten leer de mejor manera los archivos y de seguro los ocuparás:\n  [sep]: indica con qué están separadas las columnas (; , -)\n  [dec]: indica como están separados los decimales (. ,)\n  [na-strings]: indica como están codificados los NA (¡podría ser más de una forma!)\n  [encoding]:puede ser UTF-8 o Latin-1\n  [skip]: indica el número de filas que hay que saltarse (no siempre los csv y excel parten en la primera fila). El argumento nrow indica el número de filas máximas a leer\n  [stringsAsFactors]: si se indica verdadero (TRUE) los carácteres serán transformados en factores, lo cuál será muy útil en caso de necesitar hacer análisis.\n  datos \u0026lt;- read.csv(\u0026#34;input/data/CASEN.csv\u0026#34;, sep=\u0026#34;,\u0026#34;, encoding = \u0026#34;UTF-8\u0026#34;, stringsAsFactors = F) head(datos) Muchos problemas, ¡vamos solucionado!\ndatos \u0026lt;- read.csv(\u0026#34;input/data/CASEN.csv\u0026#34;, sep=\u0026#34;;\u0026#34;, encoding = \u0026#34;Latin-1\u0026#34;, stringsAsFactors = F, na.strings = c(\u0026#34;No sabe\u0026#34;, NA)) d) .xlsx A partir del paquete readxl de tidyverse podremos obtener datos que provienen de Excel (tanto en formato .xls como .xlsx). Ocuparemos la función read_excel(), la cual tiene similares argumentos a read.csv()\nread_excel(\u0026quot;datos.xlsx\u0026quot;, sheet = \u0026quot;Hoja 1\u0026quot;, range = \u0026quot;A1:C40\u0026quot;) read_excel(\u0026quot;datos.xlsx\u0026quot;, sheet = 2, skip = 4, na = \u0026quot;No sabe\u0026quot;)\r\rdatos \u0026lt;- readxl::read_excel(path = \u0026#34;input/data/CASEN.xlsx\u0026#34;) ¡Hemos sido engañados/as! ¿Cómo solucionar?\ndatos \u0026lt;- readxl::read_excel(path = \u0026#34;input/data/CASEN.xlsx\u0026#34;, sheet = \u0026#34;Hoja1\u0026#34;, skip = 1) datos \u0026lt;- readxl::read_excel(path = \u0026#34;input/data/CASEN.xlsx\u0026#34;, sheet = \u0026#34;Hoja1\u0026#34;, skip = 1, na = \u0026#34;NA\u0026#34;) Para seguir con este ejercicio volvamos a utilizar la base original en .dta\ndatos \u0026lt;- read_dta(\u0026#34;input/data/Casen en Pandemia 2020 SPSS.dta\u0026#34;) 3. Explorar datos Lo más probable es que, una vez importados los datos a utilizar, no trabajemos con el total de variables incluidas en estos (que, en este caso, suman un total de 650 columnas). Es por ello, que debemos seleccionar las variables de interés para resolver nuestro problema de investigación (sea el que sea).\nAntes de seleccionar las variables debemos explorar nuestros datos, si no ¿cómo saber qué seleccionar y qué no? En R base las funciones clásicas para explorar datos son\nView(datos) # Ver datos names(datos) # Nombre de columnas dim(datos) # Dimensiones str(datos) # Estructura de los datos (las clases y categorias de repuesta) A pesar de que son fáciles de aprender, no tienen una visualización muy amena. Un excelente paquete para explorar datos es sjmisc quien tiene tres funciones claves:\n  [View_df()]: que en el visor \u0026ldquo;Viewer\u0026rdquo; les mostrará una tabla que tiene el nombre de variable, etiqueta y categorías de respuesta\n  [find_var()]: que permite indagar en variables que estamos buscando según sus temáticas\n  [frq()]: nos otorga la distribución univariada de variables categóricas que estamos explorando\n  [descr()]: nos otorga estadísticos de tendencia central para la variable numérica seleccionada.\n  Ver datos en el visor\nsjPlot::view_df(datos) Buscar variables sobre temáticas relacionadas a \u0026ldquo;vivienda\u0026rdquo; (no olvides dejarla entre comillas)\nfind_var(datos, \u0026#34;pobreza\u0026#34;) ## col.nr var.name ## 1 584 pobreza ## 2 586 pobreza_sinte ## 3 579 lp ## var.label ## 1 Situación de pobreza por ingresos ## 2 Situación de pobreza por ingresos sin transferencia Covid ## 3 Línea de pobreza find_var(datos, \u0026#34;salario\u0026#34;) ## col.nr var.name ## 1 108 y1 ## 2 375 y0101 ## 3 465 y0101h ## 4 557 y0101c ## 5 563 y0101ch ## var.label ## 1 y1. Mes pasado, monto Sueldo o salario líquido en su trabajo principal ## 2 Asalariados principal - Sueldos y salarios monetario ## 3 Asalariados principal - Sueldos y salarios monetario ## 4 Asalariados principal - Sueldos y salarios monetario corregido ## 5 Asalariados principal - Sueldos y salarios monetario corregido Explorar distirbución de las variables\nfrq(datos$pobreza) ## ## Situación de pobreza por ingresos (x) \u0026lt;numeric\u0026gt; ## # total N=185437 valid N=185339 mean=2.84 sd=0.48 ## ## Value | Label | N | Raw % | Valid % | Cum. % ## -------------------------------------------------------------- ## 1 | Pobres extremos | 8439 | 4.55 | 4.55 | 4.55 ## 2 | Pobres no extremos | 12891 | 6.95 | 6.96 | 11.51 ## 3 | No pobres | 164009 | 88.44 | 88.49 | 100.00 ## \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; | 98 | 0.05 | \u0026lt;NA\u0026gt; | \u0026lt;NA\u0026gt; frq(datos$y1) #¡Qué feo! ## [[1]] ## val label frq raw.prc valid.prc cum.prc ## 1 1200 \u0026lt;none\u0026gt; 1 0.00 0.00 0.00 ## 2 1800 \u0026lt;none\u0026gt; 1 0.00 0.00 0.00 ## 3 2000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.01 ## 4 2222 \u0026lt;none\u0026gt; 1 0.00 0.00 0.01 ## 5 6000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.01 ## 6 7000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.02 ## 7 8073 \u0026lt;none\u0026gt; 1 0.00 0.00 0.02 ## 8 10000 \u0026lt;none\u0026gt; 6 0.00 0.01 0.03 ## 9 12000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.04 ## 10 14000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.04 ## 11 15000 \u0026lt;none\u0026gt; 11 0.01 0.03 0.07 ## 12 16000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.07 ## 13 17000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.08 ## 14 18000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.08 ## 15 20000 \u0026lt;none\u0026gt; 22 0.01 0.05 0.14 ## 16 21800 \u0026lt;none\u0026gt; 1 0.00 0.00 0.14 ## 17 22000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.14 ## 18 24000 \u0026lt;none\u0026gt; 3 0.00 0.01 0.15 ## 19 25000 \u0026lt;none\u0026gt; 9 0.00 0.02 0.17 ## 20 25300 \u0026lt;none\u0026gt; 1 0.00 0.00 0.17 ## 21 26000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.18 ## 22 27000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.18 ## 23 27900 \u0026lt;none\u0026gt; 1 0.00 0.00 0.18 ## 24 28000 \u0026lt;none\u0026gt; 3 0.00 0.01 0.19 ## 25 29000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.19 ## 26 30000 \u0026lt;none\u0026gt; 47 0.03 0.12 0.31 ## 27 31000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.31 ## 28 32000 \u0026lt;none\u0026gt; 4 0.00 0.01 0.32 ## 29 32050 \u0026lt;none\u0026gt; 1 0.00 0.00 0.32 ## 30 32650 \u0026lt;none\u0026gt; 1 0.00 0.00 0.32 ## 31 33000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.33 ## 32 34000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.33 ## 33 35000 \u0026lt;none\u0026gt; 8 0.00 0.02 0.35 ## 34 36000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.36 ## 35 37000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.36 ## 36 38000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.36 ## 37 40000 \u0026lt;none\u0026gt; 54 0.03 0.13 0.50 ## 38 41000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.50 ## 39 42000 \u0026lt;none\u0026gt; 3 0.00 0.01 0.51 ## 40 43000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.51 ## 41 44000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.51 ## 42 44600 \u0026lt;none\u0026gt; 1 0.00 0.00 0.51 ## 43 45000 \u0026lt;none\u0026gt; 17 0.01 0.04 0.56 ## 44 46000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.56 ## 45 47000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.56 ## 46 48000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.56 ## 47 49000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.57 ## 48 50000 \u0026lt;none\u0026gt; 102 0.06 0.25 0.82 ## 49 52000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.82 ## 50 53000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.82 ## 51 55000 \u0026lt;none\u0026gt; 3 0.00 0.01 0.83 ## 52 56000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.84 ## 53 57000 \u0026lt;none\u0026gt; 2 0.00 0.00 0.84 ## 54 58000 \u0026lt;none\u0026gt; 1 0.00 0.00 0.84 ## 55 60000 \u0026lt;none\u0026gt; 110 0.06 0.27 1.12 ## 56 62000 \u0026lt;none\u0026gt; 4 0.00 0.01 1.13 ## 57 63000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.13 ## 58 64000 \u0026lt;none\u0026gt; 5 0.00 0.01 1.14 ## 59 65000 \u0026lt;none\u0026gt; 6 0.00 0.01 1.16 ## 60 68000 \u0026lt;none\u0026gt; 4 0.00 0.01 1.17 ## 61 70000 \u0026lt;none\u0026gt; 57 0.03 0.14 1.31 ## 62 70500 \u0026lt;none\u0026gt; 1 0.00 0.00 1.31 ## 63 71000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.31 ## 64 72000 \u0026lt;none\u0026gt; 5 0.00 0.01 1.33 ## 65 74000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.33 ## 66 75000 \u0026lt;none\u0026gt; 18 0.01 0.04 1.38 ## 67 77000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.38 ## 68 78000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.39 ## 69 79000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.39 ## 70 80000 \u0026lt;none\u0026gt; 137 0.07 0.34 1.73 ## 71 82000 \u0026lt;none\u0026gt; 3 0.00 0.01 1.73 ## 72 83000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.74 ## 73 84000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.74 ## 74 85000 \u0026lt;none\u0026gt; 3 0.00 0.01 1.75 ## 75 86000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.75 ## 76 87000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.76 ## 77 88000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.76 ## 78 89000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.76 ## 79 90000 \u0026lt;none\u0026gt; 47 0.03 0.12 1.88 ## 80 92000 \u0026lt;none\u0026gt; 2 0.00 0.00 1.88 ## 81 95000 \u0026lt;none\u0026gt; 6 0.00 0.01 1.90 ## 82 96000 \u0026lt;none\u0026gt; 6 0.00 0.01 1.91 ## 83 97000 \u0026lt;none\u0026gt; 1 0.00 0.00 1.91 ## 84 97500 \u0026lt;none\u0026gt; 2 0.00 0.00 1.92 ## 85 98000 \u0026lt;none\u0026gt; 6 0.00 0.01 1.93 ## 86 100000 \u0026lt;none\u0026gt; 328 0.18 0.81 2.75 ## 87 100003 \u0026lt;none\u0026gt; 1 0.00 0.00 2.75 ## 88 100008 \u0026lt;none\u0026gt; 1 0.00 0.00 2.75 ## 89 101000 \u0026lt;none\u0026gt; 1 0.00 0.00 2.75 ## 90 104000 \u0026lt;none\u0026gt; 3 0.00 0.01 2.76 ## 91 105000 \u0026lt;none\u0026gt; 7 0.00 0.02 2.78 ## 92 106000 \u0026lt;none\u0026gt; 2 0.00 0.00 2.78 ## 93 107000 \u0026lt;none\u0026gt; 2 0.00 0.00 2.79 ## 94 108000 \u0026lt;none\u0026gt; 1 0.00 0.00 2.79 ## 95 109000 \u0026lt;none\u0026gt; 2 0.00 0.00 2.80 ## 96 110000 \u0026lt;none\u0026gt; 38 0.02 0.09 2.89 ## 97 111000 \u0026lt;none\u0026gt; 1 0.00 0.00 2.89 ## 98 112000 \u0026lt;none\u0026gt; 2 0.00 0.00 2.90 ## 99 112500 \u0026lt;none\u0026gt; 1 0.00 0.00 2.90 ## 100 113000 \u0026lt;none\u0026gt; 3 0.00 0.01 2.91 ## 101 114000 \u0026lt;none\u0026gt; 1 0.00 0.00 2.91 ## 102 115000 \u0026lt;none\u0026gt; 5 0.00 0.01 2.92 ## 103 116000 \u0026lt;none\u0026gt; 2 0.00 0.00 2.93 ## 104 117000 \u0026lt;none\u0026gt; 1 0.00 0.00 2.93 ## 105 118000 \u0026lt;none\u0026gt; 2 0.00 0.00 2.93 ## 106 118800 \u0026lt;none\u0026gt; 1 0.00 0.00 2.94 ## 107 120000 \u0026lt;none\u0026gt; 237 0.13 0.59 3.52 ## 108 120300 \u0026lt;none\u0026gt; 1 0.00 0.00 3.53 ## 109 121000 \u0026lt;none\u0026gt; 1 0.00 0.00 3.53 ## 110 122000 \u0026lt;none\u0026gt; 1 0.00 0.00 3.53 ## 111 123000 \u0026lt;none\u0026gt; 3 0.00 0.01 3.54 ## 112 124000 \u0026lt;none\u0026gt; 2 0.00 0.00 3.54 ## 113 125000 \u0026lt;none\u0026gt; 11 0.01 0.03 3.57 ## 114 126000 \u0026lt;none\u0026gt; 2 0.00 0.00 3.58 ## 115 127000 \u0026lt;none\u0026gt; 1 0.00 0.00 3.58 ## 116 128000 \u0026lt;none\u0026gt; 6 0.00 0.01 3.59 ## 117 129000 \u0026lt;none\u0026gt; 1 0.00 0.00 3.59 ## 118 130000 \u0026lt;none\u0026gt; 100 0.05 0.25 3.84 ## 119 131000 \u0026lt;none\u0026gt; 1 0.00 0.00 3.84 ## 120 132000 \u0026lt;none\u0026gt; 7 0.00 0.02 3.86 ## 121 133000 \u0026lt;none\u0026gt; 4 0.00 0.01 3.87 ## 122 134000 \u0026lt;none\u0026gt; 3 0.00 0.01 3.88 ## 123 135000 \u0026lt;none\u0026gt; 10 0.01 0.02 3.90 ## 124 136000 \u0026lt;none\u0026gt; 1 0.00 0.00 3.91 ## 125 140000 \u0026lt;none\u0026gt; 63 0.03 0.16 4.06 ## 126 141000 \u0026lt;none\u0026gt; 1 0.00 0.00 4.07 ## 127 141681 \u0026lt;none\u0026gt; 1 0.00 0.00 4.07 ## 128 142000 \u0026lt;none\u0026gt; 3 0.00 0.01 4.07 ## 129 143000 \u0026lt;none\u0026gt; 1 0.00 0.00 4.08 ## 130 144000 \u0026lt;none\u0026gt; 5 0.00 0.01 4.09 ## 131 144444 \u0026lt;none\u0026gt; 1 0.00 0.00 4.09 ## 132 145000 \u0026lt;none\u0026gt; 7 0.00 0.02 4.11 ## 133 146000 \u0026lt;none\u0026gt; 5 0.00 0.01 4.12 ## 134 147000 \u0026lt;none\u0026gt; 2 0.00 0.00 4.13 ## 135 148000 \u0026lt;none\u0026gt; 1 0.00 0.00 4.13 ## 136 150000 \u0026lt;none\u0026gt; 416 0.22 1.03 5.16 ## 137 150090 \u0026lt;none\u0026gt; 1 0.00 0.00 5.16 ## 138 151000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.17 ## 139 152000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.17 ## 140 153000 \u0026lt;none\u0026gt; 1 0.00 0.00 5.17 ## 141 154000 \u0026lt;none\u0026gt; 1 0.00 0.00 5.18 ## 142 155000 \u0026lt;none\u0026gt; 1 0.00 0.00 5.18 ## 143 156000 \u0026lt;none\u0026gt; 5 0.00 0.01 5.19 ## 144 157000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.20 ## 145 157388 \u0026lt;none\u0026gt; 1 0.00 0.00 5.20 ## 146 158000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.20 ## 147 159000 \u0026lt;none\u0026gt; 1 0.00 0.00 5.21 ## 148 159479 \u0026lt;none\u0026gt; 1 0.00 0.00 5.21 ## 149 160000 \u0026lt;none\u0026gt; 124 0.07 0.31 5.51 ## 150 160250 \u0026lt;none\u0026gt; 1 0.00 0.00 5.52 ## 151 161000 \u0026lt;none\u0026gt; 1 0.00 0.00 5.52 ## 152 162000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.52 ## 153 163000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.53 ## 154 164000 \u0026lt;none\u0026gt; 3 0.00 0.01 5.54 ## 155 165000 \u0026lt;none\u0026gt; 16 0.01 0.04 5.58 ## 156 165800 \u0026lt;none\u0026gt; 1 0.00 0.00 5.58 ## 157 166556 \u0026lt;none\u0026gt; 1 0.00 0.00 5.58 ## 158 167000 \u0026lt;none\u0026gt; 3 0.00 0.01 5.59 ## 159 168000 \u0026lt;none\u0026gt; 3 0.00 0.01 5.60 ## 160 169999 \u0026lt;none\u0026gt; 1 0.00 0.00 5.60 ## 161 170000 \u0026lt;none\u0026gt; 66 0.04 0.16 5.76 ## 162 172000 \u0026lt;none\u0026gt; 4 0.00 0.01 5.77 ## 163 173000 \u0026lt;none\u0026gt; 5 0.00 0.01 5.78 ## 164 174000 \u0026lt;none\u0026gt; 4 0.00 0.01 5.79 ## 165 175000 \u0026lt;none\u0026gt; 13 0.01 0.03 5.83 ## 166 176000 \u0026lt;none\u0026gt; 3 0.00 0.01 5.83 ## 167 177000 \u0026lt;none\u0026gt; 1 0.00 0.00 5.84 ## 168 178000 \u0026lt;none\u0026gt; 6 0.00 0.01 5.85 ## 169 179000 \u0026lt;none\u0026gt; 2 0.00 0.00 5.86 ## 170 180000 \u0026lt;none\u0026gt; 246 0.13 0.61 6.46 ## 171 182000 \u0026lt;none\u0026gt; 7 0.00 0.02 6.48 ## 172 183000 \u0026lt;none\u0026gt; 2 0.00 0.00 6.49 ## 173 184000 \u0026lt;none\u0026gt; 3 0.00 0.01 6.49 ## 174 185000 \u0026lt;none\u0026gt; 4 0.00 0.01 6.50 ## 175 186000 \u0026lt;none\u0026gt; 4 0.00 0.01 6.51 ## 176 187000 \u0026lt;none\u0026gt; 2 0.00 0.00 6.52 ## 177 188000 \u0026lt;none\u0026gt; 3 0.00 0.01 6.53 ## 178 189000 \u0026lt;none\u0026gt; 3 0.00 0.01 6.53 ## 179 190000 \u0026lt;none\u0026gt; 57 0.03 0.14 6.68 ## 180 191000 \u0026lt;none\u0026gt; 1 0.00 0.00 6.68 ## 181 192000 \u0026lt;none\u0026gt; 5 0.00 0.01 6.69 ## 182 193000 \u0026lt;none\u0026gt; 1 0.00 0.00 6.69 ## 183 194000 \u0026lt;none\u0026gt; 3 0.00 0.01 6.70 ## 184 195000 \u0026lt;none\u0026gt; 4 0.00 0.01 6.71 ## 185 196000 \u0026lt;none\u0026gt; 7 0.00 0.02 6.73 ## 186 196736 \u0026lt;none\u0026gt; 1 0.00 0.00 6.73 ## 187 197000 \u0026lt;none\u0026gt; 2 0.00 0.00 6.73 ## 188 198000 \u0026lt;none\u0026gt; 3 0.00 0.01 6.74 ## 189 200000 \u0026lt;none\u0026gt; 854 0.46 2.11 8.85 ## 190 200002 \u0026lt;none\u0026gt; 1 0.00 0.00 8.86 ## 191 201000 \u0026lt;none\u0026gt; 1 0.00 0.00 8.86 ## 192 202000 \u0026lt;none\u0026gt; 1 0.00 0.00 8.86 ## 193 203156 \u0026lt;none\u0026gt; 1 0.00 0.00 8.86 ## 194 204000 \u0026lt;none\u0026gt; 3 0.00 0.01 8.87 ## 195 204800 \u0026lt;none\u0026gt; 1 0.00 0.00 8.87 ## 196 205000 \u0026lt;none\u0026gt; 9 0.00 0.02 8.90 ## 197 206000 \u0026lt;none\u0026gt; 1 0.00 0.00 8.90 ## 198 208000 \u0026lt;none\u0026gt; 3 0.00 0.01 8.91 ## 199 209000 \u0026lt;none\u0026gt; 3 0.00 0.01 8.91 ## 200 210000 \u0026lt;none\u0026gt; 62 0.03 0.15 9.07 ## 201 211000 \u0026lt;none\u0026gt; 4 0.00 0.01 9.08 ## 202 212000 \u0026lt;none\u0026gt; 4 0.00 0.01 9.09 ## 203 213000 \u0026lt;none\u0026gt; 7 0.00 0.02 9.10 ## 204 214000 \u0026lt;none\u0026gt; 5 0.00 0.01 9.12 ## 205 215000 \u0026lt;none\u0026gt; 11 0.01 0.03 9.14 ## 206 216000 \u0026lt;none\u0026gt; 7 0.00 0.02 9.16 ## 207 217000 \u0026lt;none\u0026gt; 4 0.00 0.01 9.17 ## 208 218000 \u0026lt;none\u0026gt; 6 0.00 0.01 9.19 ## 209 219000 \u0026lt;none\u0026gt; 5 0.00 0.01 9.20 ## 210 220000 \u0026lt;none\u0026gt; 174 0.09 0.43 9.63 ## 211 221000 \u0026lt;none\u0026gt; 1 0.00 0.00 9.63 ## 212 222000 \u0026lt;none\u0026gt; 1 0.00 0.00 9.63 ## 213 222400 \u0026lt;none\u0026gt; 1 0.00 0.00 9.64 ## 214 223000 \u0026lt;none\u0026gt; 2 0.00 0.00 9.64 ## 215 224000 \u0026lt;none\u0026gt; 4 0.00 0.01 9.65 ## 216 225000 \u0026lt;none\u0026gt; 50 0.03 0.12 9.78 ## 217 226000 \u0026lt;none\u0026gt; 6 0.00 0.01 9.79 ## 218 227000 \u0026lt;none\u0026gt; 3 0.00 0.01 9.80 ## 219 228000 \u0026lt;none\u0026gt; 2 0.00 0.00 9.80 ## 220 229000 \u0026lt;none\u0026gt; 1 0.00 0.00 9.81 ## 221 230000 \u0026lt;none\u0026gt; 121 0.07 0.30 10.10 ## 222 230500 \u0026lt;none\u0026gt; 1 0.00 0.00 10.11 ## 223 231000 \u0026lt;none\u0026gt; 1 0.00 0.00 10.11 ## 224 233000 \u0026lt;none\u0026gt; 1 0.00 0.00 10.11 ## 225 234000 \u0026lt;none\u0026gt; 2 0.00 0.00 10.12 ## 226 235000 \u0026lt;none\u0026gt; 7 0.00 0.02 10.13 ## 227 236000 \u0026lt;none\u0026gt; 5 0.00 0.01 10.15 ## 228 236858 \u0026lt;none\u0026gt; 1 0.00 0.00 10.15 ## 229 237000 \u0026lt;none\u0026gt; 1 0.00 0.00 10.15 ## 230 238000 \u0026lt;none\u0026gt; 2 0.00 0.00 10.16 ## 231 240000 \u0026lt;none\u0026gt; 168 0.09 0.42 10.57 ## 232 241000 \u0026lt;none\u0026gt; 1 0.00 0.00 10.57 ## 233 242000 \u0026lt;none\u0026gt; 3 0.00 0.01 10.58 ## 234 245000 \u0026lt;none\u0026gt; 14 0.01 0.03 10.62 ## 235 246000 \u0026lt;none\u0026gt; 2 0.00 0.00 10.62 ## 236 247000 \u0026lt;none\u0026gt; 3 0.00 0.01 10.63 ## 237 248000 \u0026lt;none\u0026gt; 7 0.00 0.02 10.65 ## 238 249000 \u0026lt;none\u0026gt; 3 0.00 0.01 10.65 ## 239 250000 \u0026lt;none\u0026gt; 655 0.35 1.62 12.27 ## 240 251000 \u0026lt;none\u0026gt; 2 0.00 0.00 12.28 ## 241 252000 \u0026lt;none\u0026gt; 7 0.00 0.02 12.30 ## 242 253000 \u0026lt;none\u0026gt; 3 0.00 0.01 12.30 ## 243 254000 \u0026lt;none\u0026gt; 4 0.00 0.01 12.31 ## 244 255000 \u0026lt;none\u0026gt; 8 0.00 0.02 12.33 ## 245 255293 \u0026lt;none\u0026gt; 1 0.00 0.00 12.34 ## 246 255760 \u0026lt;none\u0026gt; 1 0.00 0.00 12.34 ## 247 256000 \u0026lt;none\u0026gt; 7 0.00 0.02 12.36 ## 248 257000 \u0026lt;none\u0026gt; 3 0.00 0.01 12.36 ## 249 258000 \u0026lt;none\u0026gt; 3 0.00 0.01 12.37 ## 250 259000 \u0026lt;none\u0026gt; 5 0.00 0.01 12.38 ## 251 260000 \u0026lt;none\u0026gt; 190 0.10 0.47 12.85 ## 252 261000 \u0026lt;none\u0026gt; 5 0.00 0.01 12.87 ## 253 261200 \u0026lt;none\u0026gt; 1 0.00 0.00 12.87 ## 254 262000 \u0026lt;none\u0026gt; 2 0.00 0.00 12.87 ## 255 263000 \u0026lt;none\u0026gt; 6 0.00 0.01 12.89 ## 256 263681 \u0026lt;none\u0026gt; 1 0.00 0.00 12.89 ## 257 264000 \u0026lt;none\u0026gt; 8 0.00 0.02 12.91 ## 258 265000 \u0026lt;none\u0026gt; 8 0.00 0.02 12.93 ## 259 266000 \u0026lt;none\u0026gt; 4 0.00 0.01 12.94 ## 260 267000 \u0026lt;none\u0026gt; 1 0.00 0.00 12.94 ## 261 268000 \u0026lt;none\u0026gt; 1 0.00 0.00 12.94 ## 262 269000 \u0026lt;none\u0026gt; 1 0.00 0.00 12.95 ## 263 270000 \u0026lt;none\u0026gt; 179 0.10 0.44 13.39 ## 264 271000 \u0026lt;none\u0026gt; 2 0.00 0.00 13.40 ## 265 272000 \u0026lt;none\u0026gt; 3 0.00 0.01 13.40 ## 266 273000 \u0026lt;none\u0026gt; 4 0.00 0.01 13.41 ## 267 274000 \u0026lt;none\u0026gt; 3 0.00 0.01 13.42 ## 268 275000 \u0026lt;none\u0026gt; 12 0.01 0.03 13.45 ## 269 276000 \u0026lt;none\u0026gt; 5 0.00 0.01 13.46 ## 270 277000 \u0026lt;none\u0026gt; 7 0.00 0.02 13.48 ## 271 278000 \u0026lt;none\u0026gt; 3 0.00 0.01 13.49 ## 272 279000 \u0026lt;none\u0026gt; 1 0.00 0.00 13.49 ## 273 280000 \u0026lt;none\u0026gt; 457 0.25 1.13 14.62 ## 274 280088 \u0026lt;none\u0026gt; 1 0.00 0.00 14.62 ## 275 281000 \u0026lt;none\u0026gt; 2 0.00 0.00 14.63 ## 276 282000 \u0026lt;none\u0026gt; 5 0.00 0.01 14.64 ## 277 283000 \u0026lt;none\u0026gt; 2 0.00 0.00 14.64 ## 278 283883 \u0026lt;none\u0026gt; 1 0.00 0.00 14.65 ## 279 284000 \u0026lt;none\u0026gt; 3 0.00 0.01 14.65 ## 280 285000 \u0026lt;none\u0026gt; 20 0.01 0.05 14.70 ## 281 286000 \u0026lt;none\u0026gt; 5 0.00 0.01 14.72 ## 282 287000 \u0026lt;none\u0026gt; 3 0.00 0.01 14.72 ## 283 288000 \u0026lt;none\u0026gt; 4 0.00 0.01 14.73 ## 284 289000 \u0026lt;none\u0026gt; 3 0.00 0.01 14.74 ## 285 289460 \u0026lt;none\u0026gt; 1 0.00 0.00 14.74 ## 286 289737 \u0026lt;none\u0026gt; 1 0.00 0.00 14.75 ## 287 290000 \u0026lt;none\u0026gt; 137 0.07 0.34 15.08 ## 288 290500 \u0026lt;none\u0026gt; 1 0.00 0.00 15.09 ## 289 291000 \u0026lt;none\u0026gt; 3 0.00 0.01 15.09 ## 290 292000 \u0026lt;none\u0026gt; 5 0.00 0.01 15.11 ## 291 293000 \u0026lt;none\u0026gt; 2 0.00 0.00 15.11 ## 292 293790 \u0026lt;none\u0026gt; 1 0.00 0.00 15.11 ## 293 294000 \u0026lt;none\u0026gt; 4 0.00 0.01 15.12 ## 294 295000 \u0026lt;none\u0026gt; 14 0.01 0.03 15.16 ## 295 296000 \u0026lt;none\u0026gt; 5 0.00 0.01 15.17 ## 296 297000 \u0026lt;none\u0026gt; 4 0.00 0.01 15.18 ## 297 298000 \u0026lt;none\u0026gt; 12 0.01 0.03 15.21 ## 298 299000 \u0026lt;none\u0026gt; 1 0.00 0.00 15.21 ## 299 300000 \u0026lt;none\u0026gt; 2304 1.24 5.70 20.91 ## 300 300002 \u0026lt;none\u0026gt; 1 0.00 0.00 20.92 ## 301 300003 \u0026lt;none\u0026gt; 1 0.00 0.00 20.92 ## 302 300008 \u0026lt;none\u0026gt; 1 0.00 0.00 20.92 ## 303 300500 \u0026lt;none\u0026gt; 1 0.00 0.00 20.92 ## 304 301000 \u0026lt;none\u0026gt; 284 0.15 0.70 21.63 ## 305 302000 \u0026lt;none\u0026gt; 15 0.01 0.04 21.66 ## 306 303000 \u0026lt;none\u0026gt; 4 0.00 0.01 21.67 ## 307 304000 \u0026lt;none\u0026gt; 6 0.00 0.01 21.69 ## 308 305000 \u0026lt;none\u0026gt; 37 0.02 0.09 21.78 ## 309 306000 \u0026lt;none\u0026gt; 25 0.01 0.06 21.84 ## 310 307000 \u0026lt;none\u0026gt; 8 0.00 0.02 21.86 ## 311 308000 \u0026lt;none\u0026gt; 12 0.01 0.03 21.89 ## 312 308300 \u0026lt;none\u0026gt; 1 0.00 0.00 21.89 ## 313 309000 \u0026lt;none\u0026gt; 10 0.01 0.02 21.92 ## 314 310000 \u0026lt;none\u0026gt; 341 0.18 0.84 22.76 ## 315 310504 \u0026lt;none\u0026gt; 1 0.00 0.00 22.76 ## 316 311000 \u0026lt;none\u0026gt; 6 0.00 0.01 22.78 ## 317 311100 \u0026lt;none\u0026gt; 1 0.00 0.00 22.78 ## 318 312000 \u0026lt;none\u0026gt; 16 0.01 0.04 22.82 ## 319 312500 \u0026lt;none\u0026gt; 1 0.00 0.00 22.82 ## 320 313000 \u0026lt;none\u0026gt; 3 0.00 0.01 22.83 ## 321 314000 \u0026lt;none\u0026gt; 13 0.01 0.03 22.86 ## 322 315000 \u0026lt;none\u0026gt; 60 0.03 0.15 23.01 ## 323 315692 \u0026lt;none\u0026gt; 1 0.00 0.00 23.01 ## 324 316000 \u0026lt;none\u0026gt; 15 0.01 0.04 23.05 ## 325 317000 \u0026lt;none\u0026gt; 6 0.00 0.01 23.07 ## 326 318000 \u0026lt;none\u0026gt; 9 0.00 0.02 23.09 ## 327 318027 \u0026lt;none\u0026gt; 1 0.00 0.00 23.09 ## 328 318572 \u0026lt;none\u0026gt; 1 0.00 0.00 23.09 ## 329 319000 \u0026lt;none\u0026gt; 61 0.03 0.15 23.24 ## 330 320000 \u0026lt;none\u0026gt; 2873 1.55 7.11 30.35 ## 331 320031 \u0026lt;none\u0026gt; 1 0.00 0.00 30.36 ## 332 320500 \u0026lt;none\u0026gt; 60 0.03 0.15 30.50 ## 333 321000 \u0026lt;none\u0026gt; 20 0.01 0.05 30.55 ## 334 322000 \u0026lt;none\u0026gt; 32 0.02 0.08 30.63 ## 335 323000 \u0026lt;none\u0026gt; 7 0.00 0.02 30.65 ## 336 323500 \u0026lt;none\u0026gt; 1 0.00 0.00 30.65 ## 337 324000 \u0026lt;none\u0026gt; 12 0.01 0.03 30.68 ## 338 324345 \u0026lt;none\u0026gt; 1 0.00 0.00 30.68 ## 339 325000 \u0026lt;none\u0026gt; 192 0.10 0.48 31.16 ## 340 325090 \u0026lt;none\u0026gt; 1 0.00 0.00 31.16 ## 341 326000 \u0026lt;none\u0026gt; 248 0.13 0.61 31.78 ## 342 326500 \u0026lt;none\u0026gt; 107 0.06 0.26 32.04 ## 343 327000 \u0026lt;none\u0026gt; 8 0.00 0.02 32.06 ## 344 328000 \u0026lt;none\u0026gt; 5 0.00 0.01 32.07 ## 345 328888 \u0026lt;none\u0026gt; 1 0.00 0.00 32.07 ## 346 329000 \u0026lt;none\u0026gt; 6 0.00 0.01 32.09 ## 347 329500 \u0026lt;none\u0026gt; 1 0.00 0.00 32.09 ## 348 330000 \u0026lt;none\u0026gt; 306 0.17 0.76 32.85 ## 349 331000 \u0026lt;none\u0026gt; 7 0.00 0.02 32.87 ## 350 332000 \u0026lt;none\u0026gt; 6 0.00 0.01 32.88 ## 351 332636 \u0026lt;none\u0026gt; 1 0.00 0.00 32.88 ## 352 332703 \u0026lt;none\u0026gt; 1 0.00 0.00 32.89 ## 353 333000 \u0026lt;none\u0026gt; 7 0.00 0.02 32.90 ## 354 334000 \u0026lt;none\u0026gt; 5 0.00 0.01 32.92 ## 355 335000 \u0026lt;none\u0026gt; 20 0.01 0.05 32.97 ## 356 336000 \u0026lt;none\u0026gt; 10 0.01 0.02 32.99 ## 357 336500 \u0026lt;none\u0026gt; 1 0.00 0.00 32.99 ## 358 337000 \u0026lt;none\u0026gt; 3 0.00 0.01 33.00 ## 359 338000 \u0026lt;none\u0026gt; 12 0.01 0.03 33.03 ## 360 338500 \u0026lt;none\u0026gt; 1 0.00 0.00 33.03 ## 361 339000 \u0026lt;none\u0026gt; 1 0.00 0.00 33.03 ## 362 340000 \u0026lt;none\u0026gt; 270 0.15 0.67 33.70 ## 363 341000 \u0026lt;none\u0026gt; 1 0.00 0.00 33.71 ## 364 342000 \u0026lt;none\u0026gt; 6 0.00 0.01 33.72 ## 365 343000 \u0026lt;none\u0026gt; 8 0.00 0.02 33.74 ## 366 344000 \u0026lt;none\u0026gt; 4 0.00 0.01 33.75 ## 367 345000 \u0026lt;none\u0026gt; 19 0.01 0.05 33.80 ## 368 346000 \u0026lt;none\u0026gt; 5 0.00 0.01 33.81 ## 369 347000 \u0026lt;none\u0026gt; 3 0.00 0.01 33.82 ## 370 347336 \u0026lt;none\u0026gt; 1 0.00 0.00 33.82 ## 371 348000 \u0026lt;none\u0026gt; 5 0.00 0.01 33.83 ## 372 349000 \u0026lt;none\u0026gt; 4 0.00 0.01 33.84 ## 373 349600 \u0026lt;none\u0026gt; 1 0.00 0.00 33.84 ## 374 350000 \u0026lt;none\u0026gt; 2104 1.13 5.21 39.05 ## 375 351000 \u0026lt;none\u0026gt; 4 0.00 0.01 39.06 ## 376 352000 \u0026lt;none\u0026gt; 4 0.00 0.01 39.07 ## 377 353320 \u0026lt;none\u0026gt; 1 0.00 0.00 39.07 ## 378 354000 \u0026lt;none\u0026gt; 6 0.00 0.01 39.09 ## 379 355000 \u0026lt;none\u0026gt; 10 0.01 0.02 39.11 ## 380 356000 \u0026lt;none\u0026gt; 16 0.01 0.04 39.15 ## 381 356947 \u0026lt;none\u0026gt; 1 0.00 0.00 39.15 ## 382 357000 \u0026lt;none\u0026gt; 5 0.00 0.01 39.17 ## 383 358000 \u0026lt;none\u0026gt; 11 0.01 0.03 39.19 ## 384 359000 \u0026lt;none\u0026gt; 7 0.00 0.02 39.21 ## 385 360000 \u0026lt;none\u0026gt; 327 0.18 0.81 40.02 ## 386 361000 \u0026lt;none\u0026gt; 3 0.00 0.01 40.03 ## 387 361350 \u0026lt;none\u0026gt; 1 0.00 0.00 40.03 ## 388 362000 \u0026lt;none\u0026gt; 3 0.00 0.01 40.04 ## 389 363000 \u0026lt;none\u0026gt; 2 0.00 0.00 40.04 ## 390 364000 \u0026lt;none\u0026gt; 2 0.00 0.00 40.05 ## 391 365000 \u0026lt;none\u0026gt; 23 0.01 0.06 40.10 ## 392 365500 \u0026lt;none\u0026gt; 1 0.00 0.00 40.11 ## 393 367000 \u0026lt;none\u0026gt; 6 0.00 0.01 40.12 ## 394 367200 \u0026lt;none\u0026gt; 1 0.00 0.00 40.12 ## 395 368000 \u0026lt;none\u0026gt; 6 0.00 0.01 40.14 ## 396 369000 \u0026lt;none\u0026gt; 2 0.00 0.00 40.14 ## 397 369364 \u0026lt;none\u0026gt; 1 0.00 0.00 40.15 ## 398 369975 \u0026lt;none\u0026gt; 1 0.00 0.00 40.15 ## 399 370000 \u0026lt;none\u0026gt; 212 0.11 0.52 40.67 ## 400 371000 \u0026lt;none\u0026gt; 7 0.00 0.02 40.69 ## 401 372000 \u0026lt;none\u0026gt; 5 0.00 0.01 40.70 ## 402 373000 \u0026lt;none\u0026gt; 1 0.00 0.00 40.70 ## 403 374000 \u0026lt;none\u0026gt; 3 0.00 0.01 40.71 ## 404 375000 \u0026lt;none\u0026gt; 20 0.01 0.05 40.76 ## 405 376000 \u0026lt;none\u0026gt; 3 0.00 0.01 40.77 ## 406 377000 \u0026lt;none\u0026gt; 3 0.00 0.01 40.78 ## 407 378000 \u0026lt;none\u0026gt; 9 0.00 0.02 40.80 ## 408 379000 \u0026lt;none\u0026gt; 7 0.00 0.02 40.82 ## 409 379663 \u0026lt;none\u0026gt; 1 0.00 0.00 40.82 ## 410 380000 \u0026lt;none\u0026gt; 692 0.37 1.71 42.53 ## 411 381000 \u0026lt;none\u0026gt; 2 0.00 0.00 42.54 ## 412 381649 \u0026lt;none\u0026gt; 1 0.00 0.00 42.54 ## 413 382000 \u0026lt;none\u0026gt; 3 0.00 0.01 42.55 ## 414 383000 \u0026lt;none\u0026gt; 4 0.00 0.01 42.56 ## 415 384000 \u0026lt;none\u0026gt; 6 0.00 0.01 42.57 ## 416 385000 \u0026lt;none\u0026gt; 25 0.01 0.06 42.63 ## 417 386000 \u0026lt;none\u0026gt; 6 0.00 0.01 42.65 ## 418 387000 \u0026lt;none\u0026gt; 7 0.00 0.02 42.66 ## 419 388000 \u0026lt;none\u0026gt; 7 0.00 0.02 42.68 ## 420 389000 \u0026lt;none\u0026gt; 4 0.00 0.01 42.69 ## 421 390000 \u0026lt;none\u0026gt; 160 0.09 0.40 43.09 ## 422 391000 \u0026lt;none\u0026gt; 1 0.00 0.00 43.09 ## 423 392000 \u0026lt;none\u0026gt; 3 0.00 0.01 43.10 ## 424 393000 \u0026lt;none\u0026gt; 1 0.00 0.00 43.10 ## 425 394000 \u0026lt;none\u0026gt; 4 0.00 0.01 43.11 ## 426 395000 \u0026lt;none\u0026gt; 14 0.01 0.03 43.14 ## 427 395850 \u0026lt;none\u0026gt; 1 0.00 0.00 43.15 ## 428 396000 \u0026lt;none\u0026gt; 3 0.00 0.01 43.15 ## 429 397000 \u0026lt;none\u0026gt; 1 0.00 0.00 43.16 ## 430 398000 \u0026lt;none\u0026gt; 8 0.00 0.02 43.18 ## 431 399000 \u0026lt;none\u0026gt; 6 0.00 0.01 43.19 ## 432 400000 \u0026lt;none\u0026gt; 2774 1.50 6.86 50.05 ## 433 400005 \u0026lt;none\u0026gt; 1 0.00 0.00 50.06 ## 434 400600 \u0026lt;none\u0026gt; 1 0.00 0.00 50.06 ## 435 401000 \u0026lt;none\u0026gt; 3 0.00 0.01 50.07 ## 436 401500 \u0026lt;none\u0026gt; 1 0.00 0.00 50.07 ## 437 402000 \u0026lt;none\u0026gt; 5 0.00 0.01 50.08 ## 438 402810 \u0026lt;none\u0026gt; 1 0.00 0.00 50.08 ## 439 403000 \u0026lt;none\u0026gt; 2 0.00 0.00 50.09 ## 440 403800 \u0026lt;none\u0026gt; 1 0.00 0.00 50.09 ## 441 403838 \u0026lt;none\u0026gt; 1 0.00 0.00 50.09 ## 442 404000 \u0026lt;none\u0026gt; 1 0.00 0.00 50.10 ## 443 405000 \u0026lt;none\u0026gt; 9 0.00 0.02 50.12 ## 444 406000 \u0026lt;none\u0026gt; 3 0.00 0.01 50.13 ## 445 407000 \u0026lt;none\u0026gt; 2 0.00 0.00 50.13 ## 446 408000 \u0026lt;none\u0026gt; 2 0.00 0.00 50.14 ## 447 409000 \u0026lt;none\u0026gt; 5 0.00 0.01 50.15 ## 448 410000 \u0026lt;none\u0026gt; 78 0.04 0.19 50.34 ## 449 412000 \u0026lt;none\u0026gt; 8 0.00 0.02 50.36 ## 450 413000 \u0026lt;none\u0026gt; 4 0.00 0.01 50.37 ## 451 413971 \u0026lt;none\u0026gt; 1 0.00 0.00 50.37 ## 452 414000 \u0026lt;none\u0026gt; 2 0.00 0.00 50.38 ## 453 415000 \u0026lt;none\u0026gt; 13 0.01 0.03 50.41 ## 454 416000 \u0026lt;none\u0026gt; 5 0.00 0.01 50.42 ## 455 416365 \u0026lt;none\u0026gt; 1 0.00 0.00 50.43 ## 456 417000 \u0026lt;none\u0026gt; 7 0.00 0.02 50.44 ## 457 418000 \u0026lt;none\u0026gt; 7 0.00 0.02 50.46 ## 458 419000 \u0026lt;none\u0026gt; 7 0.00 0.02 50.48 ## 459 420000 \u0026lt;none\u0026gt; 324 0.17 0.80 51.28 ## 460 421000 \u0026lt;none\u0026gt; 1 0.00 0.00 51.28 ## 461 422000 \u0026lt;none\u0026gt; 3 0.00 0.01 51.29 ## 462 423000 \u0026lt;none\u0026gt; 5 0.00 0.01 51.30 ## 463 424000 \u0026lt;none\u0026gt; 2 0.00 0.00 51.31 ## 464 425000 \u0026lt;none\u0026gt; 22 0.01 0.05 51.36 ## 465 426000 \u0026lt;none\u0026gt; 2 0.00 0.00 51.37 ## 466 427000 \u0026lt;none\u0026gt; 7 0.00 0.02 51.38 ## 467 428000 \u0026lt;none\u0026gt; 2 0.00 0.00 51.39 ## 468 429000 \u0026lt;none\u0026gt; 2 0.00 0.00 51.39 ## 469 430000 \u0026lt;none\u0026gt; 172 0.09 0.43 51.82 ## 470 432000 \u0026lt;none\u0026gt; 6 0.00 0.01 51.83 ## 471 433000 \u0026lt;none\u0026gt; 3 0.00 0.01 51.84 ## 472 434000 \u0026lt;none\u0026gt; 2 0.00 0.00 51.85 ## 473 435000 \u0026lt;none\u0026gt; 14 0.01 0.03 51.88 ## 474 436000 \u0026lt;none\u0026gt; 2 0.00 0.00 51.89 ## 475 438000 \u0026lt;none\u0026gt; 3 0.00 0.01 51.89 ## 476 439000 \u0026lt;none\u0026gt; 4 0.00 0.01 51.90 ## 477 440000 \u0026lt;none\u0026gt; 53 0.03 0.13 52.03 ## 478 440009 \u0026lt;none\u0026gt; 1 0.00 0.00 52.04 ## 479 440215 \u0026lt;none\u0026gt; 1 0.00 0.00 52.04 ## 480 442000 \u0026lt;none\u0026gt; 2 0.00 0.00 52.04 ## 481 443000 \u0026lt;none\u0026gt; 1 0.00 0.00 52.05 ## 482 444000 \u0026lt;none\u0026gt; 3 0.00 0.01 52.05 ## 483 445000 \u0026lt;none\u0026gt; 9 0.00 0.02 52.08 ## 484 445800 \u0026lt;none\u0026gt; 1 0.00 0.00 52.08 ## 485 446000 \u0026lt;none\u0026gt; 5 0.00 0.01 52.09 ## 486 447000 \u0026lt;none\u0026gt; 4 0.00 0.01 52.10 ## 487 448000 \u0026lt;none\u0026gt; 4 0.00 0.01 52.11 ## 488 449000 \u0026lt;none\u0026gt; 2 0.00 0.00 52.12 ## 489 449550 \u0026lt;none\u0026gt; 1 0.00 0.00 52.12 ## 490 450000 \u0026lt;none\u0026gt; 1287 0.69 3.18 55.30 ## 491 452000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.31 ## 492 453000 \u0026lt;none\u0026gt; 3 0.00 0.01 55.31 ## 493 454000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.32 ## 494 455000 \u0026lt;none\u0026gt; 3 0.00 0.01 55.33 ## 495 456000 \u0026lt;none\u0026gt; 6 0.00 0.01 55.34 ## 496 457000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.35 ## 497 458000 \u0026lt;none\u0026gt; 6 0.00 0.01 55.36 ## 498 459000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.37 ## 499 460000 \u0026lt;none\u0026gt; 96 0.05 0.24 55.60 ## 500 460585 \u0026lt;none\u0026gt; 1 0.00 0.00 55.61 ## 501 461000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.61 ## 502 462000 \u0026lt;none\u0026gt; 4 0.00 0.01 55.62 ## 503 462500 \u0026lt;none\u0026gt; 1 0.00 0.00 55.62 ## 504 463000 \u0026lt;none\u0026gt; 1 0.00 0.00 55.63 ## 505 464000 \u0026lt;none\u0026gt; 1 0.00 0.00 55.63 ## 506 465000 \u0026lt;none\u0026gt; 9 0.00 0.02 55.65 ## 507 465312 \u0026lt;none\u0026gt; 1 0.00 0.00 55.65 ## 508 466000 \u0026lt;none\u0026gt; 1 0.00 0.00 55.66 ## 509 468000 \u0026lt;none\u0026gt; 1 0.00 0.00 55.66 ## 510 470000 \u0026lt;none\u0026gt; 94 0.05 0.23 55.89 ## 511 472000 \u0026lt;none\u0026gt; 1 0.00 0.00 55.89 ## 512 473000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.90 ## 513 474000 \u0026lt;none\u0026gt; 1 0.00 0.00 55.90 ## 514 475000 \u0026lt;none\u0026gt; 14 0.01 0.03 55.94 ## 515 476000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.94 ## 516 477000 \u0026lt;none\u0026gt; 3 0.00 0.01 55.95 ## 517 478000 \u0026lt;none\u0026gt; 2 0.00 0.00 55.95 ## 518 479000 \u0026lt;none\u0026gt; 3 0.00 0.01 55.96 ## 519 480000 \u0026lt;none\u0026gt; 288 0.16 0.71 56.67 ## 520 482000 \u0026lt;none\u0026gt; 3 0.00 0.01 56.68 ## 521 483000 \u0026lt;none\u0026gt; 1 0.00 0.00 56.68 ## 522 484000 \u0026lt;none\u0026gt; 2 0.00 0.00 56.69 ## 523 485000 \u0026lt;none\u0026gt; 7 0.00 0.02 56.70 ## 524 487000 \u0026lt;none\u0026gt; 4 0.00 0.01 56.71 ## 525 488000 \u0026lt;none\u0026gt; 2 0.00 0.00 56.72 ## 526 489000 \u0026lt;none\u0026gt; 2 0.00 0.00 56.72 ## 527 490000 \u0026lt;none\u0026gt; 68 0.04 0.17 56.89 ## 528 491000 \u0026lt;none\u0026gt; 3 0.00 0.01 56.90 ## 529 495000 \u0026lt;none\u0026gt; 10 0.01 0.02 56.93 ## 530 495200 \u0026lt;none\u0026gt; 1 0.00 0.00 56.93 ## 531 496000 \u0026lt;none\u0026gt; 5 0.00 0.01 56.94 ## 532 497000 \u0026lt;none\u0026gt; 2 0.00 0.00 56.94 ## 533 498000 \u0026lt;none\u0026gt; 4 0.00 0.01 56.95 ## 534 499318 \u0026lt;none\u0026gt; 1 0.00 0.00 56.96 ## 535 500000 \u0026lt;none\u0026gt; 2213 1.19 5.48 62.43 ## 536 500002 \u0026lt;none\u0026gt; 1 0.00 0.00 62.44 ## 537 500003 \u0026lt;none\u0026gt; 1 0.00 0.00 62.44 ## 538 500005 \u0026lt;none\u0026gt; 1 0.00 0.00 62.44 ## 539 501000 \u0026lt;none\u0026gt; 3 0.00 0.01 62.45 ## 540 502000 \u0026lt;none\u0026gt; 1 0.00 0.00 62.45 ## 541 503000 \u0026lt;none\u0026gt; 1 0.00 0.00 62.45 ## 542 503640 \u0026lt;none\u0026gt; 1 0.00 0.00 62.45 ## 543 505000 \u0026lt;none\u0026gt; 6 0.00 0.01 62.47 ## 544 505189 \u0026lt;none\u0026gt; 1 0.00 0.00 62.47 ## 545 506000 \u0026lt;none\u0026gt; 4 0.00 0.01 62.48 ## 546 507000 \u0026lt;none\u0026gt; 2 0.00 0.00 62.49 ## 547 508000 \u0026lt;none\u0026gt; 3 0.00 0.01 62.49 ## 548 509000 \u0026lt;none\u0026gt; 2 0.00 0.00 62.50 ## 549 510000 \u0026lt;none\u0026gt; 22 0.01 0.05 62.55 ## 550 511000 \u0026lt;none\u0026gt; 2 0.00 0.00 62.56 ## 551 512000 \u0026lt;none\u0026gt; 4 0.00 0.01 62.57 ## 552 513000 \u0026lt;none\u0026gt; 4 0.00 0.01 62.58 ## 553 513700 \u0026lt;none\u0026gt; 1 0.00 0.00 62.58 ## 554 515000 \u0026lt;none\u0026gt; 7 0.00 0.02 62.60 ## 555 516000 \u0026lt;none\u0026gt; 4 0.00 0.01 62.61 ## 556 517000 \u0026lt;none\u0026gt; 5 0.00 0.01 62.62 ## 557 518000 \u0026lt;none\u0026gt; 5 0.00 0.01 62.63 ## 558 519000 \u0026lt;none\u0026gt; 2 0.00 0.00 62.64 ## 559 520000 \u0026lt;none\u0026gt; 117 0.06 0.29 62.93 ## 560 522000 \u0026lt;none\u0026gt; 2 0.00 0.00 62.93 ## 561 522002 \u0026lt;none\u0026gt; 1 0.00 0.00 62.93 ## 562 523000 \u0026lt;none\u0026gt; 2 0.00 0.00 62.94 ## 563 524000 \u0026lt;none\u0026gt; 1 0.00 0.00 62.94 ## 564 525000 \u0026lt;none\u0026gt; 8 0.00 0.02 62.96 ## 565 526000 \u0026lt;none\u0026gt; 3 0.00 0.01 62.97 ## 566 527000 \u0026lt;none\u0026gt; 3 0.00 0.01 62.98 ## 567 528000 \u0026lt;none\u0026gt; 4 0.00 0.01 62.99 ## 568 529000 \u0026lt;none\u0026gt; 1 0.00 0.00 62.99 ## 569 530000 \u0026lt;none\u0026gt; 74 0.04 0.18 63.17 ## 570 531000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.17 ## 571 532000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.18 ## 572 533000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.18 ## 573 533583 \u0026lt;none\u0026gt; 1 0.00 0.00 63.18 ## 574 534000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.18 ## 575 535000 \u0026lt;none\u0026gt; 11 0.01 0.03 63.21 ## 576 536000 \u0026lt;none\u0026gt; 4 0.00 0.01 63.22 ## 577 537000 \u0026lt;none\u0026gt; 3 0.00 0.01 63.23 ## 578 538000 \u0026lt;none\u0026gt; 5 0.00 0.01 63.24 ## 579 540000 \u0026lt;none\u0026gt; 66 0.04 0.16 63.40 ## 580 541000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.41 ## 581 543000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.41 ## 582 545000 \u0026lt;none\u0026gt; 10 0.01 0.02 63.43 ## 583 546000 \u0026lt;none\u0026gt; 1 0.00 0.00 63.44 ## 584 547000 \u0026lt;none\u0026gt; 5 0.00 0.01 63.45 ## 585 548000 \u0026lt;none\u0026gt; 2 0.00 0.00 63.45 ## 586 550000 \u0026lt;none\u0026gt; 483 0.26 1.20 64.65 ## 587 551000 \u0026lt;none\u0026gt; 2 0.00 0.00 64.65 ## 588 552000 \u0026lt;none\u0026gt; 3 0.00 0.01 64.66 ## 589 554000 \u0026lt;none\u0026gt; 2 0.00 0.00 64.67 ## 590 556000 \u0026lt;none\u0026gt; 4 0.00 0.01 64.68 ## 591 557000 \u0026lt;none\u0026gt; 2 0.00 0.00 64.68 ## 592 558000 \u0026lt;none\u0026gt; 3 0.00 0.01 64.69 ## 593 560000 \u0026lt;none\u0026gt; 54 0.03 0.13 64.82 ## 594 561000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.83 ## 595 563000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.83 ## 596 564000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.83 ## 597 565000 \u0026lt;none\u0026gt; 4 0.00 0.01 64.84 ## 598 568000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.84 ## 599 569000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.84 ## 600 570000 \u0026lt;none\u0026gt; 41 0.02 0.10 64.95 ## 601 572000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.95 ## 602 574000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.95 ## 603 575000 \u0026lt;none\u0026gt; 6 0.00 0.01 64.97 ## 604 575760 \u0026lt;none\u0026gt; 1 0.00 0.00 64.97 ## 605 575900 \u0026lt;none\u0026gt; 1 0.00 0.00 64.97 ## 606 576000 \u0026lt;none\u0026gt; 2 0.00 0.00 64.98 ## 607 577000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.98 ## 608 578000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.98 ## 609 579000 \u0026lt;none\u0026gt; 1 0.00 0.00 64.98 ## 610 580000 \u0026lt;none\u0026gt; 98 0.05 0.24 65.23 ## 611 581000 \u0026lt;none\u0026gt; 1 0.00 0.00 65.23 ## 612 581866 \u0026lt;none\u0026gt; 1 0.00 0.00 65.23 ## 613 582000 \u0026lt;none\u0026gt; 1 0.00 0.00 65.23 ## 614 583000 \u0026lt;none\u0026gt; 1 0.00 0.00 65.24 ## 615 584000 \u0026lt;none\u0026gt; 2 0.00 0.00 65.24 ## 616 584600 \u0026lt;none\u0026gt; 1 0.00 0.00 65.24 ## 617 585000 \u0026lt;none\u0026gt; 2 0.00 0.00 65.25 ## 618 586000 \u0026lt;none\u0026gt; 4 0.00 0.01 65.26 ## 619 587000 \u0026lt;none\u0026gt; 1 0.00 0.00 65.26 ## 620 588000 \u0026lt;none\u0026gt; 1 0.00 0.00 65.26 ## 621 589000 \u0026lt;none\u0026gt; 4 0.00 0.01 65.27 ## 622 590000 \u0026lt;none\u0026gt; 30 0.02 0.07 65.35 ## 623 592000 \u0026lt;none\u0026gt; 3 0.00 0.01 65.35 ## 624 594576 \u0026lt;none\u0026gt; 1 0.00 0.00 65.36 ## 625 595000 \u0026lt;none\u0026gt; 2 0.00 0.00 65.36 ## 626 598000 \u0026lt;none\u0026gt; 2 0.00 0.00 65.37 ## 627 599000 \u0026lt;none\u0026gt; 2 0.00 0.00 65.37 ## 628 600000 \u0026lt;none\u0026gt; 1585 0.85 3.92 69.29 ## 629 600005 \u0026lt;none\u0026gt; 1 0.00 0.00 69.30 ## 630 600048 \u0026lt;none\u0026gt; 1 0.00 0.00 69.30 ## 631 601000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.30 ## 632 603000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.30 ## 633 604000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.31 ## 634 606000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.31 ## 635 607000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.31 ## 636 608000 \u0026lt;none\u0026gt; 2 0.00 0.00 69.32 ## 637 610000 \u0026lt;none\u0026gt; 18 0.01 0.04 69.36 ## 638 612000 \u0026lt;none\u0026gt; 3 0.00 0.01 69.37 ## 639 613000 \u0026lt;none\u0026gt; 3 0.00 0.01 69.38 ## 640 614000 \u0026lt;none\u0026gt; 2 0.00 0.00 69.38 ## 641 615000 \u0026lt;none\u0026gt; 4 0.00 0.01 69.39 ## 642 616000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.39 ## 643 618000 \u0026lt;none\u0026gt; 3 0.00 0.01 69.40 ## 644 619000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.40 ## 645 620000 \u0026lt;none\u0026gt; 69 0.04 0.17 69.57 ## 646 623000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.58 ## 647 624000 \u0026lt;none\u0026gt; 3 0.00 0.01 69.58 ## 648 625000 \u0026lt;none\u0026gt; 2 0.00 0.00 69.59 ## 649 626000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.59 ## 650 628000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.59 ## 651 630000 \u0026lt;none\u0026gt; 38 0.02 0.09 69.69 ## 652 631000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.69 ## 653 632000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.69 ## 654 634000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.69 ## 655 634459 \u0026lt;none\u0026gt; 1 0.00 0.00 69.70 ## 656 635000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.70 ## 657 637000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.70 ## 658 638000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.70 ## 659 640000 \u0026lt;none\u0026gt; 31 0.02 0.08 69.78 ## 660 643000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.78 ## 661 645000 \u0026lt;none\u0026gt; 2 0.00 0.00 69.79 ## 662 647000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.79 ## 663 649000 \u0026lt;none\u0026gt; 1 0.00 0.00 69.79 ## 664 650000 \u0026lt;none\u0026gt; 459 0.25 1.14 70.93 ## 665 657000 \u0026lt;none\u0026gt; 1 0.00 0.00 70.93 ## 666 658000 \u0026lt;none\u0026gt; 1 0.00 0.00 70.93 ## 667 659000 \u0026lt;none\u0026gt; 1 0.00 0.00 70.94 ## 668 660000 \u0026lt;none\u0026gt; 23 0.01 0.06 70.99 ## 669 664761 \u0026lt;none\u0026gt; 1 0.00 0.00 71.00 ## 670 665000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.00 ## 671 666000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.00 ## 672 666666 \u0026lt;none\u0026gt; 1 0.00 0.00 71.01 ## 673 667000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.01 ## 674 668000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.01 ## 675 668800 \u0026lt;none\u0026gt; 1 0.00 0.00 71.02 ## 676 669000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.02 ## 677 670000 \u0026lt;none\u0026gt; 42 0.02 0.10 71.12 ## 678 671000 \u0026lt;none\u0026gt; 3 0.00 0.01 71.13 ## 679 672000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.14 ## 680 672196 \u0026lt;none\u0026gt; 1 0.00 0.00 71.14 ## 681 675000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.14 ## 682 676000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.15 ## 683 677000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.15 ## 684 679000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.15 ## 685 680000 \u0026lt;none\u0026gt; 71 0.04 0.18 71.33 ## 686 680458 \u0026lt;none\u0026gt; 1 0.00 0.00 71.33 ## 687 682000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.33 ## 688 683000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.34 ## 689 684000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.34 ## 690 686000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.34 ## 691 687000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.34 ## 692 688117 \u0026lt;none\u0026gt; 1 0.00 0.00 71.35 ## 693 690000 \u0026lt;none\u0026gt; 28 0.02 0.07 71.42 ## 694 691000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.42 ## 695 692000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.42 ## 696 693000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.42 ## 697 694000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.43 ## 698 694109 \u0026lt;none\u0026gt; 1 0.00 0.00 71.43 ## 699 695000 \u0026lt;none\u0026gt; 1 0.00 0.00 71.43 ## 700 697000 \u0026lt;none\u0026gt; 2 0.00 0.00 71.44 ## 701 700000 \u0026lt;none\u0026gt; 1227 0.66 3.04 74.47 ## 702 700050 \u0026lt;none\u0026gt; 1 0.00 0.00 74.47 ## 703 702000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.48 ## 704 703000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.48 ## 705 708000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.48 ## 706 709000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.48 ## 707 710000 \u0026lt;none\u0026gt; 7 0.00 0.02 74.50 ## 708 711000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.50 ## 709 713000 \u0026lt;none\u0026gt; 3 0.00 0.01 74.51 ## 710 714000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.51 ## 711 715000 \u0026lt;none\u0026gt; 6 0.00 0.01 74.53 ## 712 718000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.53 ## 713 718508 \u0026lt;none\u0026gt; 1 0.00 0.00 74.53 ## 714 720000 \u0026lt;none\u0026gt; 76 0.04 0.19 74.72 ## 715 721000 \u0026lt;none\u0026gt; 2 0.00 0.00 74.73 ## 716 725000 \u0026lt;none\u0026gt; 4 0.00 0.01 74.74 ## 717 730000 \u0026lt;none\u0026gt; 32 0.02 0.08 74.82 ## 718 733000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.82 ## 719 734000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.82 ## 720 735000 \u0026lt;none\u0026gt; 2 0.00 0.00 74.83 ## 721 737000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.83 ## 722 738000 \u0026lt;none\u0026gt; 2 0.00 0.00 74.83 ## 723 739000 \u0026lt;none\u0026gt; 2 0.00 0.00 74.84 ## 724 740000 \u0026lt;none\u0026gt; 22 0.01 0.05 74.89 ## 725 742184 \u0026lt;none\u0026gt; 1 0.00 0.00 74.89 ## 726 743000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.90 ## 727 743831 \u0026lt;none\u0026gt; 1 0.00 0.00 74.90 ## 728 745000 \u0026lt;none\u0026gt; 2 0.00 0.00 74.90 ## 729 746000 \u0026lt;none\u0026gt; 2 0.00 0.00 74.91 ## 730 747000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.91 ## 731 748000 \u0026lt;none\u0026gt; 1 0.00 0.00 74.91 ## 732 750000 \u0026lt;none\u0026gt; 350 0.19 0.87 75.78 ## 733 752000 \u0026lt;none\u0026gt; 1 0.00 0.00 75.78 ## 734 754000 \u0026lt;none\u0026gt; 1 0.00 0.00 75.79 ## 735 756804 \u0026lt;none\u0026gt; 1 0.00 0.00 75.79 ## 736 759000 \u0026lt;none\u0026gt; 1 0.00 0.00 75.79 ## 737 760000 \u0026lt;none\u0026gt; 26 0.01 0.06 75.85 ## 738 763000 \u0026lt;none\u0026gt; 2 0.00 0.00 75.86 ## 739 768000 \u0026lt;none\u0026gt; 1 0.00 0.00 75.86 ## 740 769000 \u0026lt;none\u0026gt; 2 0.00 0.00 75.87 ## 741 770000 \u0026lt;none\u0026gt; 22 0.01 0.05 75.92 ## 742 774000 \u0026lt;none\u0026gt; 1 0.00 0.00 75.92 ## 743 775000 \u0026lt;none\u0026gt; 1 0.00 0.00 75.93 ## 744 776000 \u0026lt;none\u0026gt; 2 0.00 0.00 75.93 ## 745 780000 \u0026lt;none\u0026gt; 58 0.03 0.14 76.08 ## 746 782032 \u0026lt;none\u0026gt; 1 0.00 0.00 76.08 ## 747 785000 \u0026lt;none\u0026gt; 1 0.00 0.00 76.08 ## 748 787000 \u0026lt;none\u0026gt; 1 0.00 0.00 76.08 ## 749 788000 \u0026lt;none\u0026gt; 2 0.00 0.00 76.09 ## 750 790000 \u0026lt;none\u0026gt; 24 0.01 0.06 76.15 ## 751 795000 \u0026lt;none\u0026gt; 1 0.00 0.00 76.15 ## 752 797000 \u0026lt;none\u0026gt; 1 0.00 0.00 76.15 ## 753 798000 \u0026lt;none\u0026gt; 2 0.00 0.00 76.16 ## 754 799000 \u0026lt;none\u0026gt; 1 0.00 0.00 76.16 ## 755 800000 \u0026lt;none\u0026gt; 1250 0.67 3.09 79.25 ## 756 803000 \u0026lt;none\u0026gt; 2 0.00 0.00 79.26 ## 757 805000 \u0026lt;none\u0026gt; 2 0.00 0.00 79.26 ## 758 808698 \u0026lt;none\u0026gt; 1 0.00 0.00 79.26 ## 759 809000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.27 ## 760 810000 \u0026lt;none\u0026gt; 3 0.00 0.01 79.27 ## 761 812000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.28 ## 762 814000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.28 ## 763 818000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.28 ## 764 820000 \u0026lt;none\u0026gt; 35 0.02 0.09 79.37 ## 765 821000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.37 ## 766 822000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.37 ## 767 823000 \u0026lt;none\u0026gt; 2 0.00 0.00 79.38 ## 768 824000 \u0026lt;none\u0026gt; 2 0.00 0.00 79.38 ## 769 825000 \u0026lt;none\u0026gt; 3 0.00 0.01 79.39 ## 770 827000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.39 ## 771 828000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.40 ## 772 829000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.40 ## 773 830000 \u0026lt;none\u0026gt; 34 0.02 0.08 79.48 ## 774 832000 \u0026lt;none\u0026gt; 2 0.00 0.00 79.49 ## 775 832405 \u0026lt;none\u0026gt; 1 0.00 0.00 79.49 ## 776 834000 \u0026lt;none\u0026gt; 2 0.00 0.00 79.49 ## 777 835000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.50 ## 778 838000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.50 ## 779 840000 \u0026lt;none\u0026gt; 13 0.01 0.03 79.53 ## 780 845000 \u0026lt;none\u0026gt; 3 0.00 0.01 79.54 ## 781 847000 \u0026lt;none\u0026gt; 1 0.00 0.00 79.54 ## 782 850000 \u0026lt;none\u0026gt; 254 0.14 0.63 80.17 ## 783 852000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.17 ## 784 853000 \u0026lt;none\u0026gt; 2 0.00 0.00 80.18 ## 785 854000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.18 ## 786 858463 \u0026lt;none\u0026gt; 1 0.00 0.00 80.18 ## 787 859000 \u0026lt;none\u0026gt; 3 0.00 0.01 80.19 ## 788 860000 \u0026lt;none\u0026gt; 24 0.01 0.06 80.25 ## 789 861000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.25 ## 790 863000 \u0026lt;none\u0026gt; 2 0.00 0.00 80.26 ## 791 865000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.26 ## 792 869000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.26 ## 793 870000 \u0026lt;none\u0026gt; 15 0.01 0.04 80.30 ## 794 871000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.30 ## 795 873000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.30 ## 796 874481 \u0026lt;none\u0026gt; 1 0.00 0.00 80.31 ## 797 876000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.31 ## 798 879000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.31 ## 799 880000 \u0026lt;none\u0026gt; 15 0.01 0.04 80.35 ## 800 884000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.35 ## 801 885000 \u0026lt;none\u0026gt; 3 0.00 0.01 80.36 ## 802 886000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.36 ## 803 890000 \u0026lt;none\u0026gt; 28 0.02 0.07 80.43 ## 804 892000 \u0026lt;none\u0026gt; 3 0.00 0.01 80.44 ## 805 894805 \u0026lt;none\u0026gt; 1 0.00 0.00 80.44 ## 806 899000 \u0026lt;none\u0026gt; 1 0.00 0.00 80.44 ## 807 900000 \u0026lt;none\u0026gt; 693 0.37 1.71 82.16 ## 808 900005 \u0026lt;none\u0026gt; 1 0.00 0.00 82.16 ## 809 902000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.16 ## 810 903000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.16 ## 811 905000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.17 ## 812 907000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.17 ## 813 910000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.17 ## 814 915000 \u0026lt;none\u0026gt; 6 0.00 0.01 82.19 ## 815 916000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.19 ## 816 917000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.19 ## 817 919000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.20 ## 818 920000 \u0026lt;none\u0026gt; 34 0.02 0.08 82.28 ## 819 923000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.28 ## 820 924000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.29 ## 821 925000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.29 ## 822 930000 \u0026lt;none\u0026gt; 17 0.01 0.04 82.33 ## 823 932000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.33 ## 824 934000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.34 ## 825 935000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.34 ## 826 936000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.34 ## 827 937000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.35 ## 828 938000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.35 ## 829 940000 \u0026lt;none\u0026gt; 20 0.01 0.05 82.40 ## 830 944000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.40 ## 831 945000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.41 ## 832 948000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.41 ## 833 949000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.41 ## 834 950000 \u0026lt;none\u0026gt; 112 0.06 0.28 82.69 ## 835 952000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.69 ## 836 953000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.69 ## 837 956000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.70 ## 838 960000 \u0026lt;none\u0026gt; 16 0.01 0.04 82.74 ## 839 962000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.74 ## 840 963000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.74 ## 841 964000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.74 ## 842 965000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.75 ## 843 968000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.75 ## 844 969000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.75 ## 845 970000 \u0026lt;none\u0026gt; 17 0.01 0.04 82.79 ## 846 971000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.80 ## 847 973000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.80 ## 848 976641 \u0026lt;none\u0026gt; 1 0.00 0.00 82.80 ## 849 978000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.80 ## 850 980000 \u0026lt;none\u0026gt; 44 0.02 0.11 82.91 ## 851 980777 \u0026lt;none\u0026gt; 1 0.00 0.00 82.92 ## 852 983000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.92 ## 853 985000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.92 ## 854 990000 \u0026lt;none\u0026gt; 7 0.00 0.02 82.94 ## 855 992000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.94 ## 856 993000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.95 ## 857 995000 \u0026lt;none\u0026gt; 4 0.00 0.01 82.96 ## 858 996000 \u0026lt;none\u0026gt; 2 0.00 0.00 82.96 ## 859 998000 \u0026lt;none\u0026gt; 3 0.00 0.01 82.97 ## 860 999000 \u0026lt;none\u0026gt; 1 0.00 0.00 82.97 ## 861 1000000 \u0026lt;none\u0026gt; 1252 0.68 3.10 86.07 ## 862 1000050 \u0026lt;none\u0026gt; 3 0.00 0.01 86.08 ## 863 1000100 \u0026lt;none\u0026gt; 2 0.00 0.00 86.08 ## 864 1000500 \u0026lt;none\u0026gt; 1 0.00 0.00 86.08 ## 865 1003000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.09 ## 866 1005000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.09 ## 867 1008000 \u0026lt;none\u0026gt; 3 0.00 0.01 86.10 ## 868 1009000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.10 ## 869 1010000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.10 ## 870 1012000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.11 ## 871 1014000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.11 ## 872 1017000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.11 ## 873 1020000 \u0026lt;none\u0026gt; 8 0.00 0.02 86.13 ## 874 1022000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.13 ## 875 1024000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.14 ## 876 1025000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.14 ## 877 1027000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.15 ## 878 1028000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.15 ## 879 1029000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.15 ## 880 1030000 \u0026lt;none\u0026gt; 4 0.00 0.01 86.16 ## 881 1036000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.17 ## 882 1039000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.17 ## 883 1040000 \u0026lt;none\u0026gt; 5 0.00 0.01 86.18 ## 884 1046000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.18 ## 885 1048000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.19 ## 886 1049000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.19 ## 887 1050000 \u0026lt;none\u0026gt; 33 0.02 0.08 86.27 ## 888 1056000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.28 ## 889 1060000 \u0026lt;none\u0026gt; 8 0.00 0.02 86.30 ## 890 1070000 \u0026lt;none\u0026gt; 5 0.00 0.01 86.31 ## 891 1072000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.31 ## 892 1080000 \u0026lt;none\u0026gt; 12 0.01 0.03 86.34 ## 893 1082000 \u0026lt;none\u0026gt; 2 0.00 0.00 86.35 ## 894 1083000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.35 ## 895 1085000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.35 ## 896 1089613 \u0026lt;none\u0026gt; 1 0.00 0.00 86.36 ## 897 1090000 \u0026lt;none\u0026gt; 4 0.00 0.01 86.36 ## 898 1092000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.37 ## 899 1094000 \u0026lt;none\u0026gt; 1 0.00 0.00 86.37 ## 900 1100000 \u0026lt;none\u0026gt; 346 0.19 0.86 87.23 ## 901 1102000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.23 ## 902 1110000 \u0026lt;none\u0026gt; 3 0.00 0.01 87.24 ## 903 1120000 \u0026lt;none\u0026gt; 8 0.00 0.02 87.26 ## 904 1123000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.26 ## 905 1125378 \u0026lt;none\u0026gt; 1 0.00 0.00 87.26 ## 906 1130000 \u0026lt;none\u0026gt; 7 0.00 0.02 87.28 ## 907 1133000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.28 ## 908 1138000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.28 ## 909 1139000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.29 ## 910 1140000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.29 ## 911 1143000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.29 ## 912 1148000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.29 ## 913 1150000 \u0026lt;none\u0026gt; 30 0.02 0.07 87.37 ## 914 1155000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.37 ## 915 1160000 \u0026lt;none\u0026gt; 7 0.00 0.02 87.39 ## 916 1160250 \u0026lt;none\u0026gt; 1 0.00 0.00 87.39 ## 917 1163000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.39 ## 918 1169000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.39 ## 919 1170000 \u0026lt;none\u0026gt; 4 0.00 0.01 87.40 ## 920 1176000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.41 ## 921 1180000 \u0026lt;none\u0026gt; 7 0.00 0.02 87.42 ## 922 1185000 \u0026lt;none\u0026gt; 2 0.00 0.00 87.43 ## 923 1190000 \u0026lt;none\u0026gt; 5 0.00 0.01 87.44 ## 924 1197000 \u0026lt;none\u0026gt; 1 0.00 0.00 87.44 ## 925 1200000 \u0026lt;none\u0026gt; 737 0.40 1.82 89.27 ## 926 1220000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.27 ## 927 1230000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.27 ## 928 1238000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.27 ## 929 1240000 \u0026lt;none\u0026gt; 4 0.00 0.01 89.28 ## 930 1242000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.29 ## 931 1244273 \u0026lt;none\u0026gt; 1 0.00 0.00 89.29 ## 932 1250000 \u0026lt;none\u0026gt; 31 0.02 0.08 89.37 ## 933 1253000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.37 ## 934 1258000 \u0026lt;none\u0026gt; 2 0.00 0.00 89.37 ## 935 1260000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.38 ## 936 1268000 \u0026lt;none\u0026gt; 2 0.00 0.00 89.38 ## 937 1270000 \u0026lt;none\u0026gt; 3 0.00 0.01 89.39 ## 938 1280000 \u0026lt;none\u0026gt; 5 0.00 0.01 89.40 ## 939 1287275 \u0026lt;none\u0026gt; 1 0.00 0.00 89.40 ## 940 1288000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.41 ## 941 1290000 \u0026lt;none\u0026gt; 3 0.00 0.01 89.41 ## 942 1298000 \u0026lt;none\u0026gt; 1 0.00 0.00 89.42 ## 943 1300000 \u0026lt;none\u0026gt; 374 0.20 0.93 90.34 ## 944 1304144 \u0026lt;none\u0026gt; 1 0.00 0.00 90.34 ## 945 1307000 \u0026lt;none\u0026gt; 2 0.00 0.00 90.35 ## 946 1313354 \u0026lt;none\u0026gt; 1 0.00 0.00 90.35 ## 947 1320000 \u0026lt;none\u0026gt; 3 0.00 0.01 90.36 ## 948 1330000 \u0026lt;none\u0026gt; 2 0.00 0.00 90.36 ## 949 1333000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.37 ## 950 1338182 \u0026lt;none\u0026gt; 1 0.00 0.00 90.37 ## 951 1340000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.37 ## 952 1350000 \u0026lt;none\u0026gt; 50 0.03 0.12 90.49 ## 953 1360000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.50 ## 954 1370000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.50 ## 955 1373000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.50 ## 956 1380000 \u0026lt;none\u0026gt; 3 0.00 0.01 90.51 ## 957 1386000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.51 ## 958 1390000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.51 ## 959 1395000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.52 ## 960 1397000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.52 ## 961 1399000 \u0026lt;none\u0026gt; 1 0.00 0.00 90.52 ## 962 1400000 \u0026lt;none\u0026gt; 274 0.15 0.68 91.20 ## 963 1420000 \u0026lt;none\u0026gt; 2 0.00 0.00 91.20 ## 964 1423000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.21 ## 965 1425000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.21 ## 966 1437000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.21 ## 967 1450000 \u0026lt;none\u0026gt; 16 0.01 0.04 91.25 ## 968 1458000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.25 ## 969 1460000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.26 ## 970 1476000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.26 ## 971 1480000 \u0026lt;none\u0026gt; 4 0.00 0.01 91.27 ## 972 1488000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.27 ## 973 1490000 \u0026lt;none\u0026gt; 1 0.00 0.00 91.27 ## 974 1500000 \u0026lt;none\u0026gt; 768 0.41 1.90 93.17 ## 975 1514000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.18 ## 976 1520000 \u0026lt;none\u0026gt; 2 0.00 0.00 93.18 ## 977 1525000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.18 ## 978 1526000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.19 ## 979 1535000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.19 ## 980 1550000 \u0026lt;none\u0026gt; 6 0.00 0.01 93.20 ## 981 1556000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.21 ## 982 1560000 \u0026lt;none\u0026gt; 4 0.00 0.01 93.22 ## 983 1560800 \u0026lt;none\u0026gt; 1 0.00 0.00 93.22 ## 984 1570000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.22 ## 985 1578000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.22 ## 986 1580000 \u0026lt;none\u0026gt; 3 0.00 0.01 93.23 ## 987 1586000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.23 ## 988 1590000 \u0026lt;none\u0026gt; 3 0.00 0.01 93.24 ## 989 1595000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.24 ## 990 1600000 \u0026lt;none\u0026gt; 220 0.12 0.54 93.79 ## 991 1608000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.79 ## 992 1620000 \u0026lt;none\u0026gt; 2 0.00 0.00 93.79 ## 993 1630000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.80 ## 994 1650000 \u0026lt;none\u0026gt; 9 0.00 0.02 93.82 ## 995 1657000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.82 ## 996 1660000 \u0026lt;none\u0026gt; 1 0.00 0.00 93.82 ## 997 1670000 \u0026lt;none\u0026gt; 2 0.00 0.00 93.83 ## 998 1690000 \u0026lt;none\u0026gt; 2 0.00 0.00 93.83 ## 999 1700000 \u0026lt;none\u0026gt; 166 0.09 0.41 94.25 ## 1000 1720000 \u0026lt;none\u0026gt; 1 0.00 0.00 94.25 ## 1001 1750000 \u0026lt;none\u0026gt; 14 0.01 0.03 94.28 ## 1002 1758000 \u0026lt;none\u0026gt; 1 0.00 0.00 94.28 ## 1003 1770000 \u0026lt;none\u0026gt; 2 0.00 0.00 94.29 ## 1004 1780000 \u0026lt;none\u0026gt; 3 0.00 0.01 94.30 ## 1005 1785000 \u0026lt;none\u0026gt; 1 0.00 0.00 94.30 ## 1006 1790000 \u0026lt;none\u0026gt; 1 0.00 0.00 94.30 ## 1007 1799000 \u0026lt;none\u0026gt; 1 0.00 0.00 94.30 ## 1008 1800000 \u0026lt;none\u0026gt; 330 0.18 0.82 95.12 ## 1009 1819437 \u0026lt;none\u0026gt; 1 0.00 0.00 95.12 ## 1010 1825000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.13 ## 1011 1850000 \u0026lt;none\u0026gt; 9 0.00 0.02 95.15 ## 1012 1860000 \u0026lt;none\u0026gt; 2 0.00 0.00 95.15 ## 1013 1870000 \u0026lt;none\u0026gt; 2 0.00 0.00 95.16 ## 1014 1876000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.16 ## 1015 1890000 \u0026lt;none\u0026gt; 2 0.00 0.00 95.17 ## 1016 1891781 \u0026lt;none\u0026gt; 1 0.00 0.00 95.17 ## 1017 1894000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.17 ## 1018 1900000 \u0026lt;none\u0026gt; 85 0.05 0.21 95.38 ## 1019 1920000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.38 ## 1020 1940000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.39 ## 1021 1950000 \u0026lt;none\u0026gt; 5 0.00 0.01 95.40 ## 1022 1980000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.40 ## 1023 1990000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.40 ## 1024 1995000 \u0026lt;none\u0026gt; 1 0.00 0.00 95.41 ## 1025 2000000 \u0026lt;none\u0026gt; 456 0.25 1.13 96.53 ## 1026 2000008 \u0026lt;none\u0026gt; 1 0.00 0.00 96.54 ## 1027 2030000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.54 ## 1028 2050000 \u0026lt;none\u0026gt; 4 0.00 0.01 96.55 ## 1029 2060000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.55 ## 1030 2072000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.55 ## 1031 2080000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.56 ## 1032 2088808 \u0026lt;none\u0026gt; 1 0.00 0.00 96.56 ## 1033 2090000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.56 ## 1034 2100000 \u0026lt;none\u0026gt; 65 0.04 0.16 96.72 ## 1035 2107000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.72 ## 1036 2150000 \u0026lt;none\u0026gt; 2 0.00 0.00 96.73 ## 1037 2170000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.73 ## 1038 2180000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.73 ## 1039 2190000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.74 ## 1040 2200000 \u0026lt;none\u0026gt; 73 0.04 0.18 96.92 ## 1041 2220000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.92 ## 1042 2250000 \u0026lt;none\u0026gt; 4 0.00 0.01 96.93 ## 1043 2290000 \u0026lt;none\u0026gt; 1 0.00 0.00 96.93 ## 1044 2300000 \u0026lt;none\u0026gt; 77 0.04 0.19 97.12 ## 1045 2320000 \u0026lt;none\u0026gt; 1 0.00 0.00 97.13 ## 1046 2350000 \u0026lt;none\u0026gt; 3 0.00 0.01 97.13 ## 1047 2400000 \u0026lt;none\u0026gt; 51 0.03 0.13 97.26 ## 1048 2410000 \u0026lt;none\u0026gt; 1 0.00 0.00 97.26 ## 1049 2460000 \u0026lt;none\u0026gt; 1 0.00 0.00 97.26 ## 1050 2470000 \u0026lt;none\u0026gt; 2 0.00 0.00 97.27 ## 1051 2500000 \u0026lt;none\u0026gt; 206 0.11 0.51 97.78 ## 1052 2550000 \u0026lt;none\u0026gt; 1 0.00 0.00 97.78 ## 1053 2600000 \u0026lt;none\u0026gt; 32 0.02 0.08 97.86 ## 1054 2700000 \u0026lt;none\u0026gt; 36 0.02 0.09 97.95 ## 1055 2750000 \u0026lt;none\u0026gt; 2 0.00 0.00 97.95 ## 1056 2770000 \u0026lt;none\u0026gt; 1 0.00 0.00 97.96 ## 1057 2800000 \u0026lt;none\u0026gt; 51 0.03 0.13 98.08 ## 1058 2866000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.09 ## 1059 2900000 \u0026lt;none\u0026gt; 20 0.01 0.05 98.13 ## 1060 2930000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.14 ## 1061 2983550 \u0026lt;none\u0026gt; 1 0.00 0.00 98.14 ## 1062 3000000 \u0026lt;none\u0026gt; 197 0.11 0.49 98.63 ## 1063 3000200 \u0026lt;none\u0026gt; 1 0.00 0.00 98.63 ## 1064 3050000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.63 ## 1065 3060000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.63 ## 1066 3100000 \u0026lt;none\u0026gt; 7 0.00 0.02 98.65 ## 1067 3196000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.65 ## 1068 3200000 \u0026lt;none\u0026gt; 31 0.02 0.08 98.73 ## 1069 3280000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.73 ## 1070 3300000 \u0026lt;none\u0026gt; 8 0.00 0.02 98.75 ## 1071 3400000 \u0026lt;none\u0026gt; 11 0.01 0.03 98.78 ## 1072 3412000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.78 ## 1073 3459000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.79 ## 1074 3460000 \u0026lt;none\u0026gt; 1 0.00 0.00 98.79 ## 1075 3500000 \u0026lt;none\u0026gt; 99 0.05 0.24 99.03 ## 1076 3600000 \u0026lt;none\u0026gt; 12 0.01 0.03 99.06 ## 1077 3670000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.06 ## 1078 3677137 \u0026lt;none\u0026gt; 1 0.00 0.00 99.07 ## 1079 3700000 \u0026lt;none\u0026gt; 9 0.00 0.02 99.09 ## 1080 3800000 \u0026lt;none\u0026gt; 20 0.01 0.05 99.14 ## 1081 3900000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.14 ## 1082 4000000 \u0026lt;none\u0026gt; 99 0.05 0.24 99.39 ## 1083 4100000 \u0026lt;none\u0026gt; 5 0.00 0.01 99.40 ## 1084 4200000 \u0026lt;none\u0026gt; 11 0.01 0.03 99.43 ## 1085 4300000 \u0026lt;none\u0026gt; 2 0.00 0.00 99.43 ## 1086 4400000 \u0026lt;none\u0026gt; 2 0.00 0.00 99.44 ## 1087 4500000 \u0026lt;none\u0026gt; 34 0.02 0.08 99.52 ## 1088 4600000 \u0026lt;none\u0026gt; 8 0.00 0.02 99.54 ## 1089 4700000 \u0026lt;none\u0026gt; 4 0.00 0.01 99.55 ## 1090 4800000 \u0026lt;none\u0026gt; 5 0.00 0.01 99.56 ## 1091 5000000 \u0026lt;none\u0026gt; 65 0.04 0.16 99.72 ## 1092 5100000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.73 ## 1093 5200000 \u0026lt;none\u0026gt; 4 0.00 0.01 99.74 ## 1094 5300000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.74 ## 1095 5500000 \u0026lt;none\u0026gt; 12 0.01 0.03 99.77 ## 1096 5600000 \u0026lt;none\u0026gt; 3 0.00 0.01 99.77 ## 1097 5700000 \u0026lt;none\u0026gt; 4 0.00 0.01 99.78 ## 1098 5800000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.79 ## 1099 5900000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.79 ## 1100 6000000 \u0026lt;none\u0026gt; 41 0.02 0.10 99.89 ## 1101 6100000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.89 ## 1102 6500000 \u0026lt;none\u0026gt; 2 0.00 0.00 99.90 ## 1103 6800000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.90 ## 1104 7000000 \u0026lt;none\u0026gt; 11 0.01 0.03 99.93 ## 1105 7800000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.93 ## 1106 8000000 \u0026lt;none\u0026gt; 8 0.00 0.02 99.95 ## 1107 9000000 \u0026lt;none\u0026gt; 3 0.00 0.01 99.96 ## 1108 9500000 \u0026lt;none\u0026gt; 2 0.00 0.00 99.96 ## 1109 9800000 \u0026lt;none\u0026gt; 1 0.00 0.00 99.97 ## 1110 10000000 \u0026lt;none\u0026gt; 5 0.00 0.01 99.98 ## 1111 12000000 \u0026lt;none\u0026gt; 4 0.00 0.01 99.99 ## 1112 15000000 \u0026lt;none\u0026gt; 3 0.00 0.01 100.00 ## 1113 17700000 \u0026lt;none\u0026gt; 1 0.00 0.00 100.00 ## 1114 25000000 \u0026lt;none\u0026gt; 1 0.00 0.00 100.00 ## 1115 NA \u0026lt;NA\u0026gt; 145019 78.20 NA NA Para las variables numeric, en cambio, podemos utilizar la función descr() del mismo paquete, que nos indicará las medidas de tendencia central, dispersión y posición de la variable.\nSobre las clases de las variables Un punto que ya se hace evidente de empezar a trabajar son como reconocer y trabajar los distintos tipos de variables en R. Si bien al inicio no es tan intuitivo ¡no te preocupes! Cuando uno avanza en el aprendizaje del programa de a poco estos conceptos se asimilan más.\nPartamos por lo básico que ustedes ya saben de sus cursos de estadística: los niveles de medición: sabemos que el nivel de medición de la variable género es nominal y, por lo tanto, sólo nos permite clasificar a unas personas u otras. Por ello, no podemos, por ejemplo, calcular el promedio del género de una muestra. Por otra parte, la variable edad presenta un nivel de medición de razón, por lo cual sí podemos realizar con ella operaciones aritméticas y, en consecuencia, es posible, por ejemplo, calcular el promedio de edad de la muestra con que estamos trabajando.\nLa función class(), incluido en el paquete base de R, nos permite saber la clase de una variable determinada con la cual deseemos trabajar. También nos permite conocer la clase de otros objetos en R, pero no es algo que utilizaremos (aún).\na) numeric Una variable puede presentar la clase numeric, lo cual significa que sus datos sólo incorporan números. Así, es posible, por ejemplo, calcular el promedio para este tipo de variables. En Casen en Pandemia 2020, una de las variables numeric incluidas es Ingreso total per cápita del hogar corregido (codificada como ypchtotcor).\nclass(datos$ypchtotcor) ## [1] \u0026#34;numeric\u0026#34; b) character Una variable de clase character puede incluir tanto números como letras. Si bien con estas variables no es posible calcular, por ejemplo, promedios, sí podemos calcular frecuencias (absolutas y relativas), entre otros.\nc) Logic Una variable de clase Logic incluye valores lógicos, como TRUE (T) o FALSE (F). Los valores nulos (NA) también son valores lógicos. Este tipo de variables nos pueden servir a la hora de crear funciones, lo cual no se revisará en este práctico.\nd) factor Una variable de clase factor puede incluir tanto números como letras. Es una especie de variable character, pero recodificada de modo que los posibles valores sean etiquetados. Las bases de datos no suelen incluirlas a priori, por lo que lo usual es que debamos realizar un proceso de recodificación para poder trabajar una variable como factor. ¡Esto último será tratado en el siguiente práctico!\nEn resumen:    Clase Tipo de variable     numeric Cuantitativa   character Categórica   Logic Lógica (TRUE, FALSE, NA)   factor Categórica con niveles y etiquetas    3.1. Selección de variables Luego de revisar el nivel de medición de las variables y reconociendo la distribución de los datos que tenemos, es evidente que lo mejor es solamente trabajar con un subset de una base de datos con las variables que queremos transformar.\nPara asegurarnos que variables queremos utilizar deberíamos ir al libro de códigos, pero también podemos elegir y decidir de manera más certera qué variables incorporar a partir de la revisión con find_var(). En esta sección no profundizaremos distintas formas de seleccionar datos. Solo les mostraremos de manera simple como seleccionar dos variables de nuestro interés:\n ypchtotcor: Ingresos del hogar v13: \u0026ldquo;Su hogar, ¿bajo qué situación ocupa la vivienda?\u0026rdquo; v29: \u0026ldquo;¿Cuántos dormitorios de uso exclusivo ocupa su hogar en esta vivienda?\u0026rdquo; p6: \u0026ldquo;¿Cuántas personas viven habitualmente en esta vivienda?\u0026rdquo;  Crearemos una base procesada llamado datos_proc, que sólo incluirá estas tres variables.\nComo podemos ver en el ambiente (Environment), se creó un nuevo objeto llamado datos_proc, que tiene la misma cantidad de observaciones (filas) que datos, pero que sólo incluye 4 de las 650 variables iniciales.\n4. Limpieza de datos Los datos con los que trabajamos suelen incorporar valores nulos (NA), casos perdidos ingresados como valores de clase Logic. Estos valores no nos entregan información útil para nuestros análisis, y pueden generar problemas al momento de, por ejemplo, calcular medidas de tendencia central, u otros procedimientos estadísticos.\nHay diversas maneras de trabajar los valores nulos, tales como realizar procesos de imputación, entre otros. Sin embargo, la más sencilla consiste en eliminar los valores nulos que se encuentran presentes en nuestros datos (aunque no recomendable)\nPara ello, lo primero es identificar valores nulos en el set de datos en general, o en alguna variable en específico. Para ello, empleamos la función is.na().\nis.na(datos_proc) #Revisamos si hay casos perdidos en el total del set de datos  is.na(datos_proc$ypchtotcor) #Revisamos si hay casos perdidos en Ingresos per cápita Sin embargo, esto no resulta muy práctico para el análisis. Es por ello que emplearemos la función sum() para contar cuántos valores nulos hay en el set de datos en general, o en alguna variable en particular.\nsum(is.na(datos_proc)) #Contamos los valores nulos del set de datos en general, que suman un total de 180.148 ## [1] 180148 sum(is.na(datos_proc$ypchtotcor)) #Contaremos los valores nulos de la variable Ingresos per cápita, que alcanzan un total de 98 ## [1] 98 Una vez identificamos los valores nulos, podemos proceder a eliminarlos del set de datos. El comando na.omit() eliminará todas las filas que presenten casos perdidos.\nnrow(datos_proc) ## [1] 185437 datos_proc \u0026lt;- na.omit(datos_proc) #Eliminamos las filas con casos perdidos nrow(datos_proc) #La nueva base de datos tiene 5.387 filas y 4 columnas ## [1] 5387 ¡La próxima sesión aprenderemos a recodificarlas!\n5. Guardar y exportar datos Por último, una vez que hayamos procesado los datos, es importante que los guardemos en una nueva base de datos procesada, para no tener que llevar a cabo el procesamiento otra vez.\nAl igual que en el paso de carga de datos, y a partir del flujo de input-R-outputpropuesto, es esperable que estos datos procesados (o intermedios) los guardemos en output/data para que se entienda que provienen de un proceso de manipulación personal\nEl archivo se puede guardar en distintos formatos:\na) .RData y .rds Guardar un objeto a un archivo\nsaveRDS(objecto, file = \u0026ldquo;datos.rds\u0026rdquo;)\nGuardar un objeto a un archivo save(objeto1, objeto2, file = \u0026ldquo;datos.RData)\n\rEs lo recomendable, si el resto del análisis lo realizaremos en R.\nsave(datos_proc, file = \u0026#34;output/data/datos_proc.RData\u0026#34;) #Guardamos el objeto datos_proc en la ruta de trabajo actual, bajo el nombre de datos_proc.RData.  saveRDS(datos_proc, file= \u0026#34;output/data/datos_proc.rds\u0026#34;) #Guardamos el objeto datos_proc en la ruta de trabajo actual, bajo el nombre de datos_proc.rds.  b) .sav (haven) write_sav(datos_proc, \u0026#34;output/data/datos_proc.sav\u0026#34;) #Guardamos el objeto datos_proc en la ruta de trabajo actual, bajo el nombre de datos_proc.sav.  b) .dta (haven) write_dta(datos_proc, \u0026#34;output/data/datos_proc.dta\u0026#34;) #Guardamos el objeto datos_proc en la ruta de trabajo actual, bajo el nombre de datos_proc.dta.  b) .csv write.csv(datos_proc, \u0026#34;output/data/datos_proc.csv\u0026#34;) #Guardamos el objeto datos_proc en la ruta de trabajo actual, bajo el nombre de datos_proc.csv.  b) .xlsx writexl::write_xlsx(datos_proc, \u0026#34;output/data/datos_proc.xlsx\u0026#34;) #Guardamos el objeto datos_proc en la ruta de trabajo actual, bajo el nombre de datos_proc.xlsx.  Resumen ¡Eso es todo por este práctico! Aquí, aprendimos a:\n   Importar datos en diferentes formatos.    Seleccionar variables (y hacer una revisión de ciertos aspectos de estas).    Limpiar los datos, eliminando casos perdidos    Guardar y exportar los datos procesados, en distintos formatos.    Reporte de progreso ¡Recuerda rellenar tu reporte de progreso. Te llegó un código único a tu correo electrónico. Mediante él debes acceder para actualizar tu estado de avance del curso.\n","date":1628812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628812800,"objectID":"1acd8542f65cf3cff8f2eec98b604361","permalink":"/example/02-practico/","publishdate":"2021-08-13T00:00:00Z","relpermalink":"/example/02-practico/","section":"example","summary":"0. Objetivo del práctico Este práctico tiene por objeto introducir a las y los estudiantes del curso en herramientas que les permitan a) importar bases de datos en diversos formatos; b)seleccionar variables de las bases de datos importadas; c) limpiar los datos, eliminando las filas con casos perdidos; y d) exportar bases de datos procesadas.","tags":null,"title":"Importar, explorar y limpiar datos","type":"docs"},{"authors":null,"categories":null,"content":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el análisis de los datos a través del uso de regresiones lineales, para esto usaremos datos previamente procesados de la base de datos a utilizar. Recordemos que estamos en el proceso de análisis\nEntonces, en esta práctica aprenderemos trabajar las regresiones lineales, también trabajaremos los predictores categóricos y finalmente veremos como representarlos mediante gráficos y tablas.\n1. Recursos del práctico En este práctico utilizamos los datos procesados de la Encuesta Suplementaria de Ingresos (ESI) 2020.Recuerden siempre consultar el libro códigos antes de trabajar datos.\n- [\u0026lt;i class=\u0026#34;fas fa-file-archive\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; `06-bloque.zip`](https://github.com/learn-R/09-class/raw/main/06-bloque.zip) 2. Librerías a utilizar Cargaremos los paquetes con pacman revisar práctico 3 y utilizaremos sjPlot para la creación de tablas, tidyverse de este universo de paquetes utilizaremos dplyr (para la manipulación de datos) y magrittr (para utilizar el operador pipe) y finalmente la libreria car para la recodificación de datos. Recuerden que pueden ver más de las funciones de cada paquetes en la sección de recursos\npacman::p_load(sjPlot, tidyverse, magrittr, car) 3. Importar datos Una vez cargado los paquetes a utilizar, debemos cargar los datos procesados.\nload(\u0026#34;output/data/datos_proc.RData\u0026#34;) Explorar datos Es relevante explorar los datos que utilizaremos, cómo están previamente procesados ¡no sabemos con que variables estamos trabajando!\nnames(datos_proc) ## [1] \u0026#34;ingresos\u0026#34; \u0026#34;educacion\u0026#34; \u0026#34;sexo\u0026#34; \u0026#34;edad\u0026#34; head(datos_proc) ## # A tibble: 6 x 4 ## ingresos educacion sexo edad ## \u0026lt;dbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl+lbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 320421. 6 [Educación técnica (Educación superior no universi~ 2 [Mujer] 29 ## 2 750000 7 [Educación universitaria] 2 [Mujer] 30 ## 3 900000 7 [Educación universitaria] 2 [Mujer] 43 ## 4 0 5 [Educación secundaria] 2 [Mujer] 15 ## 5 0 3 [Educación primaria (nivel 1)] 1 [Hombr~ 11 ## 6 0 5 [Educación secundaria] 2 [Mujer] 62 Ahora sabemos que trabajaremos con \u0026quot;ingresos\u0026quot;, \u0026quot;educacion\u0026quot;, \u0026quot;sexo\u0026quot; y \u0026quot;edad\u0026quot;. Inclusive podemos repasar lo visto en el práctico anterior y explorar nuestros datos con sjPlot::view_df()\nsjPlot::view_df(datos_proc, encoding = \u0026#34;UTF-8\u0026#34;) Data frame: datos_proc\r\rIDNameLabelValuesValue Labels\r\r\r1\ringresos\rTotal ingresos sueldos y salarios\rrange: 0.0-9312239.1\r\r\r2\reducacion\rClasificaciÃ³n Internacional de Nivel Educacional\n(CINE)\r1\n2\n3\n4\n5\n6\n7\n8\n9\n999\rNunca estudiÃ³\nEducaciÃ³n preescolar\nEducaciÃ³n primaria (nivel 1)\nEducaciÃ³n primaria (nivel 2)\nEducaciÃ³n secundaria\nEducaciÃ³n tÃ©cnica (EducaciÃ³n superior no universitaria)\nEducaciÃ³n universitaria\nPostitulos y maestrÃ­a\nDoctorado\nNivel ignorado\r\r\r3\rsexo\rSexo\r1\n2\rHombre\nMujer\r\r\r4\redad\rEdad de la persona\rrange: 0-106\r\r\rPero previo a eso podemos visualizar que hay categorías que se pueden reducir en la variable educacion, por eso haremos un breve repaso del práctico anterior\nRecodificar Como la variable educacion presenta la categoría de respuesta Nivel ignorado (casos perdidos) y casos que pueden unificarse como Educación primaria (nivel 1) y Educación primaria (nivel 2), los asignaremos como NA y unificaremos.\nPara eso el primer paso es decirle a la base que transformaremos la variable como factor\ndatos_proc$educacion \u0026lt;- as_factor(datos_proc$educacion) Luego recodificaremos la variable con la función recode del paquete car\ndatos_proc$educacion \u0026lt;- car::recode(datos_proc$educacion, recodes = c(\u0026#34;\u0026#39;Nivel ignorado\u0026#39; = NA; c(\u0026#39;Educación primaria (nivel 1)\u0026#39;, \u0026#39;Educación primaria (nivel 2)\u0026#39;) = \u0026#39;Educación primaria\u0026#39;\u0026#34;)) Finalmente visualizamos los cambios de nuestra base procesada con view_df\nData frame: datos_proc\r\rIDNameLabelValuesValue Labels\r\r\r1\ringresos\rTotal ingresos sueldos y salarios\rrange: 0.0-9312239.1\r\r\r2\reducacion\r\r\rDoctorado\nEducaciÃ³n preescolar\nEducaciÃ³n primaria\nEducaciÃ³n secundaria\nEducaciÃ³n tÃ©cnica (EducaciÃ³n superior no universitaria)\nEducaciÃ³n universitaria\nNunca estudiÃ³\nPostitulos y maestrÃ­a\r\r\r3\rsexo\rSexo\r1\n2\rHombre\nMujer\r\r\r4\redad\rEdad de la persona\rrange: 0-106\r\r\rPerfecto, podemos ver las variables que tenemos y sus categorías de respuesta, pero antes de continuar, es importante conocer los tipos de variables a usar, para eso pueden ir al mini tutorial de tipos de variables y ejemplos\n4. Modelo de regresión Previo al trabajo en R recordemos que la fórmula de la regresión lineal simple es:\n\\begin{equation}\r\\widehat{Y}=b_{0} +b_{1}X\r\\end{equation}\nMientras que en la regresión lineal múltiple es:\n\\begin{equation}\r\\widehat{Y}=b_{0} +b_{1}X +b_{2}X +b_{x}X\r\\end{equation}\nDonde\n \\(\\widehat{Y}\\) es el valor estimado/predicho de \\(Y\\) \\(b_{0}\\) es el intercepto de la recta (el valor de Y cuando las X\u0026rsquo;s son 0) \\(b_{1}\\) y \\(b_{2}\\) son los coeficientes de regresión, que nos dice cuánto aumenta Y por cada punto que aumenta X (pendiente)  Les mostramos esto porque de la misma forma se diferencian ambos procedimientos en R\nPara la regresión lineal simple se utiliza la siguiente estructura:\nobjeto \u0026lt;- lm(dependiente ~ independiente, data=datos) Mientras que para la regresión lineal múltiple, sólo se añaden más variables\nobjeto \u0026lt;- lm(dependiente ~ independiente1 + independiente 2 + independientex, data=datos) Regresión lineal simple Ahora en nuestros datos queda de la siguiente manera\nreg_1 \u0026lt;-lm((ingresos ~ edad), data = datos_proc) reg_1 ## ## Call: ## lm(formula = (ingresos ~ edad), data = datos_proc) ## ## Coefficients: ## (Intercept) edad ## 102548 1530 pero el problema es que al observar el objeto creado, no es muy presentable para informes, por eso usaremos la función tab_model de sjPlot, que tiene la siguiente estructura:\nsjPlot::tab_model(objeto_creado, show.ci= F/T, # este argumento muestra los intervalos de confianza encoding = \u0026#34;UTF-8\u0026#34;, # evita errores en caracteres file = \u0026#34;output/figures/reg1_tab.doc\u0026#34;) # guarda lo creado automáticamente Ahora en nuestros datos se vería así:\nsjPlot::tab_model(reg_1, show.ci=FALSE, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/reg1_tab.doc\u0026#34;) \r\u0026nbsp;\rTotal ingresos sueldos y\nsalarios\r\r\rPredictors\rEstimates\rp\r\r\r(Intercept)\r102548.34\r\u0026lt;0.001\r\r\rEdad de la persona\r1529.88\r\u0026lt;0.001\r\r\rObservations\r71935\r\r\rR2 / R2 adjusted\r0.007 / 0.007\r\r\rRegresión múltiple Ahora queremos incorporar las demás variables al modelo, para lo haremos de la siguiente manera\nreg_2 \u0026lt;-lm((ingresos ~ edad + sexo), data = datos_proc) sjPlot::tab_model(reg_2, show.ci=FALSE, encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/regnc_tab.doc\u0026#34;) \r\u0026nbsp;\rTotal ingresos sueldos y\nsalarios\r\r\rPredictors\rEstimates\rp\r\r\r(Intercept)\r237220.44\r\u0026lt;0.001\r\r\rEdad de la persona\r1646.83\r\u0026lt;0.001\r\r\rSexo\r\u0026#45;91039.16\r\u0026lt;0.001\r\r\rObservations\r71935\r\r\rR2 / R2 adjusted\r0.020 / 0.020\r\r\r¡Pero espera! ¡sexo no es una variable continua!\nPredictores categoricos Previo a esto hay que recordar que sexo no es un predictor continuo, y también debemos recordárselo a la base de datos (la variable educación tampoco lo es, pero ya la transformamos con as_factor)\ndatos_proc$sexo \u0026lt;- as_factor(datos_proc$sexo) Perfecto ahora si podemos añadir predictores categóricos a nuestra regresión múltiple\nreg_2 \u0026lt;-lm((ingresos ~ edad + sexo), data = datos_proc) reg_3 \u0026lt;-lm((ingresos ~ edad + sexo + educacion), data = datos_proc) Pero que pasa si queremos incluir todos los modelos creados en una sola tabla, para eso usaremos nuevamente la función tab_model de sjPlot\nsjPlot::tab_model(list(reg_1, reg_2, reg_3), # los modelos estimados show.ci=FALSE, # no mostrar intervalo de confianza (por defecto lo hace) p.style = \u0026#34;stars\u0026#34;, # asteriscos de significación estadística dv.labels = c(\u0026#34;Modelo 1\u0026#34;, \u0026#34;Modelo 2\u0026#34;, \u0026#34;Modelo 3\u0026#34;), # etiquetas de modelos o variables dep. string.pred = \u0026#34;Predictores\u0026#34;, string.est = \u0026#34;β\u0026#34;, # nombre predictores y símbolo beta en tabla encoding = \u0026#34;UTF-8\u0026#34;, file = \u0026#34;output/figures/reg_tab_all.doc\u0026#34;) \r\u0026nbsp;\rModelo 1\rModelo 2\rModelo 3\r\r\rPredictores\rÃŸ\rÃŸ\rÃŸ\r\r\r(Intercept)\r102548.34 ***\r146181.28 ***\r1774294.45 ***\r\r\rEdad de la persona\r1529.88 ***\r1646.83 ***\r1134.98 ***\r\r\rSexo: Mujer\r\r\u0026#45;91039.16 ***\r\u0026#45;94042.51 ***\r\r\reducacion: EducaciÃ³n\npreescolar\r\r\r\u0026#45;1734569.27 ***\r\r\reducacion: EducaciÃ³n\nprimaria\r\r\r\u0026#45;1732259.96 ***\r\r\reducacion: EducaciÃ³n\nsecundaria\r\r\r\u0026#45;1632080.40 ***\r\r\reducacion: EducaciÃ³n\ntÃ©cnica(EducaciÃ³n\nsuperior no\nuniversitaria)\r\r\r\u0026#45;1497544.27 ***\r\r\reducacion: EducaciÃ³n\nuniversitaria\r\r\r\u0026#45;1342780.60 ***\r\r\reducacion: Nunca estudiÃ³\r\r\r\u0026#45;1743566.17 ***\r\r\reducacion: Postitulos y\nmaestrÃ­a\r\r\r\u0026#45;641544.23 ***\r\r\rObservations\r71935\r71935\r71346\r\r\rR2 / R2 adjusted\r0.007 / 0.007\r0.020 / 0.020\r0.202 / 0.201\r\r\r* p\u0026lt;0.05\u0026nbsp;\u0026nbsp;\u0026nbsp;** p\u0026lt;0.01\u0026nbsp;\u0026nbsp;\u0026nbsp;*** p\u0026lt;0.001\r\r\rAhora podemos observar que a diferencia de la tabla anterior la variable sexo, tiene incluida la categoría de respuesta de comparación.\n5. Visualización Para visualizar o graficar los coeficientes de regresión para poder observar el impacto de cada variable en el modelo utilizaremos la función plot_model de sjPlot, su estructura es la siguiente:\nsjPlot::plot_model(objeto_creado, ci.lvl = \u0026#34;\u0026#34;, #estima el nivel de confianza  title = \u0026#34;\u0026#34;, # es el título vline.color = \u0026#34;\u0026#34;) # color de la recta vertical Esto visualizado con nuestro modelo se ve así:\nsjPlot::plot_model(reg_3, ci.lvl = c(0.95), title = \u0026#34;Estimación de predictores\u0026#34;, vline.color = \u0026#34;purple\u0026#34;) Terminamos por este práctico ¡Pero aún falta la regresión logística!\n6. Resumen En este práctico aprendimos a\n Crear y visualizar regresiones lineales Incorporar predictores categóricos Crear y visualizar regresiones múltiples  7. Recursos  sjPlot tidyverse magrittr  8. Reporte de progreso ¡Recuerda rellenar tu reporte de progreso. En tu correo electrónico está disponible el código mediante al cuál debes acceder para actualizar tu estado de avance del curso.\n","date":1628812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628812800,"objectID":"757ea7660f0f62bd23967c18561cd81b","permalink":"/example/06-practico/","publishdate":"2021-08-13T00:00:00Z","relpermalink":"/example/06-practico/","section":"example","summary":"0. Objetivo de la práctica El objetivo del práctico, es avanzar en el análisis de los datos a través del uso de regresiones lineales, para esto usaremos datos previamente procesados de la base de datos a utilizar.","tags":null,"title":"Regresiones lineales, predictores categóricos y representación gráfica","type":"docs"},{"authors":null,"categories":null,"content":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nIntroducción\r\rR enviroment\r\rR projects\r\rLibrerías para el uso de R\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ? (o shift + /) mientras estas viendo las slides, podrás ver los comandos específicos para navegar en ellas.\r\rMaterial de la clase    01-bloque.zip\n   Práctico\n   Descomprimir archivos\n  Recomendaciones    Hadley Wickham, “Data Science: How is it Different To Statistics?”\n   Tutoriales, “Learn-R”\n Instalación de softwares     Contestar reporte de registro\n  ","date":1628467200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628467200,"objectID":"24bdef858b9ebc83bb0134c283e06cf1","permalink":"/content/01-content/","publishdate":"2021-08-09T00:00:00Z","relpermalink":"/content/01-content/","section":"content","summary":"Slides  Ver las slides en una nueva ventana  Descargar las slides en PDF\nIntroducción\r\rR enviroment\r\rR projects\r\rLibrerías para el uso de R\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r¿Cómo ocupar: Si presionas ?","tags":null,"title":"Herramientas para el uso de R","type":"docs"},{"authors":null,"categories":null,"content":"This assignment will give you practice generating synthetic data and building in causal effects.\nThese two examples will be incredibly helpful:\n Generating random numbers The ultimate guide to generating synthetic data for causal inference  You\u0026rsquo;ll be doing all your R work in R Markdown. You can download a zipped file of a pre-made project here:\n  problem-set-9.zip  And as always, if you\u0026rsquo;re struggling, please talk to me. Work with classmates too (especially for this assignment!). Don\u0026rsquo;t suffer in silence!\nInstructions   If you\u0026rsquo;re using R on your own computer, download this file, unzip it, and double click on the file named problem-set-9.Rproj:  problem-set-9.zip\nYou\u0026rsquo;ll need to make sure you have these packages installed on your computer: tidyverse, broom, ggdag, and scales. If you try to load one of those packages with library(tidyverse) or library(ggdag), etc., and R gives an error that the package is missing, use the \u0026ldquo;Packages\u0026rdquo; panel in RStudio to install it.\n(Alternatively, you can open the project named \u0026ldquo;Problem Set 9\u0026rdquo; on RStudio.cloud and complete the assignment in your browser without needing to install anything. This link should take you to the project—if it doesn\u0026rsquo;t, log in and look for the project named \u0026ldquo;Problem Set 9.\u0026quot;)\n  Rename the R Markdown file named your-name_problem-set-9.Rmd to something that matches your name and open it in RStudio.\n  Complete the tasks given in the R Markdown file. You can remove any of the question text if you want.\nYou can definitely copy, paste, and adapt from other code in the document or the example guide—don\u0026rsquo;t try to write everything from scratch!.\nYou\u0026rsquo;ll need to insert your own code chunks. Rather than typing them by hand (that\u0026rsquo;s tedious!), use the \u0026ldquo;Insert\u0026rdquo; button at the top of the editing window, or press ⌥ + ⌘ + I on macOS, or ctrl + alt + I on Windows.\nRemember that you can run an entire chunk by clicking on the green play arrow in the top right corner of the chunk. You can also run lines of code line-by-line if you place your cursor on some R code and press ⌘ + enter (for macOS users) or ctrl + enter (for Windows users).\nMake sure you run each chunk sequentially. If you run a chunk in the middle of the document without running previous ones, it might not work, since previous chunks might do things that later chunks depend on.\n  When you\u0026rsquo;re all done, click on the \u0026ldquo;Knit\u0026rdquo; button at the top of the editing window and create an HTML or Word version (or PDF if you\u0026rsquo;ve installed tinytex) of your document. Upload that file to iCollege.\n  ","date":1618790400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618790400,"objectID":"6e2fa3adc24a54ff7a509ba8feddc0c2","permalink":"/assignment/09-problem-set/","publishdate":"2021-04-19T00:00:00Z","relpermalink":"/assignment/09-problem-set/","section":"assignment","summary":"This assignment will give you practice generating synthetic data and building in causal effects.\nThese two examples will be incredibly helpful:\n Generating random numbers The ultimate guide to generating synthetic data for causal inference  You\u0026rsquo;ll be doing all your R work in R Markdown.","tags":null,"title":"Problem set 9","type":"docs"},{"authors":null,"categories":null,"content":"For this problem set, you\u0026rsquo;ll practice doing regression discontinuity analysis with simulated data from a hypothetical program. This example page will be incredibly useful for you:\n Regression discontinuity  You\u0026rsquo;ll be doing all your R work in R Markdown. You can download a zipped file of a pre-made project here:\n  problem-set-6.zip  And as always, if you\u0026rsquo;re struggling, please talk to me. Work with classmates too (especially for this assignment!). Don\u0026rsquo;t suffer in silence!\nInstructions   If you\u0026rsquo;re using R on your own computer, download this file, unzip it, and double click on the file named problem-set-6.Rproj:  problem-set-6.zip\nYou\u0026rsquo;ll need to make sure you have these packages installed on your computer: tidyverse, broom, rdrobust, rddensity, and modelsummary. If you try to load one of those packages with library(tidyverse) or library(rdrobust), etc., and R gives an error that the package is missing, use the \u0026ldquo;Packages\u0026rdquo; panel in RStudio to install it.\n(Alternatively, you can open the project named \u0026ldquo;Problem Set 6\u0026rdquo; on RStudio.cloud and complete the assignment in your browser without needing to install anything. This link should take you to the project—if it doesn\u0026rsquo;t, log in and look for the project named \u0026ldquo;Problem Set 6.\u0026quot;)\n  Rename the R Markdown file named your-name_problem-set-6.Rmd to something that matches your name and open it in RStudio.\n  Complete the tasks given in the R Markdown file. There are questions marked in bold. Your job is to answer those questions. You don\u0026rsquo;t need to put your answers in bold or ALL CAPS or anything, and you can remove the question text if you want.\nFill out code in the empty chunks provided (you can definitely copy, paste, and adapt from other code in the document or the example page on regression discontinuity—don\u0026rsquo;t try to write everything from scratch!).\nYou\u0026rsquo;ll need to insert your own code chunks. Rather than typing them by hand (that\u0026rsquo;s tedious!), use the \u0026ldquo;Insert\u0026rdquo; button at the top of the editing window, or press ⌥ + ⌘ + I on macOS, or ctrl + alt + I on Windows.\nRemember that you can run an entire chunk by clicking on the green play arrow in the top right corner of the chunk. You can also run lines of code line-by-line if you place your cursor on some R code and press ⌘ + enter (for macOS users) or ctrl + enter (for Windows users).\nMake sure you run each chunk sequentially. If you run a chunk in the middle of the document without running previous ones, it might not work, since previous chunks might do things that later chunks depend on.\n  When you\u0026rsquo;re all done, click on the \u0026ldquo;Knit\u0026rdquo; button at the top of the editing window and create an HTML or Word version (or PDF if you\u0026rsquo;ve installed tinytex) of your document. Upload that file to iCollege.\n  ","date":1616976000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1616976000,"objectID":"e5e6f92df01daa4f8a074400ebb41bb3","permalink":"/assignment/06-problem-set/","publishdate":"2021-03-29T00:00:00Z","relpermalink":"/assignment/06-problem-set/","section":"assignment","summary":"For this problem set, you\u0026rsquo;ll practice doing regression discontinuity analysis with simulated data from a hypothetical program. This example page will be incredibly useful for you:\n Regression discontinuity  You\u0026rsquo;ll be doing all your R work in R Markdown.","tags":null,"title":"Problem set 6","type":"docs"},{"authors":null,"categories":null,"content":"\r\r\rContenidos (): Esta página contiene las presentaciones, sesiones grabadas y lecturas correspondientes al tema.\n\rPrácticos (): Esta página contiene los ejercicios prácticos asociados a cada sesión de clase. Podrás encontrar tanto el código de R cómo, en algunos casos, los videos grabados del live coding. Esta página será muy importante para la entrega de las tareas.\n\r\rPuedes suscribir la planificación del curso con la URL del calendario en Outlook, Google Calendar o Apple Calendar:\n \r\r\rAnálisis de Datos en R\rContenidos\rPrácticos\r\r\rUnidad 1. Elementos y herramientas básicos de R\r\r\r\r\r\rBloque 1\n(10 enero - 14:30 a 15:50)\r1.1 R enviroment: interfaz de RStudio, elementos de script, workspace\n1.2 Prácticas y herramientas de consulta y comunicación: CRAN, stackoverflow, Rcommunity, Slack\n1.3 Librerías y funciones para las ciencias sociales: tidyverse y sj (sjmisc y sjPlot)\r\r\r\r\rUnidad 2. Manipulación y limpieza de datos\r\r\r\r\r\rBloque 2\n(11 enero - 16:00 a 17:20)\r2.1 Importar/exportar datos en diferentes formatos\n2.2 Validación y limpieza de variables\r\r\r\rBloque 3\n(11 enero - 17:30 a 19:00)\r2.3 Transformación y selección de variables\r\r\r\r\rUnidad 3. Análisis estadístico descriptivo en R\r\r\r\r\r\rBloque 4\n(12 enero - 16:00 a 17:20)\r3.1 Análisis descriptivos univariados: medidas de tendencia central, dispersión y frecuencias\n3.2 Análisis bivariado: tablas de contingencia, correlaciones y ANOVA\r\r\r\r\rUnidad 4. Análisis estadístico inferencial en R\r\r\r\r\r\rBloque 5\n(Opcional)\r4.1 Muestras complejas y precisión de inferencia estadística\r\r\r\rBloque 6\n(12 enero - 17:30 a 19:00)\r4.2 Regresiones lineales, predictores categóricos y representación gráfica\n4.3 Regresiones logísticas, exponenciación y representación gráfica\r\r\r\r28 enero\r Entrega de proyecto final (opcional)\r\r\r\r\r\r\r\rPuedes descargar el programa apretando el siguiente botón:\r\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3e223d7ba58b0122b42458e4cf52e04c","permalink":"/schedule/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/schedule/","section":"","summary":"Contenidos (): Esta página contiene las presentaciones, sesiones grabadas y lecturas correspondientes al tema.\n\rPrácticos (): Esta página contiene los ejercicios prácticos asociados a cada sesión de clase.","tags":null,"title":"Calendario","type":"page"},{"authors":null,"categories":null,"content":"\r\r\rPresentación\r\rDescripción\rObjetivos\r\rObjetivo general\rObjetivos específicos\r\r\rI. Contenidos\r\rUnidad 1. Elementos y herramientas básicos de R\rUnidad 2. Manipulación y limpieza de datos\rUnidad 3. Análisis estadístico descriptivo en R\rUnidad 4. Análisis estadístico inferencial en R\r\rII. Metodología del curso\r\rRecursos principales de aprendizaje\r\rIII. Evaluación de aprendizajes\rIV. Calendario de actividades\rV. Recursos pedagógicos\r\r1. Referencias bibliográficas\r2. Sitios de consulta\r\rDescargar programa en pdf\r\r\rDocente\r Valentina Andrade\rvalentinaandrade.netlify.app/\r valentinaandrade@uchile.cl\r @valentiandrade\r Agendar reunión\r\r\rAyudantes\r Nicolas Godoy\r nicolas.godoy.m@ug.uchile.cl\r Agendar reunión\r Dafne Jaime\r dafne.jaime@ug.uchile.cl\r Agendar reunión\r\r\rDetalles de los talleres\r Clases: Lunes 10, Martes 11 y Miércoles 13, 16.00-19.00\r Enero\r Online, en link de Zoom Slack\r\r\rContacto\rEl canal de contacto de preferencia es Slack, y en segunda instancia, email.\n\r\rPresentación\rR es uno de los lenguajes de programación estadística más populares y demandados del último tiempo. Una de las razones principales es que tanto el software como la comunidad que hace uso de este se maneja en un marco de la ciencia abierta (r Open Science Tools o rOpensci), permitiendo el desarrollo constante de una serie de herramientas que permiten mejorar nuestras investigaciones, de manera libre, gratis y colaborativa.\nPara las ciencias sociales estos elementos no son triviales. Es frecuente encontrarse con personas de nuestro campo que se están iniciando en R y desisten de este intento dada la frustración y pensamientos de incapacidad. Aprender R puede ser difícil al iniciar – es como aprender cualquier otro lenguaje o idioma -, y poco se ha pensado en cómo implementar enseñanza a grupos más expuestos a estos prejuicios, como en las ciencias sociales y humanidades.\nSe propone que un curso de introducción de R para análisis de datos sociales puede abordar estos desafíos basado en enseñar herramientas concretas que faciliten y potencien las investigaciones sociales. Basada en la experiencia de enseñanza de R en contextos similares, esto implica introducir prácticas del rOpensci como la colaboración y reproducibilidad, que facilitan sin duda el aprendizaje colectivo y la calidad de los productos desarrollados durante el curso.\n¡Iniciemos este desafío juntas/os!\nDescripción\rEste curso busca introducir a estudiante en el uso de R y RStudio para el análisis de datos sociales. En ese sentido, será una introducción al entorno R y a la interfaz de RStudio para su uso en contextos académicos. Al mismo tiempo, el curso profundiza en temas específicos para las ciencias sociales como el análisis estadístico y la presentación de resultados (visualización de datos).\n\rObjetivos\rObjetivo general\rAprender las principales herramientas para el análisis de datos sociales en RStudio, con el fin de lograr un uso autónomo del software\n\rObjetivos específicos\rEl curso no es un curso de programación en R , sino que una aplicación concreta del uso de R para ciencias sociales. Por ello, el curso tiene como propósito específico que los estudiantes sean capaces de\nManejar R y herramientas asociadas a su utilización (rOpensci), utilizando prácticas que les permitan avanzar en su aprendizaje de manera autónoma (Unidad 1)\n\rManipular, procesar y limpiar datos sociales utilizando R (Unidad 2)\n\rAplicar herramientas para análisis estadísticos descriptivos en R (Unidad 3)\n\rAplicar herramientas para análisis estadísticos inferenciales en R (Unidad 4)\n\rPresentar de resultados, a partir de la visualización de datos y construcción de documentos (transversal a todas las unidades)\n\r\r\r\r\rI. Contenidos\rUnidad 1. Elementos y herramientas básicos de R\r1.1 R enviroment: interfaz de RStudio, elementos de script, workspace\n1.2 Prácticas y herramientas de consulta: CRAN, stackoverflow, Rcommunity\n1.3 Herramientas para la colaboración y comunicación: Rprojects, GitHub y Slack\n1.4 Librerías y funciones para las ciencias sociales: tidyverse y sj (sjmisc y sjPlot)\n1.5 Construcción de reportes reproducibles e integrados con código: RMarkdown\n\rUnidad 2. Manipulación y limpieza de datos\r2.1 Importar y exportar datos en diferentes formatos\n2.2 Validación y limpieza de variables (missing values)\n2.3 Transformación y selección de variables\n2.4 Transformación de datos en tidydata con tidyr\n\rUnidad 3. Análisis estadístico descriptivo en R\r3.1 Análisis descriptivos univariados: medidas de tendencia central, dispersión y frecuencias\n3.2 Análisis descriptivo bivariado: tablas de contingencia, correlaciones y ANOVA\n3.3 Representación gráfica con sjPlot: Likert, proporciones agrupadas y distribuciones\n\rUnidad 4. Análisis estadístico inferencial en R\r4.1 Muestras complejas y precisión de inferencia estadística con survey y srvyr\n4.2 Pruebas de hipótesis y representación gráfica\n4.3 Regresiones lineales, predictores categóricos y representación gráfica\n4.4 Regresiones logísticas, exponenciación y representación gráfica\n4.5 Ajuste de modelos (performance) y otras representaciones gráficas (predicción, efectos marginales e interacciones)\n\r\rII. Metodología del curso\rDado el contexto de pandemia se tendrán tres espacios principales de aprendizaje:\nSesiones de clases lectivas (), donde se presentarán los aspectos centrales de los contenidos correspondientes a la semana vía Zoom. Tanto el documento de presentación como el video de la clase se encontrará disponible en la pestaña de Clases de este sitio web del curso.\n\rPrácticas guiadas (): cada tema de las sesiones se acompaña de una guía práctica de aplicación de contenidos, y que estarán disponibles en la pestaña Prácticos. Estas guías están diseñadas para ser desarrolladas de manera autónoma por cada estudiante semana a semana. También serán desarrolladas y revisadas cada semana en grupos pequeños con supervisión de ayudantes para dar mayor oportunidad de participación y resolver las dudas respectivas. Existe un reporte de progreso asociado a estas guías que deberá ser completado semanalmente con fines de monitoreo y retroalimentación.\n\rTareas: se desarrollarán 6 tareas que les permitirán aplicar contenidos y replicar lo aprendido en los prácticos en base a una base de datos seleccionada por ustedes al inicio de semestre. Esto permitirá no solo recibir retroalimentación constante, sino que aprender con datos que puedan ser útiles para otros proyectos de investigación que sean de su interés.\n\r\rRecursos principales de aprendizaje\r1. Sitio web\nEl curso tiene disponible este sitio web, que he programado pues permite integrar texto y código de R, junto con hacer interactuar con otras plataformas como el foro Disqus y Github.\n2. R, RStudio y RStudio Cloud \nEl software que se utilizará principalmente será R y su interfaz RStudio. Ahora bien, muchos usuario/as de R presentan problemas de instalación dada la capacidad de sus computadores y sistemas operativos. Por ello se promoverá el uso del servicio gratuito de RStudio.cloud , que permite ejecutar la interfaz de RStudio en el navegador web y compartir el código de manera sincrónica con la docente. Dado el enfoque rOpensci, las plantillas para ejemplos, ejercicios y mini proyectos podrán ser implementados en esta plataforma. Si bien no es ideal pues tiene limitantes de memoria, mientras ustedes asimilan el programa será una buena herramienta.\n3. Slack \nSlack es una herramienta de uso frecuente en equipos de trabajo que utilizan R pues permite integrar script (o código) de distintos lenguajes en el chat. Se tendrá un espacio de trabajo en la app Slack que permite que cualquier persona del curso pueda hacer preguntas y cualquiera pueda responder. Esta es una de las prácticas que se promoverán en el curso pues es probable que los estudiantes tengan dudas similares a las de sus compañeros, por lo que las respuestas de la docente, ayudante y otros compañeros serán de libre disposición de todo el curso. Dentro del Slack se tendrán canales para hacer preguntas sobre las sesiones, tareas y proyectos, y el link que permite unirse a este estará disponible en el sitio del curso.\n Guía de uso de slack\n Unirse a slack de curso\n4. GitHub \nGithub es una plataforma online que permite depositar archivos y el control de versiones (VCS), por lo que se ha transformado una herramienta fácil y popular para corregir, colaborar y compartir códigos de distintos lenguajes (no solo R). Utilizaremos esta plataforma para subir las tareas, ayudarlos/as de manera directa con su código y darles feedback.\n5. Zotero \nZotero es un gestor bibliográfico que permite sistematizar las referencias y archivos utilizados en una investigación o informe. Enseñaremos este de manera complementaria pues este software se puede integrar en los documentos escritos hechos en R.\n\r\rIII. Evaluación de aprendizajes\rLas evaluaciones del curso se componen de tareas (70% de la nota final) y la entrega de una investigación (30% de la nota final), en dónde en ambos casos la/el estudiante deberá seleccionar datos y temas de interés de modo de acercar la aplicación del software a contextos de investigación propios de la/el estudiante. En concreto, cada evaluación consiste en:\n1. Tareas (70% de la nota final): consisten en evaluaciones parciales temáticas que buscan poner en práctica los aprendizajes expuestos en la sesión de clases y herramientas reforzadas en los prácticos. El promedio de notas las de tareas será calculado solo con las cuatro mejores entregas a partir de la Tarea 1 (25% c/u)1.\n2. Investigación final (30% de la nota final): consiste en una evaluación final que aplica los conocimientos y herramientas entregadas a lo largo de curso, a un proyecto de investigación de elección por el/la estudiante.\n\rIV. Calendario de actividades\rEl calendario de actividades se puede revisar con detención en la pestaña planificación. Un resumen breve de las tareas es\n\r\rEvaluación\rFormato\rFecha\rPonderación Nota Final\r\r\r\rTarea\r4 tareas2\rHasta Viernes de la semana informada\r70% (25% c/u)\r\rInvestigación\rÚnica entrega\r22 de noviembre\r30%\r\r\r\r\rV. Recursos pedagógicos\r1. Referencias bibliográficas\r\rWickham, H., \u0026amp; Grolemund, G. (2016). R for data science: import, tidy, transform, visualize, and model data (First edition). Sebastopol: O’Reilly. Libro con enfoque en el aprendizaje de R. Disponible en español como “R para ciencia de datos”\n\rDaniel Lüdecke (2021) Data Visualization for Statistics in Social Science R package version 2.8.7\n\rWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686\n\rYihui Xie, J. J. Allaire, Garrett Grolemund (2021) R Markdown: The Definitive Guide\n\rBryan, Jenny (2019) Happy Git in R\n\r\r\r2. Sitios de consulta\r\rrOpensci (R Open Scicnce Tools)\rLaboratorio de Ciencia Social Abierta, Centro de Estudios de Conflicto y Cohesión Social (LISA-COES)\rStackoverflow\rRStudio Community\rRMarkdown\rsjPlot\rtidyverse\r\r\r\rDescargar programa en pdf\r\n\r\rEs decir, a lo largo del semestre deberá entregar 6 tareas: 5 calificadas (Tarea 1 a Tarea 5) y 1 no (Tarea 0). De las 5 tareas restantes, solo las 4 mejores serán consideradas en su promedio de las tareas.↩︎\n\rEs decir, a lo largo del semestre deberá entregar 6 tareas: 5 calificadas (Tarea 1 a Tarea 5) y 1 no (Tarea 0). De las 5 tareas restantes, solo las 4 mejores serán consideradas en su promedio de las tareas.↩︎\n\r\r\r","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e4d5a4a79239f08c6ad0d7cbf1be756c","permalink":"/syllabus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/syllabus/","section":"","summary":"Presentación\r\rDescripción\rObjetivos\r\rObjetivo general\rObjetivos específicos\r\r\rI. Contenidos\r\rUnidad 1. Elementos y herramientas básicos de R\rUnidad 2. Manipulación y limpieza de datos\rUnidad 3.","tags":null,"title":"Syllabus","type":"page"}]